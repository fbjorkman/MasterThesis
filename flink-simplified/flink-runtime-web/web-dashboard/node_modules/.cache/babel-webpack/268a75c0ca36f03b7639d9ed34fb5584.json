{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { flatMap, takeUntil } from 'rxjs/operators';\nimport { isNil } from 'utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"ng-zorro-antd/message\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-zorro-antd/card\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"share/customize/task-badge/task-badge.component\";\nimport * as i8 from \"share/customize/job-badge/job-badge.component\";\nimport * as i9 from \"../../pipes/humanize-date.pipe\";\nimport * as i10 from \"../../pipes/humanize-duration.pipe\";\n\nfunction JobListComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 6);\n    i0.ɵɵlistener(\"click\", function JobListComponent_tr_18_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const job_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.navigateToJob(job_r2);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"humanizeDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"humanizeDuration\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"humanizeDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵelement(13, \"flink-task-badge\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵelement(15, \"flink-job-badge\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const job_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(job_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 6, job_r2[\"start-time\"], \"yyyy-MM-dd HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 9, job_r2.duration));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 11, job_r2[\"end-time\"], \"yyyy-MM-dd HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"tasks\", job_r2.tasks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"state\", job_r2.state);\n  }\n}\n\nexport let JobListComponent = /*#__PURE__*/(() => {\n  class JobListComponent {\n    constructor(statusService, jobService, nzMessageService, activatedRoute, cdr, router) {\n      this.statusService = statusService;\n      this.jobService = jobService;\n      this.nzMessageService = nzMessageService;\n      this.activatedRoute = activatedRoute;\n      this.cdr = cdr;\n      this.router = router;\n      this.listOfJob = [];\n      this.isLoading = true;\n      this.destroy$ = new Subject();\n      this.sortName = 'start-time';\n      this.sortValue = 'descend';\n      this.completed = false;\n\n      this.sortStartTimeFn = (pre, next) => pre['start-time'] - next['start-time'];\n\n      this.sortDurationFn = (pre, next) => pre.duration - next.duration;\n\n      this.sortEndTimeFn = (pre, next) => pre['end-time'] - next['end-time'];\n\n      this.sortStateFn = (pre, next) => pre.state.localeCompare(next.state);\n    }\n\n    trackJobBy(_, node) {\n      return node.jid;\n    }\n\n    navigateToJob(job) {\n      if (job.state === 'INITIALIZING') {\n        this.nzMessageService.info('Job detail page is not available while it is in state INITIALIZING.');\n      } else {\n        this.router.navigate(['job', job.jid]).then();\n      }\n    }\n\n    ngOnInit() {\n      if (this.activatedRoute.snapshot.data) {\n        this.completed = isNil(this.activatedRoute.snapshot.data.completed) ? this.completed : this.activatedRoute.snapshot.data.completed;\n        this.title = isNil(this.activatedRoute.snapshot.data.title) ? this.title : this.activatedRoute.snapshot.data.title;\n      }\n\n      this.jobData$ = this.jobData$ || this.statusService.refresh$.pipe(takeUntil(this.destroy$), flatMap(() => this.jobService.loadJobs()));\n      this.jobData$.subscribe(data => {\n        this.isLoading = false;\n        this.listOfJob = data.filter(item => item.completed === this.completed);\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobListComponent.ɵfac = function JobListComponent_Factory(t) {\n    return new (t || JobListComponent)(i0.ɵɵdirectiveInject(i1.StatusService), i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i2.NzMessageService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  JobListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobListComponent,\n    selectors: [[\"flink-job-list\"]],\n    inputs: {\n      completed: \"completed\",\n      title: \"title\",\n      jobData$: \"jobData$\"\n    },\n    decls: 19,\n    vars: 13,\n    consts: [[3, \"nzBordered\", \"nzTitle\", \"nzLoading\"], [1, \"no-border\", 3, \"nzSize\", \"nzData\", \"nzFrontPagination\", \"nzShowPagination\"], [\"table\", \"\"], [\"nzWidth\", \"40%\"], [3, \"nzSortFn\"], [\"class\", \"clickable\", 3, \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"clickable\", 3, \"click\"], [3, \"tasks\"], [3, \"state\"]],\n    template: function JobListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-card\", 0);\n        i0.ɵɵelementStart(1, \"nz-table\", 1, 2);\n        i0.ɵɵelementStart(3, \"thead\");\n        i0.ɵɵelementStart(4, \"tr\");\n        i0.ɵɵelementStart(5, \"th\", 3);\n        i0.ɵɵtext(6, \"Job Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\", 4);\n        i0.ɵɵtext(8, \"Start Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\", 4);\n        i0.ɵɵtext(10, \"Duration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 4);\n        i0.ɵɵtext(12, \"End Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 4);\n        i0.ɵɵtext(16, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"tbody\");\n        i0.ɵɵtemplate(18, JobListComponent_tr_18_Template, 16, 14, \"tr\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"nzBordered\", false)(\"nzTitle\", ctx.title)(\"nzLoading\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzSize\", \"small\")(\"nzData\", ctx.listOfJob)(\"nzFrontPagination\", false)(\"nzShowPagination\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortStartTimeFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortDurationFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortEndTimeFn);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortStateFn);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", _r0.data)(\"ngForTrackBy\", ctx.trackJobBy);\n      }\n    },\n    directives: [i4.NzCardComponent, i5.NzTableComponent, i5.NzTheadComponent, i5.NzTrDirective, i5.NzTableCellDirective, i5.NzThMeasureDirective, i5.NzThAddOnComponent, i5.NzTbodyComponent, i6.NgForOf, i7.TaskBadgeComponent, i8.JobBadgeComponent],\n    pipes: [i9.HumanizeDatePipe, i10.HumanizeDurationPipe],\n    styles: [\"[_nghost-%COMP%]     .ant-card-body{padding:24px 16px}\"],\n    changeDetection: 0\n  });\n  return JobListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}