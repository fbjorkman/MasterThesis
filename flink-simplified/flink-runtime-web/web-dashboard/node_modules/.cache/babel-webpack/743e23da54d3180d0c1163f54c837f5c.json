{"ast":null,"code":"import { first, flatMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"ng-zorro-antd/card\";\nimport * as i3 from \"ng-zorro-antd/table\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction TaskManagerLogListComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"a\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const log_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, log_r1.name));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(log_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 3, log_r1.size / 1024, \"1.0-2\"));\n  }\n}\n\nconst _c1 = function () {\n  return {\n    y: \"570px\"\n  };\n};\n\nexport let TaskManagerLogListComponent = /*#__PURE__*/(() => {\n  class TaskManagerLogListComponent {\n    constructor(taskManagerService, cdr) {\n      this.taskManagerService = taskManagerService;\n      this.cdr = cdr;\n      this.listOfLog = [];\n      this.isLoading = true;\n\n      this.trackByName = (_, log) => log.name;\n    }\n\n    ngOnInit() {\n      this.taskManagerService.taskManagerDetail$.pipe(first(), flatMap(data => this.taskManagerService.loadLogList(data.id))).subscribe(data => {\n        this.listOfLog = data;\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }, () => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      });\n    }\n\n  }\n\n  TaskManagerLogListComponent.ɵfac = function TaskManagerLogListComponent_Factory(t) {\n    return new (t || TaskManagerLogListComponent)(i0.ɵɵdirectiveInject(i1.TaskManagerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TaskManagerLogListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskManagerLogListComponent,\n    selectors: [[\"flink-task-manager-log-list\"]],\n    decls: 10,\n    vars: 10,\n    consts: [[\"nzBordered\", \"\", 3, \"nzSize\", \"nzData\", \"nzLoading\", \"nzFrontPagination\", \"nzShowPagination\", \"nzVirtualItemSize\", \"nzVirtualForTrackBy\", \"nzScroll\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n    template: function TaskManagerLogListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-card\");\n        i0.ɵɵelementStart(1, \"nz-table\", 0);\n        i0.ɵɵelementStart(2, \"thead\");\n        i0.ɵɵelementStart(3, \"tr\");\n        i0.ɵɵelementStart(4, \"th\");\n        i0.ɵɵtext(5, \"Log Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Size (KB)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"tbody\");\n        i0.ɵɵtemplate(9, TaskManagerLogListComponent_tr_9_Template, 7, 8, \"tr\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzSize\", \"small\")(\"nzData\", ctx.listOfLog)(\"nzLoading\", ctx.isLoading)(\"nzFrontPagination\", false)(\"nzShowPagination\", false)(\"nzVirtualItemSize\", 39)(\"nzVirtualForTrackBy\", ctx.trackByName)(\"nzScroll\", i0.ɵɵpureFunction0(9, _c1));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfLog);\n      }\n    },\n    directives: [i2.NzCardComponent, i3.NzTableComponent, i3.NzTheadComponent, i3.NzTrDirective, i3.NzTableCellDirective, i3.NzThMeasureDirective, i3.NzTbodyComponent, i4.NgForOf, i5.RouterLinkWithHref],\n    pipes: [i4.DecimalPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TaskManagerLogListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}