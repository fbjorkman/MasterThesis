{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport { MonacoEditorComponent } from 'share/common/monaco-editor/monaco-editor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-zorro-antd/breadcrumb\";\nimport * as i4 from \"ng-zorro-antd/icon\";\nimport * as i5 from \"share/customize/refresh-download/refresh-download.component\";\nimport * as i6 from \"share/common/monaco-editor/monaco-editor.component\";\n\nconst _c0 = function () {\n  return [\"../\"];\n};\n\nexport let JobManagerLogDetailComponent = /*#__PURE__*/(() => {\n  class JobManagerLogDetailComponent {\n    constructor(jobManagerService, cdr, activatedRoute) {\n      this.jobManagerService = jobManagerService;\n      this.cdr = cdr;\n      this.activatedRoute = activatedRoute;\n      this.logs = '';\n      this.logName = '';\n      this.downloadUrl = '';\n      this.isLoading = false;\n      this.isFullScreen = false;\n    }\n\n    reload() {\n      this.isLoading = true;\n      this.cdr.markForCheck();\n      this.jobManagerService.loadLog(this.logName).pipe(finalize(() => {\n        this.isLoading = false;\n        this.layoutEditor();\n        this.cdr.markForCheck();\n      })).subscribe(data => {\n        this.logs = data.data;\n        this.downloadUrl = data.url;\n      });\n    }\n\n    layoutEditor() {\n      setTimeout(() => this.monacoEditorComponent.layout());\n    }\n\n    toggleFullScreen(fullScreen) {\n      this.isFullScreen = fullScreen;\n      this.layoutEditor();\n    }\n\n    ngOnInit() {\n      this.logName = this.activatedRoute.snapshot.params.logName;\n      this.reload();\n    }\n\n  }\n\n  JobManagerLogDetailComponent.ɵfac = function JobManagerLogDetailComponent_Factory(t) {\n    return new (t || JobManagerLogDetailComponent)(i0.ɵɵdirectiveInject(i1.JobManagerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  JobManagerLogDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobManagerLogDetailComponent,\n    selectors: [[\"flink-job-manager-log-detail\"]],\n    viewQuery: function JobManagerLogDetailComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MonacoEditorComponent, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monacoEditorComponent = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function JobManagerLogDetailComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"full-screen\", ctx.isFullScreen);\n      }\n    },\n    decls: 10,\n    vars: 7,\n    consts: [[1, \"breadcrumb\"], [3, \"routerLink\"], [\"nz-icon\", \"\", \"nzType\", \"rollback\", \"nzTheme\", \"outline\"], [3, \"isLoading\", \"downloadHref\", \"downloadName\", \"reload\", \"fullScreen\"], [3, \"value\"]],\n    template: function JobManagerLogDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"nz-breadcrumb\");\n        i0.ɵɵelementStart(2, \"nz-breadcrumb-item\");\n        i0.ɵɵelementStart(3, \"a\", 1);\n        i0.ɵɵelement(4, \"i\", 2);\n        i0.ɵɵtext(5, \" Log List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"nz-breadcrumb-item\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"flink-refresh-download\", 3);\n        i0.ɵɵlistener(\"reload\", function JobManagerLogDetailComponent_Template_flink_refresh_download_reload_8_listener() {\n          return ctx.reload();\n        })(\"fullScreen\", function JobManagerLogDetailComponent_Template_flink_refresh_download_fullScreen_8_listener($event) {\n          return ctx.toggleFullScreen($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"flink-monaco-editor\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.logName, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading)(\"downloadHref\", ctx.downloadUrl)(\"downloadName\", ctx.logName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.logs);\n      }\n    },\n    directives: [i3.NzBreadCrumbComponent, i3.NzBreadCrumbItemComponent, i2.RouterLinkWithHref, i4.NzIconDirective, i5.RefreshDownloadComponent, i6.MonacoEditorComponent],\n    styles: [\"[_nghost-%COMP%]{display:block;height:100%}.full-screen[_nghost-%COMP%]{position:fixed;top:0;bottom:0;right:0;left:0;background:#fff;z-index:99}.full-screen[_nghost-%COMP%]   flink-monaco-editor[_ngcontent-%COMP%]{height:calc(100vh - 46px)}flink-monaco-editor[_ngcontent-%COMP%]{height:calc(100vh - 205px)}.breadcrumb[_ngcontent-%COMP%]{background:#fff;border-bottom:1px solid #f0f0f0;padding:12px 24px;position:relative}flink-refresh-download[_ngcontent-%COMP%]{position:absolute;right:12px;top:0;line-height:47px}\"],\n    changeDetection: 0\n  });\n  return JobManagerLogDetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}