{"ast":null,"code":"import { ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Directive, ChangeDetectorRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule, Injectable, Injector, Input, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport * as i2 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i1 from 'ng-zorro-antd/core/services';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\n\nfunction NzMessageContainerComponent_nz_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-message\", 2);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r1);\n  }\n}\n\nfunction NzMessageComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 10);\n  }\n}\n\nfunction NzMessageComponent_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 11);\n  }\n}\n\nfunction NzMessageComponent_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 12);\n  }\n}\n\nfunction NzMessageComponent_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n  }\n}\n\nfunction NzMessageComponent_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NzMessageComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r5.instance.content, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nlet globalCounter = 0;\n\nclass NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    this.nzSingletonService = nzSingletonService;\n    this.overlay = overlay;\n    this.injector = injector;\n  }\n\n  remove(id) {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  getInstanceId() {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  withContainer(ctor) {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n\n    if (containerInstance) {\n      return containerInstance;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance;\n  }\n\n}\n\nlet NzMNContainerComponent = /*#__PURE__*/(() => {\n  class NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n      this.cdr = cdr;\n      this.nzConfigService = nzConfigService;\n      this.instances = [];\n      this.destroy$ = new Subject();\n      this.updateConfig();\n    }\n\n    ngOnInit() {\n      this.subscribeConfigChange();\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    create(data) {\n      const instance = this.onCreate(data);\n\n      if (this.instances.length >= this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n\n      this.instances = [...this.instances, instance];\n      this.readyInstances();\n      return instance;\n    }\n\n    remove(id, userAction = false) {\n      this.instances.some((instance, index) => {\n        if (instance.messageId === id) {\n          this.instances.splice(index, 1);\n          this.instances = [...this.instances];\n          this.onRemove(instance, userAction);\n          this.readyInstances();\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    removeAll() {\n      this.instances.forEach(i => this.onRemove(i, false));\n      this.instances = [];\n      this.readyInstances();\n    }\n\n    onCreate(instance) {\n      instance.options = this.mergeOptions(instance.options);\n      instance.onClose = new Subject();\n      return instance;\n    }\n\n    onRemove(instance, userAction) {\n      instance.onClose.next(userAction);\n      instance.onClose.complete();\n    }\n\n    readyInstances() {\n      this.cdr.detectChanges();\n    }\n\n    mergeOptions(options) {\n      const {\n        nzDuration,\n        nzAnimate,\n        nzPauseOnHover\n      } = this.config;\n      return Object.assign({\n        nzDuration,\n        nzAnimate,\n        nzPauseOnHover\n      }, options);\n    }\n\n  }\n\n  NzMNContainerComponent.ɵfac = function NzMNContainerComponent_Factory(t) {\n    return new (t || NzMNContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n  };\n\n  NzMNContainerComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NzMNContainerComponent\n  });\n  return NzMNContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NzMNComponent = /*#__PURE__*/(() => {\n  class NzMNComponent {\n    constructor(cdr) {\n      this.cdr = cdr;\n      this.destroyed = new EventEmitter();\n      this.animationStateChanged = new Subject();\n      this.userAction = false;\n      this.eraseTimer = null;\n    }\n\n    ngOnInit() {\n      this.options = this.instance.options;\n\n      if (this.options.nzAnimate) {\n        this.instance.state = 'enter';\n        this.animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1)).subscribe(() => {\n          clearTimeout(this.closeTimer);\n          this.destroyed.next({\n            id: this.instance.messageId,\n            userAction: this.userAction\n          });\n        });\n      }\n\n      this.autoClose = this.options.nzDuration > 0;\n\n      if (this.autoClose) {\n        this.initErase();\n        this.startEraseTimeout();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.autoClose) {\n        this.clearEraseTimeout();\n      }\n\n      this.animationStateChanged.complete();\n    }\n\n    onEnter() {\n      if (this.autoClose && this.options.nzPauseOnHover) {\n        this.clearEraseTimeout();\n        this.updateTTL();\n      }\n    }\n\n    onLeave() {\n      if (this.autoClose && this.options.nzPauseOnHover) {\n        this.startEraseTimeout();\n      }\n    }\n\n    destroy(userAction = false) {\n      this.userAction = userAction;\n\n      if (this.options.nzAnimate) {\n        this.instance.state = 'leave';\n        this.cdr.detectChanges();\n        this.closeTimer = setTimeout(() => {\n          this.closeTimer = undefined;\n          this.destroyed.next({\n            id: this.instance.messageId,\n            userAction\n          });\n        }, 200);\n      } else {\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction\n        });\n      }\n    }\n\n    initErase() {\n      this.eraseTTL = this.options.nzDuration;\n      this.eraseTimingStart = Date.now();\n    }\n\n    updateTTL() {\n      if (this.autoClose) {\n        this.eraseTTL -= Date.now() - this.eraseTimingStart;\n      }\n    }\n\n    startEraseTimeout() {\n      if (this.eraseTTL > 0) {\n        this.clearEraseTimeout();\n        this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n        this.eraseTimingStart = Date.now();\n      } else {\n        this.destroy();\n      }\n    }\n\n    clearEraseTimeout() {\n      if (this.eraseTimer !== null) {\n        clearTimeout(this.eraseTimer);\n        this.eraseTimer = null;\n      }\n    }\n\n  }\n\n  NzMNComponent.ɵfac = function NzMNComponent_Factory(t) {\n    return new (t || NzMNComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NzMNComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NzMNComponent\n  });\n  return NzMNComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24,\n  nzDirection: 'ltr'\n};\nlet NzMessageContainerComponent = /*#__PURE__*/(() => {\n  class NzMessageContainerComponent extends NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n      super(cdr, nzConfigService);\n      this.destroy$ = new Subject();\n      this.dir = 'ltr';\n      this.instances = [];\n      const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n      this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n    }\n\n    subscribeConfigChange() {\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.updateConfig();\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n\n        if (config) {\n          const {\n            nzDirection\n          } = config;\n          this.dir = nzDirection || this.dir;\n        }\n      });\n    }\n\n    updateConfig() {\n      this.config = Object.assign(Object.assign(Object.assign({}, NZ_MESSAGE_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME));\n      this.top = toCssPixel(this.config.nzTop);\n      this.cdr.markForCheck();\n    }\n\n  }\n\n  NzMessageContainerComponent.ɵfac = function NzMessageContainerComponent_Factory(t) {\n    return new (t || NzMessageContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n  };\n\n  NzMessageContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzMessageContainerComponent,\n    selectors: [[\"nz-message-container\"]],\n    exportAs: [\"nzMessageContainer\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[1, \"ant-message\"], [3, \"instance\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [3, \"instance\", \"destroyed\"]],\n    template: function NzMessageContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzMessageContainerComponent_nz_message_1_Template, 1, 1, \"nz-message\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.top);\n        ɵngcc0.ɵɵclassProp(\"ant-message-rtl\", ctx.dir === \"rtl\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.instances);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgForOf, NzMessageComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzMessageContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzMessageServiceModule = /*#__PURE__*/(() => {\n  class NzMessageServiceModule {}\n\n  NzMessageServiceModule.ɵfac = function NzMessageServiceModule_Factory(t) {\n    return new (t || NzMessageServiceModule)();\n  };\n\n  NzMessageServiceModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzMessageServiceModule\n  });\n  NzMessageServiceModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NzMessageServiceModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzMessageService = /*#__PURE__*/(() => {\n  class NzMessageService extends NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n      super(nzSingletonService, overlay, injector);\n      this.componentPrefix = 'message-';\n    }\n\n    success(content, options) {\n      return this.createInstance({\n        type: 'success',\n        content\n      }, options);\n    }\n\n    error(content, options) {\n      return this.createInstance({\n        type: 'error',\n        content\n      }, options);\n    }\n\n    info(content, options) {\n      return this.createInstance({\n        type: 'info',\n        content\n      }, options);\n    }\n\n    warning(content, options) {\n      return this.createInstance({\n        type: 'warning',\n        content\n      }, options);\n    }\n\n    loading(content, options) {\n      return this.createInstance({\n        type: 'loading',\n        content\n      }, options);\n    }\n\n    create(type, content, options) {\n      return this.createInstance({\n        type,\n        content\n      }, options);\n    }\n\n    createInstance(message, options) {\n      this.container = this.withContainer(NzMessageContainerComponent);\n      return this.container.create(Object.assign(Object.assign({}, message), {\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }));\n    }\n\n  }\n\n  NzMessageService.ɵfac = function NzMessageService_Factory(t) {\n    return new (t || NzMessageService)(ɵngcc0.ɵɵinject(ɵngcc3.NzSingletonService), ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n  };\n\n  NzMessageService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NzMessageService_Factory() {\n      return new NzMessageService(i0.ɵɵinject(i1.NzSingletonService), i0.ɵɵinject(i2.Overlay), i0.ɵɵinject(i0.INJECTOR));\n    },\n    token: NzMessageService,\n    providedIn: NzMessageServiceModule\n  });\n  return NzMessageService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzMessageComponent = /*#__PURE__*/(() => {\n  class NzMessageComponent extends NzMNComponent {\n    constructor(cdr) {\n      super(cdr);\n      this.destroyed = new EventEmitter();\n    }\n\n  }\n\n  NzMessageComponent.ɵfac = function NzMessageComponent_Factory(t) {\n    return new (t || NzMessageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NzMessageComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzMessageComponent,\n    selectors: [[\"nz-message\"]],\n    inputs: {\n      instance: \"instance\"\n    },\n    outputs: {\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"nzMessage\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"ant-message-notice\", 3, \"mouseenter\", \"mouseleave\"], [1, \"ant-message-notice-content\"], [1, \"ant-message-custom-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngSwitchCase\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [3, \"innerHTML\"]],\n    template: function NzMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@moveUpMotion.done\", function NzMessageComponent_Template_div_animation_moveUpMotion_done_0_listener($event) {\n          return ctx.animationStateChanged.next($event);\n        })(\"mouseenter\", function NzMessageComponent_Template_div_mouseenter_0_listener() {\n          return ctx.onEnter();\n        })(\"mouseleave\", function NzMessageComponent_Template_div_mouseleave_0_listener() {\n          return ctx.onLeave();\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementContainerStart(3, 3);\n        ɵngcc0.ɵɵtemplate(4, NzMessageComponent_i_4_Template, 1, 0, \"i\", 4);\n        ɵngcc0.ɵɵtemplate(5, NzMessageComponent_i_5_Template, 1, 0, \"i\", 5);\n        ɵngcc0.ɵɵtemplate(6, NzMessageComponent_i_6_Template, 1, 0, \"i\", 6);\n        ɵngcc0.ɵɵtemplate(7, NzMessageComponent_i_7_Template, 1, 0, \"i\", 7);\n        ɵngcc0.ɵɵtemplate(8, NzMessageComponent_i_8_Template, 1, 0, \"i\", 8);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵtemplate(9, NzMessageComponent_ng_container_9_Template, 2, 1, \"ng-container\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@moveUpMotion\", ctx.instance.state);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-message-\" + ctx.instance.type);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.instance.type);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"loading\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.instance.content);\n      }\n    },\n    directives: [ɵngcc2.NgClass, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective],\n    encapsulation: 2,\n    data: {\n      animation: [moveUpMotion]\n    },\n    changeDetection: 0\n  });\n  return NzMessageComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzMessageModule = /*#__PURE__*/(() => {\n  class NzMessageModule {}\n\n  NzMessageModule.ɵfac = function NzMessageModule_Factory(t) {\n    return new (t || NzMessageModule)();\n  };\n\n  NzMessageModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzMessageModule\n  });\n  NzMessageModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]]\n  });\n  return NzMessageModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzMessageModule, {\n    declarations: function () {\n      return [NzMessageContainerComponent, NzMessageComponent];\n    },\n    imports: function () {\n      return [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService, NzMessageServiceModule }; //# sourceMappingURL=ng-zorro-antd-message.js.map","map":null,"metadata":{},"sourceType":"module"}