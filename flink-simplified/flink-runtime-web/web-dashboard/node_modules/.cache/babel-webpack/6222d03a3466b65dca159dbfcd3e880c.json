{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { flatMap, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"ng-zorro-antd/table\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"share/pipes/humanize-watermark.pipe\";\n\nfunction JobOverviewDrawerWatermarksComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"humanizeWatermark\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const watermark_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(watermark_r1.subTaskIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, watermark_r1.watermark));\n  }\n}\n\nconst _c0 = function () {\n  return {\n    y: \"calc( 100% - 35px )\"\n  };\n};\n\nexport let JobOverviewDrawerWatermarksComponent = /*#__PURE__*/(() => {\n  class JobOverviewDrawerWatermarksComponent {\n    constructor(jobService, metricsService, cdr) {\n      this.jobService = jobService;\n      this.metricsService = metricsService;\n      this.cdr = cdr;\n      this.destroy$ = new Subject();\n      this.listOfWaterMark = [];\n      this.isLoading = true;\n    }\n\n    trackWatermarkBy(_, node) {\n      return node.subTaskIndex;\n    }\n\n    ngOnInit() {\n      this.jobService.jobWithVertex$.pipe(takeUntil(this.destroy$), flatMap(data => this.metricsService.getWatermarks(data.job.jid, data.vertex.id))).subscribe(data => {\n        const list = [];\n        this.isLoading = false;\n\n        for (const key in data.watermarks) {\n          list.push({\n            subTaskIndex: +key,\n            watermark: data.watermarks[key]\n          });\n        }\n\n        this.listOfWaterMark = list;\n        this.cdr.markForCheck();\n      }, () => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobOverviewDrawerWatermarksComponent.ɵfac = function JobOverviewDrawerWatermarksComponent_Factory(t) {\n    return new (t || JobOverviewDrawerWatermarksComponent)(i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i1.MetricsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  JobOverviewDrawerWatermarksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobOverviewDrawerWatermarksComponent,\n    selectors: [[\"flink-job-overview-drawer-watermarks\"]],\n    decls: 9,\n    vars: 9,\n    consts: [[1, \"no-border\", \"small\", \"full-height\", 3, \"nzSize\", \"nzLoading\", \"nzData\", \"nzScroll\", \"nzFrontPagination\", \"nzShowPagination\"], [\"nzWidth\", \"50%\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"]],\n    template: function JobOverviewDrawerWatermarksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-table\", 0);\n        i0.ɵɵelementStart(1, \"thead\");\n        i0.ɵɵelementStart(2, \"tr\");\n        i0.ɵɵelementStart(3, \"th\", 1);\n        i0.ɵɵtext(4, \"SubTask\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\", 1);\n        i0.ɵɵtext(6, \"Watermark\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"tbody\");\n        i0.ɵɵtemplate(8, JobOverviewDrawerWatermarksComponent_tr_8_Template, 6, 4, \"tr\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"nzSize\", \"small\")(\"nzLoading\", ctx.isLoading)(\"nzData\", ctx.listOfWaterMark)(\"nzScroll\", i0.ɵɵpureFunction0(8, _c0))(\"nzFrontPagination\", false)(\"nzShowPagination\", false);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfWaterMark)(\"ngForTrackBy\", ctx.trackWatermarkBy);\n      }\n    },\n    directives: [i2.NzTableComponent, i2.NzTheadComponent, i2.NzTrDirective, i2.NzTableCellDirective, i2.NzThMeasureDirective, i2.NzTbodyComponent, i3.NgForOf],\n    pipes: [i4.HumanizeWatermarkPipe],\n    styles: [\"\"],\n    changeDetection: 0\n  });\n  return JobOverviewDrawerWatermarksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}