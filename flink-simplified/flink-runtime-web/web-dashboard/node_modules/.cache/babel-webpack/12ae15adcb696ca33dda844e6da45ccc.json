{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"flamegraph\"] = factory();else root[\"flamegraph\"] = factory();\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 7);\n      /******/\n    }({\n      /***/\n      7: function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\"; // ESM COMPAT FLAG\n\n        __webpack_require__.r(__webpack_exports__); // CONCATENATED MODULE: ../node_modules/d3-selection/src/selector.js\n\n\n        function none() {}\n        /* harmony default export */\n\n\n        var src_selector = function (selector) {\n          return selector == null ? none : function () {\n            return this.querySelector(selector);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/select.js\n\n        /* harmony default export */\n\n\n        var selection_select = function (select) {\n          if (typeof select !== \"function\") select = src_selector(select);\n\n          for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n              if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n                if (\"__data__\" in node) subnode.__data__ = node.__data__;\n                subgroup[i] = subnode;\n              }\n            }\n          }\n\n          return new Selection(subgroups, this._parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selectorAll.js\n\n\n        function selectorAll_empty() {\n          return [];\n        }\n        /* harmony default export */\n\n\n        var selectorAll = function (selector) {\n          return selector == null ? selectorAll_empty : function () {\n            return this.querySelectorAll(selector);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/selectAll.js\n\n        /* harmony default export */\n\n\n        var selectAll = function (select) {\n          if (typeof select !== \"function\") select = selectorAll(select);\n\n          for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n              if (node = group[i]) {\n                subgroups.push(select.call(node, node.__data__, i, group));\n                parents.push(node);\n              }\n            }\n          }\n\n          return new Selection(subgroups, parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/matcher.js\n\n        /* harmony default export */\n\n\n        var matcher = function (selector) {\n          return function () {\n            return this.matches(selector);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/filter.js\n\n        /* harmony default export */\n\n\n        var filter = function (match) {\n          if (typeof match !== \"function\") match = matcher(match);\n\n          for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n              if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n                subgroup.push(node);\n              }\n            }\n          }\n\n          return new Selection(subgroups, this._parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/sparse.js\n\n        /* harmony default export */\n\n\n        var sparse = function (update) {\n          return new Array(update.length);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/enter.js\n\n        /* harmony default export */\n\n\n        var selection_enter = function () {\n          return new Selection(this._enter || this._groups.map(sparse), this._parents);\n        };\n\n        function EnterNode(parent, datum) {\n          this.ownerDocument = parent.ownerDocument;\n          this.namespaceURI = parent.namespaceURI;\n          this._next = null;\n          this._parent = parent;\n          this.__data__ = datum;\n        }\n\n        EnterNode.prototype = {\n          constructor: EnterNode,\n          appendChild: function (child) {\n            return this._parent.insertBefore(child, this._next);\n          },\n          insertBefore: function (child, next) {\n            return this._parent.insertBefore(child, next);\n          },\n          querySelector: function (selector) {\n            return this._parent.querySelector(selector);\n          },\n          querySelectorAll: function (selector) {\n            return this._parent.querySelectorAll(selector);\n          }\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/constant.js\n\n        /* harmony default export */\n\n        var constant = function (x) {\n          return function () {\n            return x;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/data.js\n\n\n        var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n        function bindIndex(parent, group, enter, update, exit, data) {\n          var i = 0,\n              node,\n              groupLength = group.length,\n              dataLength = data.length; // Put any non-null nodes that fit into update.\n          // Put any null nodes into enter.\n          // Put any remaining data into enter.\n\n          for (; i < dataLength; ++i) {\n            if (node = group[i]) {\n              node.__data__ = data[i];\n              update[i] = node;\n            } else {\n              enter[i] = new EnterNode(parent, data[i]);\n            }\n          } // Put any non-null nodes that don’t fit into exit.\n\n\n          for (; i < groupLength; ++i) {\n            if (node = group[i]) {\n              exit[i] = node;\n            }\n          }\n        }\n\n        function bindKey(parent, group, enter, update, exit, data, key) {\n          var i,\n              node,\n              nodeByKeyValue = {},\n              groupLength = group.length,\n              dataLength = data.length,\n              keyValues = new Array(groupLength),\n              keyValue; // Compute the key for each node.\n          // If multiple nodes have the same key, the duplicates are added to exit.\n\n          for (i = 0; i < groupLength; ++i) {\n            if (node = group[i]) {\n              keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n              if (keyValue in nodeByKeyValue) {\n                exit[i] = node;\n              } else {\n                nodeByKeyValue[keyValue] = node;\n              }\n            }\n          } // Compute the key for each datum.\n          // If there a node associated with this key, join and add it to update.\n          // If there is not (or the key is a duplicate), add it to enter.\n\n\n          for (i = 0; i < dataLength; ++i) {\n            keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n            if (node = nodeByKeyValue[keyValue]) {\n              update[i] = node;\n              node.__data__ = data[i];\n              nodeByKeyValue[keyValue] = null;\n            } else {\n              enter[i] = new EnterNode(parent, data[i]);\n            }\n          } // Add any remaining nodes that were not bound to data to exit.\n\n\n          for (i = 0; i < groupLength; ++i) {\n            if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n              exit[i] = node;\n            }\n          }\n        }\n        /* harmony default export */\n\n\n        var selection_data = function (value, key) {\n          if (!value) {\n            data = new Array(this.size()), j = -1;\n            this.each(function (d) {\n              data[++j] = d;\n            });\n            return data;\n          }\n\n          var bind = key ? bindKey : bindIndex,\n              parents = this._parents,\n              groups = this._groups;\n          if (typeof value !== \"function\") value = constant(value);\n\n          for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n            var parent = parents[j],\n                group = groups[j],\n                groupLength = group.length,\n                data = value.call(parent, parent && parent.__data__, j, parents),\n                dataLength = data.length,\n                enterGroup = enter[j] = new Array(dataLength),\n                updateGroup = update[j] = new Array(dataLength),\n                exitGroup = exit[j] = new Array(groupLength);\n            bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n            // appendChild can insert the materialized enter node before this node,\n            // rather than at the end of the parent node.\n\n            for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n              if (previous = enterGroup[i0]) {\n                if (i0 >= i1) i1 = i0 + 1;\n\n                while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\n                previous._next = next || null;\n              }\n            }\n          }\n\n          update = new Selection(update, parents);\n          update._enter = enter;\n          update._exit = exit;\n          return update;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/exit.js\n\n        /* harmony default export */\n\n\n        var selection_exit = function () {\n          return new Selection(this._exit || this._groups.map(sparse), this._parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/join.js\n\n        /* harmony default export */\n\n\n        var join = function (onenter, onupdate, onexit) {\n          var enter = this.enter(),\n              update = this,\n              exit = this.exit();\n          enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n          if (onupdate != null) update = onupdate(update);\n          if (onexit == null) exit.remove();else onexit(exit);\n          return enter && update ? enter.merge(update).order() : update;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/merge.js\n\n        /* harmony default export */\n\n\n        var selection_merge = function (selection) {\n          for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n              if (node = group0[i] || group1[i]) {\n                merge[i] = node;\n              }\n            }\n          }\n\n          for (; j < m0; ++j) {\n            merges[j] = groups0[j];\n          }\n\n          return new Selection(merges, this._parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/order.js\n\n        /* harmony default export */\n\n\n        var order = function () {\n          for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n            for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n              if (node = group[i]) {\n                if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n                next = node;\n              }\n            }\n          }\n\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/sort.js\n\n        /* harmony default export */\n\n\n        var selection_sort = function (compare) {\n          if (!compare) compare = ascending;\n\n          function compareNode(a, b) {\n            return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n          }\n\n          for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n              if (node = group[i]) {\n                sortgroup[i] = node;\n              }\n            }\n\n            sortgroup.sort(compareNode);\n          }\n\n          return new Selection(sortgroups, this._parents).order();\n        };\n\n        function ascending(a, b) {\n          return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        } // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/call.js\n\n        /* harmony default export */\n\n\n        var call = function () {\n          var callback = arguments[0];\n          arguments[0] = this;\n          callback.apply(null, arguments);\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/nodes.js\n\n        /* harmony default export */\n\n\n        var nodes = function () {\n          var nodes = new Array(this.size()),\n              i = -1;\n          this.each(function () {\n            nodes[++i] = this;\n          });\n          return nodes;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/node.js\n\n        /* harmony default export */\n\n\n        var selection_node = function () {\n          for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n            for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n              var node = group[i];\n              if (node) return node;\n            }\n          }\n\n          return null;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/size.js\n\n        /* harmony default export */\n\n\n        var selection_size = function () {\n          var size = 0;\n          this.each(function () {\n            ++size;\n          });\n          return size;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/empty.js\n\n        /* harmony default export */\n\n\n        var selection_empty = function () {\n          return !this.node();\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/each.js\n\n        /* harmony default export */\n\n\n        var each = function (callback) {\n          for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n            for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n              if (node = group[i]) callback.call(node, node.__data__, i, group);\n            }\n          }\n\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/namespaces.js\n\n\n        var xhtml = \"http://www.w3.org/1999/xhtml\";\n        /* harmony default export */\n\n        var namespaces = {\n          svg: \"http://www.w3.org/2000/svg\",\n          xhtml: xhtml,\n          xlink: \"http://www.w3.org/1999/xlink\",\n          xml: \"http://www.w3.org/XML/1998/namespace\",\n          xmlns: \"http://www.w3.org/2000/xmlns/\"\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/namespace.js\n\n        /* harmony default export */\n\n        var namespace = function (name) {\n          var prefix = name += \"\",\n              i = prefix.indexOf(\":\");\n          if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n          return namespaces.hasOwnProperty(prefix) ? {\n            space: namespaces[prefix],\n            local: name\n          } : name;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/attr.js\n\n\n        function attrRemove(name) {\n          return function () {\n            this.removeAttribute(name);\n          };\n        }\n\n        function attrRemoveNS(fullname) {\n          return function () {\n            this.removeAttributeNS(fullname.space, fullname.local);\n          };\n        }\n\n        function attrConstant(name, value) {\n          return function () {\n            this.setAttribute(name, value);\n          };\n        }\n\n        function attrConstantNS(fullname, value) {\n          return function () {\n            this.setAttributeNS(fullname.space, fullname.local, value);\n          };\n        }\n\n        function attrFunction(name, value) {\n          return function () {\n            var v = value.apply(this, arguments);\n            if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n          };\n        }\n\n        function attrFunctionNS(fullname, value) {\n          return function () {\n            var v = value.apply(this, arguments);\n            if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n          };\n        }\n        /* harmony default export */\n\n\n        var attr = function (name, value) {\n          var fullname = namespace(name);\n\n          if (arguments.length < 2) {\n            var node = this.node();\n            return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n          }\n\n          return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/window.js\n\n        /* harmony default export */\n\n\n        var src_window = function (node) {\n          return node.ownerDocument && node.ownerDocument.defaultView || node.document && node // node is a Window\n          || node.defaultView; // node is a Document\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/style.js\n\n\n        function styleRemove(name) {\n          return function () {\n            this.style.removeProperty(name);\n          };\n        }\n\n        function styleConstant(name, value, priority) {\n          return function () {\n            this.style.setProperty(name, value, priority);\n          };\n        }\n\n        function styleFunction(name, value, priority) {\n          return function () {\n            var v = value.apply(this, arguments);\n            if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n          };\n        }\n        /* harmony default export */\n\n\n        var style = function (name, value, priority) {\n          return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n        };\n\n        function styleValue(node, name) {\n          return node.style.getPropertyValue(name) || src_window(node).getComputedStyle(node, null).getPropertyValue(name);\n        } // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/property.js\n\n\n        function propertyRemove(name) {\n          return function () {\n            delete this[name];\n          };\n        }\n\n        function propertyConstant(name, value) {\n          return function () {\n            this[name] = value;\n          };\n        }\n\n        function propertyFunction(name, value) {\n          return function () {\n            var v = value.apply(this, arguments);\n            if (v == null) delete this[name];else this[name] = v;\n          };\n        }\n        /* harmony default export */\n\n\n        var property = function (name, value) {\n          return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/classed.js\n\n\n        function classArray(string) {\n          return string.trim().split(/^|\\s+/);\n        }\n\n        function classList(node) {\n          return node.classList || new ClassList(node);\n        }\n\n        function ClassList(node) {\n          this._node = node;\n          this._names = classArray(node.getAttribute(\"class\") || \"\");\n        }\n\n        ClassList.prototype = {\n          add: function (name) {\n            var i = this._names.indexOf(name);\n\n            if (i < 0) {\n              this._names.push(name);\n\n              this._node.setAttribute(\"class\", this._names.join(\" \"));\n            }\n          },\n          remove: function (name) {\n            var i = this._names.indexOf(name);\n\n            if (i >= 0) {\n              this._names.splice(i, 1);\n\n              this._node.setAttribute(\"class\", this._names.join(\" \"));\n            }\n          },\n          contains: function (name) {\n            return this._names.indexOf(name) >= 0;\n          }\n        };\n\n        function classedAdd(node, names) {\n          var list = classList(node),\n              i = -1,\n              n = names.length;\n\n          while (++i < n) list.add(names[i]);\n        }\n\n        function classedRemove(node, names) {\n          var list = classList(node),\n              i = -1,\n              n = names.length;\n\n          while (++i < n) list.remove(names[i]);\n        }\n\n        function classedTrue(names) {\n          return function () {\n            classedAdd(this, names);\n          };\n        }\n\n        function classedFalse(names) {\n          return function () {\n            classedRemove(this, names);\n          };\n        }\n\n        function classedFunction(names, value) {\n          return function () {\n            (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n          };\n        }\n        /* harmony default export */\n\n\n        var classed = function (name, value) {\n          var names = classArray(name + \"\");\n\n          if (arguments.length < 2) {\n            var list = classList(this.node()),\n                i = -1,\n                n = names.length;\n\n            while (++i < n) if (!list.contains(names[i])) return false;\n\n            return true;\n          }\n\n          return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/text.js\n\n\n        function textRemove() {\n          this.textContent = \"\";\n        }\n\n        function textConstant(value) {\n          return function () {\n            this.textContent = value;\n          };\n        }\n\n        function textFunction(value) {\n          return function () {\n            var v = value.apply(this, arguments);\n            this.textContent = v == null ? \"\" : v;\n          };\n        }\n        /* harmony default export */\n\n\n        var selection_text = function (value) {\n          return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/html.js\n\n\n        function htmlRemove() {\n          this.innerHTML = \"\";\n        }\n\n        function htmlConstant(value) {\n          return function () {\n            this.innerHTML = value;\n          };\n        }\n\n        function htmlFunction(value) {\n          return function () {\n            var v = value.apply(this, arguments);\n            this.innerHTML = v == null ? \"\" : v;\n          };\n        }\n        /* harmony default export */\n\n\n        var html = function (value) {\n          return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/raise.js\n\n\n        function raise() {\n          if (this.nextSibling) this.parentNode.appendChild(this);\n        }\n        /* harmony default export */\n\n\n        var selection_raise = function () {\n          return this.each(raise);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/lower.js\n\n\n        function lower() {\n          if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n        }\n        /* harmony default export */\n\n\n        var selection_lower = function () {\n          return this.each(lower);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/creator.js\n\n\n        function creatorInherit(name) {\n          return function () {\n            var document = this.ownerDocument,\n                uri = this.namespaceURI;\n            return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n          };\n        }\n\n        function creatorFixed(fullname) {\n          return function () {\n            return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n          };\n        }\n        /* harmony default export */\n\n\n        var creator = function (name) {\n          var fullname = namespace(name);\n          return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/append.js\n\n        /* harmony default export */\n\n\n        var append = function (name) {\n          var create = typeof name === \"function\" ? name : creator(name);\n          return this.select(function () {\n            return this.appendChild(create.apply(this, arguments));\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/insert.js\n\n\n        function constantNull() {\n          return null;\n        }\n        /* harmony default export */\n\n\n        var insert = function (name, before) {\n          var create = typeof name === \"function\" ? name : creator(name),\n              select = before == null ? constantNull : typeof before === \"function\" ? before : src_selector(before);\n          return this.select(function () {\n            return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/remove.js\n\n\n        function remove_remove() {\n          var parent = this.parentNode;\n          if (parent) parent.removeChild(this);\n        }\n        /* harmony default export */\n\n\n        var selection_remove = function () {\n          return this.each(remove_remove);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/clone.js\n\n\n        function selection_cloneShallow() {\n          var clone = this.cloneNode(false),\n              parent = this.parentNode;\n          return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n        }\n\n        function selection_cloneDeep() {\n          var clone = this.cloneNode(true),\n              parent = this.parentNode;\n          return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n        }\n        /* harmony default export */\n\n\n        var clone = function (deep) {\n          return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/datum.js\n\n        /* harmony default export */\n\n\n        var datum = function (value) {\n          return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/on.js\n\n\n        var filterEvents = {};\n        var on_event = null;\n\n        if (typeof document !== \"undefined\") {\n          var on_element = document.documentElement;\n\n          if (!(\"onmouseenter\" in on_element)) {\n            filterEvents = {\n              mouseenter: \"mouseover\",\n              mouseleave: \"mouseout\"\n            };\n          }\n        }\n\n        function filterContextListener(listener, index, group) {\n          listener = contextListener(listener, index, group);\n          return function (event) {\n            var related = event.relatedTarget;\n\n            if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n              listener.call(this, event);\n            }\n          };\n        }\n\n        function contextListener(listener, index, group) {\n          return function (event1) {\n            var event0 = on_event; // Events can be reentrant (e.g., focus).\n\n            on_event = event1;\n\n            try {\n              listener.call(this, this.__data__, index, group);\n            } finally {\n              on_event = event0;\n            }\n          };\n        }\n\n        function parseTypenames(typenames) {\n          return typenames.trim().split(/^|\\s+/).map(function (t) {\n            var name = \"\",\n                i = t.indexOf(\".\");\n            if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n            return {\n              type: t,\n              name: name\n            };\n          });\n        }\n\n        function onRemove(typename) {\n          return function () {\n            var on = this.__on;\n            if (!on) return;\n\n            for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n              if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n                this.removeEventListener(o.type, o.listener, o.capture);\n              } else {\n                on[++i] = o;\n              }\n            }\n\n            if (++i) on.length = i;else delete this.__on;\n          };\n        }\n\n        function onAdd(typename, value, capture) {\n          var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n          return function (d, i, group) {\n            var on = this.__on,\n                o,\n                listener = wrap(value, i, group);\n            if (on) for (var j = 0, m = on.length; j < m; ++j) {\n              if ((o = on[j]).type === typename.type && o.name === typename.name) {\n                this.removeEventListener(o.type, o.listener, o.capture);\n                this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n                o.value = value;\n                return;\n              }\n            }\n            this.addEventListener(typename.type, listener, capture);\n            o = {\n              type: typename.type,\n              name: typename.name,\n              value: value,\n              listener: listener,\n              capture: capture\n            };\n            if (!on) this.__on = [o];else on.push(o);\n          };\n        }\n        /* harmony default export */\n\n\n        var selection_on = function (typename, value, capture) {\n          var typenames = parseTypenames(typename + \"\"),\n              i,\n              n = typenames.length,\n              t;\n\n          if (arguments.length < 2) {\n            var on = this.node().__on;\n\n            if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n              for (i = 0, o = on[j]; i < n; ++i) {\n                if ((t = typenames[i]).type === o.type && t.name === o.name) {\n                  return o.value;\n                }\n              }\n            }\n            return;\n          }\n\n          on = value ? onAdd : onRemove;\n          if (capture == null) capture = false;\n\n          for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\n          return this;\n        };\n\n        function customEvent(event1, listener, that, args) {\n          var event0 = on_event;\n          event1.sourceEvent = on_event;\n          on_event = event1;\n\n          try {\n            return listener.apply(that, args);\n          } finally {\n            on_event = event0;\n          }\n        } // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/dispatch.js\n\n\n        function dispatchEvent(node, type, params) {\n          var window = src_window(node),\n              event = window.CustomEvent;\n\n          if (typeof event === \"function\") {\n            event = new event(type, params);\n          } else {\n            event = window.document.createEvent(\"Event\");\n            if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n          }\n\n          node.dispatchEvent(event);\n        }\n\n        function dispatchConstant(type, params) {\n          return function () {\n            return dispatchEvent(this, type, params);\n          };\n        }\n\n        function dispatchFunction(type, params) {\n          return function () {\n            return dispatchEvent(this, type, params.apply(this, arguments));\n          };\n        }\n        /* harmony default export */\n\n\n        var dispatch = function (type, params) {\n          return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n        }; // CONCATENATED MODULE: ../node_modules/d3-selection/src/selection/index.js\n\n\n        var selection_root = [null];\n\n        function Selection(groups, parents) {\n          this._groups = groups;\n          this._parents = parents;\n        }\n\n        function selection_selection() {\n          return new Selection([[document.documentElement]], selection_root);\n        }\n\n        Selection.prototype = selection_selection.prototype = {\n          constructor: Selection,\n          select: selection_select,\n          selectAll: selectAll,\n          filter: filter,\n          data: selection_data,\n          enter: selection_enter,\n          exit: selection_exit,\n          join: join,\n          merge: selection_merge,\n          order: order,\n          sort: selection_sort,\n          call: call,\n          nodes: nodes,\n          node: selection_node,\n          size: selection_size,\n          empty: selection_empty,\n          each: each,\n          attr: attr,\n          style: style,\n          property: property,\n          classed: classed,\n          text: selection_text,\n          html: html,\n          raise: selection_raise,\n          lower: selection_lower,\n          append: append,\n          insert: insert,\n          remove: selection_remove,\n          clone: clone,\n          datum: datum,\n          on: selection_on,\n          dispatch: dispatch\n        };\n        /* harmony default export */\n\n        var src_selection = selection_selection; // CONCATENATED MODULE: ../node_modules/d3-selection/src/select.js\n\n        /* harmony default export */\n\n        var src_select = function (selector) {\n          return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], selection_root);\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatDecimal.js\n        // Computes the decimal coefficient and exponent of the specified number x with\n        // significant digits p, where x is positive and p is in [1, 21] or undefined.\n        // For example, formatDecimal(1.23) returns [\"123\", 0].\n\n        /* harmony default export */\n\n\n        var formatDecimal = function (x, p) {\n          if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n          var i,\n              coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n          // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n          return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/exponent.js\n\n        /* harmony default export */\n\n\n        var src_exponent = function (x) {\n          return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatGroup.js\n\n        /* harmony default export */\n\n\n        var formatGroup = function (grouping, thousands) {\n          return function (value, width) {\n            var i = value.length,\n                t = [],\n                j = 0,\n                g = grouping[0],\n                length = 0;\n\n            while (i > 0 && g > 0) {\n              if (length + g + 1 > width) g = Math.max(1, width - length);\n              t.push(value.substring(i -= g, i + g));\n              if ((length += g + 1) > width) break;\n              g = grouping[j = (j + 1) % grouping.length];\n            }\n\n            return t.reverse().join(thousands);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatNumerals.js\n\n        /* harmony default export */\n\n\n        var formatNumerals = function (numerals) {\n          return function (value) {\n            return value.replace(/[0-9]/g, function (i) {\n              return numerals[+i];\n            });\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatSpecifier.js\n        // [[fill]align][sign][symbol][0][width][,][.precision][~][type]\n\n\n        var re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\n        function formatSpecifier(specifier) {\n          if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n          var match;\n          return new FormatSpecifier({\n            fill: match[1],\n            align: match[2],\n            sign: match[3],\n            symbol: match[4],\n            zero: match[5],\n            width: match[6],\n            comma: match[7],\n            precision: match[8] && match[8].slice(1),\n            trim: match[9],\n            type: match[10]\n          });\n        }\n\n        formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\n        function FormatSpecifier(specifier) {\n          this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n          this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n          this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n          this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n          this.zero = !!specifier.zero;\n          this.width = specifier.width === undefined ? undefined : +specifier.width;\n          this.comma = !!specifier.comma;\n          this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n          this.trim = !!specifier.trim;\n          this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n        }\n\n        FormatSpecifier.prototype.toString = function () {\n          return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === undefined ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatTrim.js\n        // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\n\n        /* harmony default export */\n\n\n        var formatTrim = function (s) {\n          out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n            switch (s[i]) {\n              case \".\":\n                i0 = i1 = i;\n                break;\n\n              case \"0\":\n                if (i0 === 0) i0 = i;\n                i1 = i;\n                break;\n\n              default:\n                if (!+s[i]) break out;\n                if (i0 > 0) i0 = 0;\n                break;\n            }\n          }\n\n          return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatPrefixAuto.js\n\n\n        var prefixExponent;\n        /* harmony default export */\n\n        var formatPrefixAuto = function (x, p) {\n          var d = formatDecimal(x, p);\n          if (!d) return x + \"\";\n          var coefficient = d[0],\n              exponent = d[1],\n              i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n              n = coefficient.length;\n          return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatRounded.js\n\n        /* harmony default export */\n\n\n        var formatRounded = function (x, p) {\n          var d = formatDecimal(x, p);\n          if (!d) return x + \"\";\n          var coefficient = d[0],\n              exponent = d[1];\n          return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/formatTypes.js\n\n        /* harmony default export */\n\n\n        var formatTypes = {\n          \"%\": function (x, p) {\n            return (x * 100).toFixed(p);\n          },\n          \"b\": function (x) {\n            return Math.round(x).toString(2);\n          },\n          \"c\": function (x) {\n            return x + \"\";\n          },\n          \"d\": function (x) {\n            return Math.round(x).toString(10);\n          },\n          \"e\": function (x, p) {\n            return x.toExponential(p);\n          },\n          \"f\": function (x, p) {\n            return x.toFixed(p);\n          },\n          \"g\": function (x, p) {\n            return x.toPrecision(p);\n          },\n          \"o\": function (x) {\n            return Math.round(x).toString(8);\n          },\n          \"p\": function (x, p) {\n            return formatRounded(x * 100, p);\n          },\n          \"r\": formatRounded,\n          \"s\": formatPrefixAuto,\n          \"X\": function (x) {\n            return Math.round(x).toString(16).toUpperCase();\n          },\n          \"x\": function (x) {\n            return Math.round(x).toString(16);\n          }\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/identity.js\n\n        /* harmony default export */\n\n        var identity = function (x) {\n          return x;\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/locale.js\n\n\n        var map = Array.prototype.map,\n            prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n        /* harmony default export */\n\n        var src_locale = function (locale) {\n          var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n              currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n              currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n              decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n              numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n              percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n              minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n              nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n          function newFormat(specifier) {\n            specifier = formatSpecifier(specifier);\n            var fill = specifier.fill,\n                align = specifier.align,\n                sign = specifier.sign,\n                symbol = specifier.symbol,\n                zero = specifier.zero,\n                width = specifier.width,\n                comma = specifier.comma,\n                precision = specifier.precision,\n                trim = specifier.trim,\n                type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n            if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n            else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n            if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n            // For SI-prefix, the suffix is lazily computed.\n\n            var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n                suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n            // Is this an integer type?\n            // Can this type generate exponential notation?\n\n            var formatType = formatTypes[type],\n                maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n            // or clamp the specified precision to the supported range.\n            // For significant precision, it must be in [1, 21].\n            // For fixed precision, it must be in [0, 20].\n\n            precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n            function format(value) {\n              var valuePrefix = prefix,\n                  valueSuffix = suffix,\n                  i,\n                  n,\n                  c;\n\n              if (type === \"c\") {\n                valueSuffix = formatType(value) + valueSuffix;\n                value = \"\";\n              } else {\n                value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n\n                var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.\n\n                value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n                if (trim) value = formatTrim(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n\n                if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false; // Compute the prefix and suffix.\n\n                valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n                valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n                // grouped, and fractional or exponential “suffix” part that is not.\n\n                if (maybeSuffix) {\n                  i = -1, n = value.length;\n\n                  while (++i < n) {\n                    if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                      valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                      value = value.slice(0, i);\n                      break;\n                    }\n                  }\n                }\n              } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n              if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n              var length = valuePrefix.length + value.length + valueSuffix.length,\n                  padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n              if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n              switch (align) {\n                case \"<\":\n                  value = valuePrefix + value + valueSuffix + padding;\n                  break;\n\n                case \"=\":\n                  value = valuePrefix + padding + value + valueSuffix;\n                  break;\n\n                case \"^\":\n                  value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n                  break;\n\n                default:\n                  value = padding + valuePrefix + value + valueSuffix;\n                  break;\n              }\n\n              return numerals(value);\n            }\n\n            format.toString = function () {\n              return specifier + \"\";\n            };\n\n            return format;\n          }\n\n          function formatPrefix(specifier, value) {\n            var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n                e = Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3,\n                k = Math.pow(10, -e),\n                prefix = prefixes[8 + e / 3];\n            return function (value) {\n              return f(k * value) + prefix;\n            };\n          }\n\n          return {\n            format: newFormat,\n            formatPrefix: formatPrefix\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/defaultLocale.js\n\n\n        var defaultLocale_locale;\n        var defaultLocale_format;\n        var defaultLocale_formatPrefix;\n        defaultLocale({\n          decimal: \".\",\n          thousands: \",\",\n          grouping: [3],\n          currency: [\"$\", \"\"],\n          minus: \"-\"\n        });\n\n        function defaultLocale(definition) {\n          defaultLocale_locale = src_locale(definition);\n          defaultLocale_format = defaultLocale_locale.format;\n          defaultLocale_formatPrefix = defaultLocale_locale.formatPrefix;\n          return defaultLocale_locale;\n        } // CONCATENATED MODULE: ../node_modules/d3-array/src/ascending.js\n\n        /* harmony default export */\n\n\n        var src_ascending = function (a, b) {\n          return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/treemap/round.js\n\n        /* harmony default export */\n\n\n        var treemap_round = function (node) {\n          node.x0 = Math.round(node.x0);\n          node.y0 = Math.round(node.y0);\n          node.x1 = Math.round(node.x1);\n          node.y1 = Math.round(node.y1);\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/treemap/dice.js\n\n        /* harmony default export */\n\n\n        var dice = function (parent, x0, y0, x1, y1) {\n          var nodes = parent.children,\n              node,\n              i = -1,\n              n = nodes.length,\n              k = parent.value && (x1 - x0) / parent.value;\n\n          while (++i < n) {\n            node = nodes[i], node.y0 = y0, node.y1 = y1;\n            node.x0 = x0, node.x1 = x0 += node.value * k;\n          }\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/partition.js\n\n        /* harmony default export */\n\n\n        var src_partition = function () {\n          var dx = 1,\n              dy = 1,\n              padding = 0,\n              round = false;\n\n          function partition(root) {\n            var n = root.height + 1;\n            root.x0 = root.y0 = padding;\n            root.x1 = dx;\n            root.y1 = dy / n;\n            root.eachBefore(positionNode(dy, n));\n            if (round) root.eachBefore(treemap_round);\n            return root;\n          }\n\n          function positionNode(dy, n) {\n            return function (node) {\n              if (node.children) {\n                dice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n              }\n\n              var x0 = node.x0,\n                  y0 = node.y0,\n                  x1 = node.x1 - padding,\n                  y1 = node.y1 - padding;\n              if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n              if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n              node.x0 = x0;\n              node.y0 = y0;\n              node.x1 = x1;\n              node.y1 = y1;\n            };\n          }\n\n          partition.round = function (x) {\n            return arguments.length ? (round = !!x, partition) : round;\n          };\n\n          partition.size = function (x) {\n            return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n          };\n\n          partition.padding = function (x) {\n            return arguments.length ? (padding = +x, partition) : padding;\n          };\n\n          return partition;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/count.js\n\n\n        function count_count(node) {\n          var sum = 0,\n              children = node.children,\n              i = children && children.length;\n          if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;\n          node.value = sum;\n        }\n        /* harmony default export */\n\n\n        var hierarchy_count = function () {\n          return this.eachAfter(count_count);\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/each.js\n\n        /* harmony default export */\n\n\n        var hierarchy_each = function (callback) {\n          var node = this,\n              current,\n              next = [node],\n              children,\n              i,\n              n;\n\n          do {\n            current = next.reverse(), next = [];\n\n            while (node = current.pop()) {\n              callback(node), children = node.children;\n              if (children) for (i = 0, n = children.length; i < n; ++i) {\n                next.push(children[i]);\n              }\n            }\n          } while (next.length);\n\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js\n\n        /* harmony default export */\n\n\n        var eachBefore = function (callback) {\n          var node = this,\n              nodes = [node],\n              children,\n              i;\n\n          while (node = nodes.pop()) {\n            callback(node), children = node.children;\n            if (children) for (i = children.length - 1; i >= 0; --i) {\n              nodes.push(children[i]);\n            }\n          }\n\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js\n\n        /* harmony default export */\n\n\n        var eachAfter = function (callback) {\n          var node = this,\n              nodes = [node],\n              next = [],\n              children,\n              i,\n              n;\n\n          while (node = nodes.pop()) {\n            next.push(node), children = node.children;\n            if (children) for (i = 0, n = children.length; i < n; ++i) {\n              nodes.push(children[i]);\n            }\n          }\n\n          while (node = next.pop()) {\n            callback(node);\n          }\n\n          return this;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/sum.js\n\n        /* harmony default export */\n\n\n        var sum = function (value) {\n          return this.eachAfter(function (node) {\n            var sum = +value(node.data) || 0,\n                children = node.children,\n                i = children && children.length;\n\n            while (--i >= 0) sum += children[i].value;\n\n            node.value = sum;\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/sort.js\n\n        /* harmony default export */\n\n\n        var hierarchy_sort = function (compare) {\n          return this.eachBefore(function (node) {\n            if (node.children) {\n              node.children.sort(compare);\n            }\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/path.js\n\n        /* harmony default export */\n\n\n        var path = function (end) {\n          var start = this,\n              ancestor = leastCommonAncestor(start, end),\n              nodes = [start];\n\n          while (start !== ancestor) {\n            start = start.parent;\n            nodes.push(start);\n          }\n\n          var k = nodes.length;\n\n          while (end !== ancestor) {\n            nodes.splice(k, 0, end);\n            end = end.parent;\n          }\n\n          return nodes;\n        };\n\n        function leastCommonAncestor(a, b) {\n          if (a === b) return a;\n          var aNodes = a.ancestors(),\n              bNodes = b.ancestors(),\n              c = null;\n          a = aNodes.pop();\n          b = bNodes.pop();\n\n          while (a === b) {\n            c = a;\n            a = aNodes.pop();\n            b = bNodes.pop();\n          }\n\n          return c;\n        } // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/ancestors.js\n\n        /* harmony default export */\n\n\n        var ancestors = function () {\n          var node = this,\n              nodes = [node];\n\n          while (node = node.parent) {\n            nodes.push(node);\n          }\n\n          return nodes;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/descendants.js\n\n        /* harmony default export */\n\n\n        var hierarchy_descendants = function () {\n          var nodes = [];\n          this.each(function (node) {\n            nodes.push(node);\n          });\n          return nodes;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/leaves.js\n\n        /* harmony default export */\n\n\n        var leaves = function () {\n          var leaves = [];\n          this.eachBefore(function (node) {\n            if (!node.children) {\n              leaves.push(node);\n            }\n          });\n          return leaves;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/links.js\n\n        /* harmony default export */\n\n\n        var links = function () {\n          var root = this,\n              links = [];\n          root.each(function (node) {\n            if (node !== root) {\n              // Don’t include the root’s parent, if any.\n              links.push({\n                source: node.parent,\n                target: node\n              });\n            }\n          });\n          return links;\n        }; // CONCATENATED MODULE: ../node_modules/d3-hierarchy/src/hierarchy/index.js\n\n\n        function hierarchy(data, children) {\n          var root = new Node(data),\n              valued = +data.value && (root.value = data.value),\n              node,\n              nodes = [root],\n              child,\n              childs,\n              i,\n              n;\n          if (children == null) children = defaultChildren;\n\n          while (node = nodes.pop()) {\n            if (valued) node.value = +node.data.value;\n\n            if ((childs = children(node.data)) && (n = childs.length)) {\n              node.children = new Array(n);\n\n              for (i = n - 1; i >= 0; --i) {\n                nodes.push(child = node.children[i] = new Node(childs[i]));\n                child.parent = node;\n                child.depth = node.depth + 1;\n              }\n            }\n          }\n\n          return root.eachBefore(computeHeight);\n        }\n\n        function node_copy() {\n          return hierarchy(this).eachBefore(copyData);\n        }\n\n        function defaultChildren(d) {\n          return d.children;\n        }\n\n        function copyData(node) {\n          node.data = node.data.data;\n        }\n\n        function computeHeight(node) {\n          var height = 0;\n\n          do node.height = height; while ((node = node.parent) && node.height < ++height);\n        }\n\n        function Node(data) {\n          this.data = data;\n          this.depth = this.height = 0;\n          this.parent = null;\n        }\n\n        Node.prototype = hierarchy.prototype = {\n          constructor: Node,\n          count: hierarchy_count,\n          each: hierarchy_each,\n          eachAfter: eachAfter,\n          eachBefore: eachBefore,\n          sum: sum,\n          sort: hierarchy_sort,\n          path: path,\n          ancestors: ancestors,\n          descendants: hierarchy_descendants,\n          leaves: leaves,\n          links: links,\n          copy: node_copy\n        }; // CONCATENATED MODULE: ../node_modules/d3-array/src/ticks.js\n\n        var e10 = Math.sqrt(50),\n            e5 = Math.sqrt(10),\n            e2 = Math.sqrt(2);\n        /* harmony default export */\n\n        var ticks = function (start, stop, count) {\n          var reverse,\n              i = -1,\n              n,\n              ticks,\n              step;\n          stop = +stop, start = +start, count = +count;\n          if (start === stop && count > 0) return [start];\n          if (reverse = stop < start) n = start, start = stop, stop = n;\n          if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n          if (step > 0) {\n            start = Math.ceil(start / step);\n            stop = Math.floor(stop / step);\n            ticks = new Array(n = Math.ceil(stop - start + 1));\n\n            while (++i < n) ticks[i] = (start + i) * step;\n          } else {\n            start = Math.floor(start * step);\n            stop = Math.ceil(stop * step);\n            ticks = new Array(n = Math.ceil(start - stop + 1));\n\n            while (++i < n) ticks[i] = (start - i) / step;\n          }\n\n          if (reverse) ticks.reverse();\n          return ticks;\n        };\n\n        function tickIncrement(start, stop, count) {\n          var step = (stop - start) / Math.max(0, count),\n              power = Math.floor(Math.log(step) / Math.LN10),\n              error = step / Math.pow(10, power);\n          return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n        }\n\n        function tickStep(start, stop, count) {\n          var step0 = Math.abs(stop - start) / Math.max(0, count),\n              step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n              error = step0 / step1;\n          if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n          return stop < start ? -step1 : step1;\n        } // CONCATENATED MODULE: ../node_modules/d3-array/src/bisector.js\n\n        /* harmony default export */\n\n\n        var bisector = function (compare) {\n          if (compare.length === 1) compare = ascendingComparator(compare);\n          return {\n            left: function (a, x, lo, hi) {\n              if (lo == null) lo = 0;\n              if (hi == null) hi = a.length;\n\n              while (lo < hi) {\n                var mid = lo + hi >>> 1;\n                if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n              }\n\n              return lo;\n            },\n            right: function (a, x, lo, hi) {\n              if (lo == null) lo = 0;\n              if (hi == null) hi = a.length;\n\n              while (lo < hi) {\n                var mid = lo + hi >>> 1;\n                if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n              }\n\n              return lo;\n            }\n          };\n        };\n\n        function ascendingComparator(f) {\n          return function (d, x) {\n            return src_ascending(f(d), x);\n          };\n        } // CONCATENATED MODULE: ../node_modules/d3-array/src/bisect.js\n\n\n        var ascendingBisect = bisector(src_ascending);\n        var bisectRight = ascendingBisect.right;\n        var bisectLeft = ascendingBisect.left;\n        /* harmony default export */\n\n        var bisect = bisectRight; // CONCATENATED MODULE: ../node_modules/d3-color/src/define.js\n\n        /* harmony default export */\n\n        var define = function (constructor, factory, prototype) {\n          constructor.prototype = factory.prototype = prototype;\n          prototype.constructor = constructor;\n        };\n\n        function extend(parent, definition) {\n          var prototype = Object.create(parent.prototype);\n\n          for (var key in definition) prototype[key] = definition[key];\n\n          return prototype;\n        } // CONCATENATED MODULE: ../node_modules/d3-color/src/color.js\n\n\n        function Color() {}\n\n        var darker = 0.7;\n        var brighter = 1 / darker;\n        var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n            reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n            reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n            reHex = /^#([0-9a-f]{3,8})$/,\n            reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n            reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n            reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n            reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n            reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n            reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n        var named = {\n          aliceblue: 0xf0f8ff,\n          antiquewhite: 0xfaebd7,\n          aqua: 0x00ffff,\n          aquamarine: 0x7fffd4,\n          azure: 0xf0ffff,\n          beige: 0xf5f5dc,\n          bisque: 0xffe4c4,\n          black: 0x000000,\n          blanchedalmond: 0xffebcd,\n          blue: 0x0000ff,\n          blueviolet: 0x8a2be2,\n          brown: 0xa52a2a,\n          burlywood: 0xdeb887,\n          cadetblue: 0x5f9ea0,\n          chartreuse: 0x7fff00,\n          chocolate: 0xd2691e,\n          coral: 0xff7f50,\n          cornflowerblue: 0x6495ed,\n          cornsilk: 0xfff8dc,\n          crimson: 0xdc143c,\n          cyan: 0x00ffff,\n          darkblue: 0x00008b,\n          darkcyan: 0x008b8b,\n          darkgoldenrod: 0xb8860b,\n          darkgray: 0xa9a9a9,\n          darkgreen: 0x006400,\n          darkgrey: 0xa9a9a9,\n          darkkhaki: 0xbdb76b,\n          darkmagenta: 0x8b008b,\n          darkolivegreen: 0x556b2f,\n          darkorange: 0xff8c00,\n          darkorchid: 0x9932cc,\n          darkred: 0x8b0000,\n          darksalmon: 0xe9967a,\n          darkseagreen: 0x8fbc8f,\n          darkslateblue: 0x483d8b,\n          darkslategray: 0x2f4f4f,\n          darkslategrey: 0x2f4f4f,\n          darkturquoise: 0x00ced1,\n          darkviolet: 0x9400d3,\n          deeppink: 0xff1493,\n          deepskyblue: 0x00bfff,\n          dimgray: 0x696969,\n          dimgrey: 0x696969,\n          dodgerblue: 0x1e90ff,\n          firebrick: 0xb22222,\n          floralwhite: 0xfffaf0,\n          forestgreen: 0x228b22,\n          fuchsia: 0xff00ff,\n          gainsboro: 0xdcdcdc,\n          ghostwhite: 0xf8f8ff,\n          gold: 0xffd700,\n          goldenrod: 0xdaa520,\n          gray: 0x808080,\n          green: 0x008000,\n          greenyellow: 0xadff2f,\n          grey: 0x808080,\n          honeydew: 0xf0fff0,\n          hotpink: 0xff69b4,\n          indianred: 0xcd5c5c,\n          indigo: 0x4b0082,\n          ivory: 0xfffff0,\n          khaki: 0xf0e68c,\n          lavender: 0xe6e6fa,\n          lavenderblush: 0xfff0f5,\n          lawngreen: 0x7cfc00,\n          lemonchiffon: 0xfffacd,\n          lightblue: 0xadd8e6,\n          lightcoral: 0xf08080,\n          lightcyan: 0xe0ffff,\n          lightgoldenrodyellow: 0xfafad2,\n          lightgray: 0xd3d3d3,\n          lightgreen: 0x90ee90,\n          lightgrey: 0xd3d3d3,\n          lightpink: 0xffb6c1,\n          lightsalmon: 0xffa07a,\n          lightseagreen: 0x20b2aa,\n          lightskyblue: 0x87cefa,\n          lightslategray: 0x778899,\n          lightslategrey: 0x778899,\n          lightsteelblue: 0xb0c4de,\n          lightyellow: 0xffffe0,\n          lime: 0x00ff00,\n          limegreen: 0x32cd32,\n          linen: 0xfaf0e6,\n          magenta: 0xff00ff,\n          maroon: 0x800000,\n          mediumaquamarine: 0x66cdaa,\n          mediumblue: 0x0000cd,\n          mediumorchid: 0xba55d3,\n          mediumpurple: 0x9370db,\n          mediumseagreen: 0x3cb371,\n          mediumslateblue: 0x7b68ee,\n          mediumspringgreen: 0x00fa9a,\n          mediumturquoise: 0x48d1cc,\n          mediumvioletred: 0xc71585,\n          midnightblue: 0x191970,\n          mintcream: 0xf5fffa,\n          mistyrose: 0xffe4e1,\n          moccasin: 0xffe4b5,\n          navajowhite: 0xffdead,\n          navy: 0x000080,\n          oldlace: 0xfdf5e6,\n          olive: 0x808000,\n          olivedrab: 0x6b8e23,\n          orange: 0xffa500,\n          orangered: 0xff4500,\n          orchid: 0xda70d6,\n          palegoldenrod: 0xeee8aa,\n          palegreen: 0x98fb98,\n          paleturquoise: 0xafeeee,\n          palevioletred: 0xdb7093,\n          papayawhip: 0xffefd5,\n          peachpuff: 0xffdab9,\n          peru: 0xcd853f,\n          pink: 0xffc0cb,\n          plum: 0xdda0dd,\n          powderblue: 0xb0e0e6,\n          purple: 0x800080,\n          rebeccapurple: 0x663399,\n          red: 0xff0000,\n          rosybrown: 0xbc8f8f,\n          royalblue: 0x4169e1,\n          saddlebrown: 0x8b4513,\n          salmon: 0xfa8072,\n          sandybrown: 0xf4a460,\n          seagreen: 0x2e8b57,\n          seashell: 0xfff5ee,\n          sienna: 0xa0522d,\n          silver: 0xc0c0c0,\n          skyblue: 0x87ceeb,\n          slateblue: 0x6a5acd,\n          slategray: 0x708090,\n          slategrey: 0x708090,\n          snow: 0xfffafa,\n          springgreen: 0x00ff7f,\n          steelblue: 0x4682b4,\n          tan: 0xd2b48c,\n          teal: 0x008080,\n          thistle: 0xd8bfd8,\n          tomato: 0xff6347,\n          turquoise: 0x40e0d0,\n          violet: 0xee82ee,\n          wheat: 0xf5deb3,\n          white: 0xffffff,\n          whitesmoke: 0xf5f5f5,\n          yellow: 0xffff00,\n          yellowgreen: 0x9acd32\n        };\n        define(Color, color_color, {\n          copy: function (channels) {\n            return Object.assign(new this.constructor(), this, channels);\n          },\n          displayable: function () {\n            return this.rgb().displayable();\n          },\n          hex: color_formatHex,\n          // Deprecated! Use color.formatHex.\n          formatHex: color_formatHex,\n          formatHsl: color_formatHsl,\n          formatRgb: color_formatRgb,\n          toString: color_formatRgb\n        });\n\n        function color_formatHex() {\n          return this.rgb().formatHex();\n        }\n\n        function color_formatHsl() {\n          return hslConvert(this).formatHsl();\n        }\n\n        function color_formatRgb() {\n          return this.rgb().formatRgb();\n        }\n\n        function color_color(format) {\n          var m, l;\n          format = (format + \"\").trim().toLowerCase();\n          return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n          : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n          : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n          : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n          : null // invalid hex\n          ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n          : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n          : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n          : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n          : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n          : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n          : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n          : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n        }\n\n        function rgbn(n) {\n          return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n        }\n\n        function rgba(r, g, b, a) {\n          if (a <= 0) r = g = b = NaN;\n          return new Rgb(r, g, b, a);\n        }\n\n        function rgbConvert(o) {\n          if (!(o instanceof Color)) o = color_color(o);\n          if (!o) return new Rgb();\n          o = o.rgb();\n          return new Rgb(o.r, o.g, o.b, o.opacity);\n        }\n\n        function color_rgb(r, g, b, opacity) {\n          return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n        }\n\n        function Rgb(r, g, b, opacity) {\n          this.r = +r;\n          this.g = +g;\n          this.b = +b;\n          this.opacity = +opacity;\n        }\n\n        define(Rgb, color_rgb, extend(Color, {\n          brighter: function (k) {\n            k = k == null ? brighter : Math.pow(brighter, k);\n            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n          },\n          darker: function (k) {\n            k = k == null ? darker : Math.pow(darker, k);\n            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n          },\n          rgb: function () {\n            return this;\n          },\n          displayable: function () {\n            return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n          },\n          hex: rgb_formatHex,\n          // Deprecated! Use color.formatHex.\n          formatHex: rgb_formatHex,\n          formatRgb: rgb_formatRgb,\n          toString: rgb_formatRgb\n        }));\n\n        function rgb_formatHex() {\n          return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n        }\n\n        function rgb_formatRgb() {\n          var a = this.opacity;\n          a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n          return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n        }\n\n        function hex(value) {\n          value = Math.max(0, Math.min(255, Math.round(value) || 0));\n          return (value < 16 ? \"0\" : \"\") + value.toString(16);\n        }\n\n        function hsla(h, s, l, a) {\n          if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n          return new Hsl(h, s, l, a);\n        }\n\n        function hslConvert(o) {\n          if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n          if (!(o instanceof Color)) o = color_color(o);\n          if (!o) return new Hsl();\n          if (o instanceof Hsl) return o;\n          o = o.rgb();\n          var r = o.r / 255,\n              g = o.g / 255,\n              b = o.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              h = NaN,\n              s = max - min,\n              l = (max + min) / 2;\n\n          if (s) {\n            if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n            s /= l < 0.5 ? max + min : 2 - max - min;\n            h *= 60;\n          } else {\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n\n          return new Hsl(h, s, l, o.opacity);\n        }\n\n        function hsl(h, s, l, opacity) {\n          return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n        }\n\n        function Hsl(h, s, l, opacity) {\n          this.h = +h;\n          this.s = +s;\n          this.l = +l;\n          this.opacity = +opacity;\n        }\n\n        define(Hsl, hsl, extend(Color, {\n          brighter: function (k) {\n            k = k == null ? brighter : Math.pow(brighter, k);\n            return new Hsl(this.h, this.s, this.l * k, this.opacity);\n          },\n          darker: function (k) {\n            k = k == null ? darker : Math.pow(darker, k);\n            return new Hsl(this.h, this.s, this.l * k, this.opacity);\n          },\n          rgb: function () {\n            var h = this.h % 360 + (this.h < 0) * 360,\n                s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n                l = this.l,\n                m2 = l + (l < 0.5 ? l : 1 - l) * s,\n                m1 = 2 * l - m2;\n            return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n          },\n          displayable: function () {\n            return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n          },\n          formatHsl: function () {\n            var a = this.opacity;\n            a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n            return (a === 1 ? \"hsl(\" : \"hsla(\") + (this.h || 0) + \", \" + (this.s || 0) * 100 + \"%, \" + (this.l || 0) * 100 + \"%\" + (a === 1 ? \")\" : \", \" + a + \")\");\n          }\n        }));\n        /* From FvD 13.37, CSS Color Module Level 3 */\n\n        function hsl2rgb(h, m1, m2) {\n          return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n        } // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/basis.js\n\n\n        function basis(t1, v0, v1, v2, v3) {\n          var t2 = t1 * t1,\n              t3 = t2 * t1;\n          return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n        }\n        /* harmony default export */\n\n\n        var src_basis = function (values) {\n          var n = values.length - 1;\n          return function (t) {\n            var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n                v1 = values[i],\n                v2 = values[i + 1],\n                v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n                v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n            return basis((t - i / n) * n, v0, v1, v2, v3);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/basisClosed.js\n\n        /* harmony default export */\n\n\n        var basisClosed = function (values) {\n          var n = values.length;\n          return function (t) {\n            var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n                v0 = values[(i + n - 1) % n],\n                v1 = values[i % n],\n                v2 = values[(i + 1) % n],\n                v3 = values[(i + 2) % n];\n            return basis((t - i / n) * n, v0, v1, v2, v3);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/constant.js\n\n        /* harmony default export */\n\n\n        var src_constant = function (x) {\n          return function () {\n            return x;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/color.js\n\n\n        function linear(a, d) {\n          return function (t) {\n            return a + t * d;\n          };\n        }\n\n        function exponential(a, b, y) {\n          return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n            return Math.pow(a + t * b, y);\n          };\n        }\n\n        function hue(a, b) {\n          var d = b - a;\n          return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : src_constant(isNaN(a) ? b : a);\n        }\n\n        function gamma(y) {\n          return (y = +y) === 1 ? nogamma : function (a, b) {\n            return b - a ? exponential(a, b, y) : src_constant(isNaN(a) ? b : a);\n          };\n        }\n\n        function nogamma(a, b) {\n          var d = b - a;\n          return d ? linear(a, d) : src_constant(isNaN(a) ? b : a);\n        } // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/rgb.js\n\n        /* harmony default export */\n\n\n        var src_rgb = function rgbGamma(y) {\n          var color = gamma(y);\n\n          function rgb(start, end) {\n            var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),\n                g = color(start.g, end.g),\n                b = color(start.b, end.b),\n                opacity = nogamma(start.opacity, end.opacity);\n            return function (t) {\n              start.r = r(t);\n              start.g = g(t);\n              start.b = b(t);\n              start.opacity = opacity(t);\n              return start + \"\";\n            };\n          }\n\n          rgb.gamma = rgbGamma;\n          return rgb;\n        }(1);\n\n        function rgbSpline(spline) {\n          return function (colors) {\n            var n = colors.length,\n                r = new Array(n),\n                g = new Array(n),\n                b = new Array(n),\n                i,\n                color;\n\n            for (i = 0; i < n; ++i) {\n              color = color_rgb(colors[i]);\n              r[i] = color.r || 0;\n              g[i] = color.g || 0;\n              b[i] = color.b || 0;\n            }\n\n            r = spline(r);\n            g = spline(g);\n            b = spline(b);\n            color.opacity = 1;\n            return function (t) {\n              color.r = r(t);\n              color.g = g(t);\n              color.b = b(t);\n              return color + \"\";\n            };\n          };\n        }\n\n        var rgbBasis = rgbSpline(src_basis);\n        var rgbBasisClosed = rgbSpline(basisClosed); // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/numberArray.js\n\n        /* harmony default export */\n\n        var numberArray = function (a, b) {\n          if (!b) b = [];\n          var n = a ? Math.min(b.length, a.length) : 0,\n              c = b.slice(),\n              i;\n          return function (t) {\n            for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n\n            return c;\n          };\n        };\n\n        function isNumberArray(x) {\n          return ArrayBuffer.isView(x) && !(x instanceof DataView);\n        } // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/array.js\n\n        /* harmony default export */\n\n\n        var array = function (a, b) {\n          return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n        };\n\n        function genericArray(a, b) {\n          var nb = b ? b.length : 0,\n              na = a ? Math.min(nb, a.length) : 0,\n              x = new Array(na),\n              c = new Array(nb),\n              i;\n\n          for (i = 0; i < na; ++i) x[i] = src_value(a[i], b[i]);\n\n          for (; i < nb; ++i) c[i] = b[i];\n\n          return function (t) {\n            for (i = 0; i < na; ++i) c[i] = x[i](t);\n\n            return c;\n          };\n        } // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/date.js\n\n        /* harmony default export */\n\n\n        var date = function (a, b) {\n          var d = new Date();\n          return a = +a, b = +b, function (t) {\n            return d.setTime(a * (1 - t) + b * t), d;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/number.js\n\n        /* harmony default export */\n\n\n        var number = function (a, b) {\n          return a = +a, b = +b, function (t) {\n            return a * (1 - t) + b * t;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/object.js\n\n        /* harmony default export */\n\n\n        var object = function (a, b) {\n          var i = {},\n              c = {},\n              k;\n          if (a === null || typeof a !== \"object\") a = {};\n          if (b === null || typeof b !== \"object\") b = {};\n\n          for (k in b) {\n            if (k in a) {\n              i[k] = src_value(a[k], b[k]);\n            } else {\n              c[k] = b[k];\n            }\n          }\n\n          return function (t) {\n            for (k in i) c[k] = i[k](t);\n\n            return c;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/string.js\n\n\n        var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n            reB = new RegExp(reA.source, \"g\");\n\n        function string_zero(b) {\n          return function () {\n            return b;\n          };\n        }\n\n        function one(b) {\n          return function (t) {\n            return b(t) + \"\";\n          };\n        }\n        /* harmony default export */\n\n\n        var string = function (a, b) {\n          var bi = reA.lastIndex = reB.lastIndex = 0,\n              // scan index for next number in b\n          am,\n              // current match in a\n          bm,\n              // current match in b\n          bs,\n              // string preceding current number in b, if any\n          i = -1,\n              // index in s\n          s = [],\n              // string constants and placeholders\n          q = []; // number interpolators\n          // Coerce inputs to strings.\n\n          a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n          while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n            if ((bs = bm.index) > bi) {\n              // a string precedes the next number in b\n              bs = b.slice(bi, bs);\n              if (s[i]) s[i] += bs; // coalesce with previous string\n              else s[++i] = bs;\n            }\n\n            if ((am = am[0]) === (bm = bm[0])) {\n              // numbers in a & b match\n              if (s[i]) s[i] += bm; // coalesce with previous string\n              else s[++i] = bm;\n            } else {\n              // interpolate non-matching numbers\n              s[++i] = null;\n              q.push({\n                i: i,\n                x: number(am, bm)\n              });\n            }\n\n            bi = reB.lastIndex;\n          } // Add remains of b.\n\n\n          if (bi < b.length) {\n            bs = b.slice(bi);\n            if (s[i]) s[i] += bs; // coalesce with previous string\n            else s[++i] = bs;\n          } // Special optimization for only a single match.\n          // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n          return s.length < 2 ? q[0] ? one(q[0].x) : string_zero(b) : (b = q.length, function (t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\n            return s.join(\"\");\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/value.js\n\n        /* harmony default export */\n\n\n        var src_value = function (a, b) {\n          var t = typeof b,\n              c;\n          return b == null || t === \"boolean\" ? src_constant(b) : (t === \"number\" ? number : t === \"string\" ? (c = color_color(b)) ? (b = c, src_rgb) : string : b instanceof color_color ? src_rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : number)(a, b);\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/round.js\n\n        /* harmony default export */\n\n\n        var src_round = function (a, b) {\n          return a = +a, b = +b, function (t) {\n            return Math.round(a * (1 - t) + b * t);\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-scale/src/constant.js\n\n        /* harmony default export */\n\n\n        var d3_scale_src_constant = function (x) {\n          return function () {\n            return x;\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-scale/src/number.js\n\n        /* harmony default export */\n\n\n        var src_number = function (x) {\n          return +x;\n        }; // CONCATENATED MODULE: ../node_modules/d3-scale/src/continuous.js\n\n\n        var unit = [0, 1];\n\n        function continuous_identity(x) {\n          return x;\n        }\n\n        function normalize(a, b) {\n          return (b -= a = +a) ? function (x) {\n            return (x - a) / b;\n          } : d3_scale_src_constant(isNaN(b) ? NaN : 0.5);\n        }\n\n        function clamper(a, b) {\n          var t;\n          if (a > b) t = a, a = b, b = t;\n          return function (x) {\n            return Math.max(a, Math.min(b, x));\n          };\n        } // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n        // interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\n        function bimap(domain, range, interpolate) {\n          var d0 = domain[0],\n              d1 = domain[1],\n              r0 = range[0],\n              r1 = range[1];\n          if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n          return function (x) {\n            return r0(d0(x));\n          };\n        }\n\n        function polymap(domain, range, interpolate) {\n          var j = Math.min(domain.length, range.length) - 1,\n              d = new Array(j),\n              r = new Array(j),\n              i = -1; // Reverse descending domains.\n\n          if (domain[j] < domain[0]) {\n            domain = domain.slice().reverse();\n            range = range.slice().reverse();\n          }\n\n          while (++i < j) {\n            d[i] = normalize(domain[i], domain[i + 1]);\n            r[i] = interpolate(range[i], range[i + 1]);\n          }\n\n          return function (x) {\n            var i = bisect(domain, x, 1, j) - 1;\n            return r[i](d[i](x));\n          };\n        }\n\n        function copy(source, target) {\n          return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n        }\n\n        function transformer() {\n          var domain = unit,\n              range = unit,\n              interpolate = src_value,\n              transform,\n              untransform,\n              unknown,\n              clamp = continuous_identity,\n              piecewise,\n              output,\n              input;\n\n          function rescale() {\n            var n = Math.min(domain.length, range.length);\n            if (clamp !== continuous_identity) clamp = clamper(domain[0], domain[n - 1]);\n            piecewise = n > 2 ? polymap : bimap;\n            output = input = null;\n            return scale;\n          }\n\n          function scale(x) {\n            return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n          }\n\n          scale.invert = function (y) {\n            return clamp(untransform((input || (input = piecewise(range, domain.map(transform), number)))(y)));\n          };\n\n          scale.domain = function (_) {\n            return arguments.length ? (domain = Array.from(_, src_number), rescale()) : domain.slice();\n          };\n\n          scale.range = function (_) {\n            return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n          };\n\n          scale.rangeRound = function (_) {\n            return range = Array.from(_), interpolate = src_round, rescale();\n          };\n\n          scale.clamp = function (_) {\n            return arguments.length ? (clamp = _ ? true : continuous_identity, rescale()) : clamp !== continuous_identity;\n          };\n\n          scale.interpolate = function (_) {\n            return arguments.length ? (interpolate = _, rescale()) : interpolate;\n          };\n\n          scale.unknown = function (_) {\n            return arguments.length ? (unknown = _, scale) : unknown;\n          };\n\n          return function (t, u) {\n            transform = t, untransform = u;\n            return rescale();\n          };\n        }\n\n        function continuous() {\n          return transformer()(continuous_identity, continuous_identity);\n        } // CONCATENATED MODULE: ../node_modules/d3-scale/src/init.js\n\n\n        function initRange(domain, range) {\n          switch (arguments.length) {\n            case 0:\n              break;\n\n            case 1:\n              this.range(domain);\n              break;\n\n            default:\n              this.range(range).domain(domain);\n              break;\n          }\n\n          return this;\n        }\n\n        function initInterpolator(domain, interpolator) {\n          switch (arguments.length) {\n            case 0:\n              break;\n\n            case 1:\n              {\n                if (typeof domain === \"function\") this.interpolator(domain);else this.range(domain);\n                break;\n              }\n\n            default:\n              {\n                this.domain(domain);\n                if (typeof interpolator === \"function\") this.interpolator(interpolator);else this.range(interpolator);\n                break;\n              }\n          }\n\n          return this;\n        } // CONCATENATED MODULE: ../node_modules/d3-format/src/precisionPrefix.js\n\n        /* harmony default export */\n\n\n        var precisionPrefix = function (step, value) {\n          return Math.max(0, Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3 - src_exponent(Math.abs(step)));\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/precisionRound.js\n\n        /* harmony default export */\n\n\n        var precisionRound = function (step, max) {\n          step = Math.abs(step), max = Math.abs(max) - step;\n          return Math.max(0, src_exponent(max) - src_exponent(step)) + 1;\n        }; // CONCATENATED MODULE: ../node_modules/d3-format/src/precisionFixed.js\n\n        /* harmony default export */\n\n\n        var precisionFixed = function (step) {\n          return Math.max(0, -src_exponent(Math.abs(step)));\n        }; // CONCATENATED MODULE: ../node_modules/d3-scale/src/tickFormat.js\n\n        /* harmony default export */\n\n\n        var tickFormat = function (start, stop, count, specifier) {\n          var step = tickStep(start, stop, count),\n              precision;\n          specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n          switch (specifier.type) {\n            case \"s\":\n              {\n                var value = Math.max(Math.abs(start), Math.abs(stop));\n                if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n                return defaultLocale_formatPrefix(specifier, value);\n              }\n\n            case \"\":\n            case \"e\":\n            case \"g\":\n            case \"p\":\n            case \"r\":\n              {\n                if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n                break;\n              }\n\n            case \"f\":\n            case \"%\":\n              {\n                if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n                break;\n              }\n          }\n\n          return defaultLocale_format(specifier);\n        }; // CONCATENATED MODULE: ../node_modules/d3-scale/src/linear.js\n\n\n        function linearish(scale) {\n          var domain = scale.domain;\n\n          scale.ticks = function (count) {\n            var d = domain();\n            return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n          };\n\n          scale.tickFormat = function (count, specifier) {\n            var d = domain();\n            return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n          };\n\n          scale.nice = function (count) {\n            if (count == null) count = 10;\n            var d = domain(),\n                i0 = 0,\n                i1 = d.length - 1,\n                start = d[i0],\n                stop = d[i1],\n                step;\n\n            if (stop < start) {\n              step = start, start = stop, stop = step;\n              step = i0, i0 = i1, i1 = step;\n            }\n\n            step = tickIncrement(start, stop, count);\n\n            if (step > 0) {\n              start = Math.floor(start / step) * step;\n              stop = Math.ceil(stop / step) * step;\n              step = tickIncrement(start, stop, count);\n            } else if (step < 0) {\n              start = Math.ceil(start * step) / step;\n              stop = Math.floor(stop * step) / step;\n              step = tickIncrement(start, stop, count);\n            }\n\n            if (step > 0) {\n              d[i0] = Math.floor(start / step) * step;\n              d[i1] = Math.ceil(stop / step) * step;\n              domain(d);\n            } else if (step < 0) {\n              d[i0] = Math.ceil(start * step) / step;\n              d[i1] = Math.floor(stop * step) / step;\n              domain(d);\n            }\n\n            return scale;\n          };\n\n          return scale;\n        }\n\n        function linear_linear() {\n          var scale = continuous();\n\n          scale.copy = function () {\n            return copy(scale, linear_linear());\n          };\n\n          initRange.apply(scale, arguments);\n          return linearish(scale);\n        } // CONCATENATED MODULE: ../node_modules/d3-ease/src/cubic.js\n\n\n        function cubicIn(t) {\n          return t * t * t;\n        }\n\n        function cubicOut(t) {\n          return --t * t * t + 1;\n        }\n\n        function cubicInOut(t) {\n          return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n        } // CONCATENATED MODULE: ../node_modules/d3-dispatch/src/dispatch.js\n\n\n        var noop = {\n          value: function () {}\n        };\n\n        function dispatch_dispatch() {\n          for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n            if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n            _[t] = [];\n          }\n\n          return new Dispatch(_);\n        }\n\n        function Dispatch(_) {\n          this._ = _;\n        }\n\n        function dispatch_parseTypenames(typenames, types) {\n          return typenames.trim().split(/^|\\s+/).map(function (t) {\n            var name = \"\",\n                i = t.indexOf(\".\");\n            if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n            if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n            return {\n              type: t,\n              name: name\n            };\n          });\n        }\n\n        Dispatch.prototype = dispatch_dispatch.prototype = {\n          constructor: Dispatch,\n          on: function (typename, callback) {\n            var _ = this._,\n                T = dispatch_parseTypenames(typename + \"\", _),\n                t,\n                i = -1,\n                n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n            if (arguments.length < 2) {\n              while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\n              return;\n            } // If a type was specified, set the callback for the given type and name.\n            // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n            if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n            while (++i < n) {\n              if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n            }\n\n            return this;\n          },\n          copy: function () {\n            var copy = {},\n                _ = this._;\n\n            for (var t in _) copy[t] = _[t].slice();\n\n            return new Dispatch(copy);\n          },\n          call: function (type, that) {\n            if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n            for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n          },\n          apply: function (type, that, args) {\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n            for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n          }\n        };\n\n        function get(type, name) {\n          for (var i = 0, n = type.length, c; i < n; ++i) {\n            if ((c = type[i]).name === name) {\n              return c.value;\n            }\n          }\n        }\n\n        function set(type, name, callback) {\n          for (var i = 0, n = type.length; i < n; ++i) {\n            if (type[i].name === name) {\n              type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n              break;\n            }\n          }\n\n          if (callback != null) type.push({\n            name: name,\n            value: callback\n          });\n          return type;\n        }\n        /* harmony default export */\n\n\n        var src_dispatch = dispatch_dispatch; // CONCATENATED MODULE: ../node_modules/d3-timer/src/timer.js\n\n        var timer_frame = 0,\n            // is an animation frame pending?\n        timeout = 0,\n            // is a timeout pending?\n        interval = 0,\n            // are any timers active?\n        pokeDelay = 1000,\n            // how frequently we check for clock skew\n        taskHead,\n            taskTail,\n            clockLast = 0,\n            clockNow = 0,\n            clockSkew = 0,\n            clock = typeof performance === \"object\" && performance.now ? performance : Date,\n            setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n          setTimeout(f, 17);\n        };\n\n        function now() {\n          return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n        }\n\n        function clearNow() {\n          clockNow = 0;\n        }\n\n        function Timer() {\n          this._call = this._time = this._next = null;\n        }\n\n        Timer.prototype = timer.prototype = {\n          constructor: Timer,\n          restart: function (callback, delay, time) {\n            if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n            time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n            if (!this._next && taskTail !== this) {\n              if (taskTail) taskTail._next = this;else taskHead = this;\n              taskTail = this;\n            }\n\n            this._call = callback;\n            this._time = time;\n            sleep();\n          },\n          stop: function () {\n            if (this._call) {\n              this._call = null;\n              this._time = Infinity;\n              sleep();\n            }\n          }\n        };\n\n        function timer(callback, delay, time) {\n          var t = new Timer();\n          t.restart(callback, delay, time);\n          return t;\n        }\n\n        function timerFlush() {\n          now(); // Get the current time, if not already set.\n\n          ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n          var t = taskHead,\n              e;\n\n          while (t) {\n            if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n            t = t._next;\n          }\n\n          --timer_frame;\n        }\n\n        function wake() {\n          clockNow = (clockLast = clock.now()) + clockSkew;\n          timer_frame = timeout = 0;\n\n          try {\n            timerFlush();\n          } finally {\n            timer_frame = 0;\n            nap();\n            clockNow = 0;\n          }\n        }\n\n        function poke() {\n          var now = clock.now(),\n              delay = now - clockLast;\n          if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n        }\n\n        function nap() {\n          var t0,\n              t1 = taskHead,\n              t2,\n              time = Infinity;\n\n          while (t1) {\n            if (t1._call) {\n              if (time > t1._time) time = t1._time;\n              t0 = t1, t1 = t1._next;\n            } else {\n              t2 = t1._next, t1._next = null;\n              t1 = t0 ? t0._next = t2 : taskHead = t2;\n            }\n          }\n\n          taskTail = t0;\n          sleep(time);\n        }\n\n        function sleep(time) {\n          if (timer_frame) return; // Soonest alarm already set, or will be.\n\n          if (timeout) timeout = clearTimeout(timeout);\n          var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n          if (delay > 24) {\n            if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n            if (interval) interval = clearInterval(interval);\n          } else {\n            if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n            timer_frame = 1, setFrame(wake);\n          }\n        } // CONCATENATED MODULE: ../node_modules/d3-timer/src/timeout.js\n\n        /* harmony default export */\n\n\n        var src_timeout = function (callback, delay, time) {\n          var t = new Timer();\n          delay = delay == null ? 0 : +delay;\n          t.restart(function (elapsed) {\n            t.stop();\n            callback(elapsed + delay);\n          }, delay, time);\n          return t;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/schedule.js\n\n\n        var emptyOn = src_dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\n        var emptyTween = [];\n        var CREATED = 0;\n        var SCHEDULED = 1;\n        var STARTING = 2;\n        var STARTED = 3;\n        var RUNNING = 4;\n        var ENDING = 5;\n        var ENDED = 6;\n        /* harmony default export */\n\n        var transition_schedule = function (node, name, id, index, group, timing) {\n          var schedules = node.__transition;\n          if (!schedules) node.__transition = {};else if (id in schedules) return;\n          schedule_create(node, id, {\n            name: name,\n            index: index,\n            // For context during callback.\n            group: group,\n            // For context during callback.\n            on: emptyOn,\n            tween: emptyTween,\n            time: timing.time,\n            delay: timing.delay,\n            duration: timing.duration,\n            ease: timing.ease,\n            timer: null,\n            state: CREATED\n          });\n        };\n\n        function init(node, id) {\n          var schedule = schedule_get(node, id);\n          if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n          return schedule;\n        }\n\n        function schedule_set(node, id) {\n          var schedule = schedule_get(node, id);\n          if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n          return schedule;\n        }\n\n        function schedule_get(node, id) {\n          var schedule = node.__transition;\n          if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n          return schedule;\n        }\n\n        function schedule_create(node, id, self) {\n          var schedules = node.__transition,\n              tween; // Initialize the self timer when the transition is created.\n          // Note the actual delay is not known until the first callback!\n\n          schedules[id] = self;\n          self.timer = timer(schedule, 0, self.time);\n\n          function schedule(elapsed) {\n            self.state = SCHEDULED;\n            self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n            if (self.delay <= elapsed) start(elapsed - self.delay);\n          }\n\n          function start(elapsed) {\n            var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n            if (self.state !== SCHEDULED) return stop();\n\n            for (i in schedules) {\n              o = schedules[i];\n              if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n              // defer starting an interrupting transition until that transition has a\n              // chance to tick (and possibly end); see d3/d3-transition#54!\n\n              if (o.state === STARTED) return src_timeout(start); // Interrupt the active transition, if any.\n\n              if (o.state === RUNNING) {\n                o.state = ENDED;\n                o.timer.stop();\n                o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n                delete schedules[i];\n              } // Cancel any pre-empted transitions.\n              else if (+i < id) {\n                o.state = ENDED;\n                o.timer.stop();\n                o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n                delete schedules[i];\n              }\n            } // Defer the first tick to end of the current frame; see d3/d3#1576.\n            // Note the transition may be canceled after start and before the first tick!\n            // Note this must be scheduled before the start event; see d3/d3-transition#16!\n            // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n            src_timeout(function () {\n              if (self.state === STARTED) {\n                self.state = RUNNING;\n                self.timer.restart(tick, self.delay, self.time);\n                tick(elapsed);\n              }\n            }); // Dispatch the start event.\n            // Note this must be done before the tween are initialized.\n\n            self.state = STARTING;\n            self.on.call(\"start\", node, node.__data__, self.index, self.group);\n            if (self.state !== STARTING) return; // interrupted\n\n            self.state = STARTED; // Initialize the tween, deleting null tween.\n\n            tween = new Array(n = self.tween.length);\n\n            for (i = 0, j = -1; i < n; ++i) {\n              if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n                tween[++j] = o;\n              }\n            }\n\n            tween.length = j + 1;\n          }\n\n          function tick(elapsed) {\n            var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n                i = -1,\n                n = tween.length;\n\n            while (++i < n) {\n              tween[i].call(node, t);\n            } // Dispatch the end event.\n\n\n            if (self.state === ENDING) {\n              self.on.call(\"end\", node, node.__data__, self.index, self.group);\n              stop();\n            }\n          }\n\n          function stop() {\n            self.state = ENDED;\n            self.timer.stop();\n            delete schedules[id];\n\n            for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\n\n            delete node.__transition;\n          }\n        } // CONCATENATED MODULE: ../node_modules/d3-transition/src/interrupt.js\n\n        /* harmony default export */\n\n\n        var interrupt = function (node, name) {\n          var schedules = node.__transition,\n              schedule,\n              active,\n              empty = true,\n              i;\n          if (!schedules) return;\n          name = name == null ? null : name + \"\";\n\n          for (i in schedules) {\n            if ((schedule = schedules[i]).name !== name) {\n              empty = false;\n              continue;\n            }\n\n            active = schedule.state > STARTING && schedule.state < ENDING;\n            schedule.state = ENDED;\n            schedule.timer.stop();\n            schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n            delete schedules[i];\n          }\n\n          if (empty) delete node.__transition;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/selection/interrupt.js\n\n        /* harmony default export */\n\n\n        var selection_interrupt = function (name) {\n          return this.each(function () {\n            interrupt(this, name);\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/transform/decompose.js\n\n\n        var degrees = 180 / Math.PI;\n        var decompose_identity = {\n          translateX: 0,\n          translateY: 0,\n          rotate: 0,\n          skewX: 0,\n          scaleX: 1,\n          scaleY: 1\n        };\n        /* harmony default export */\n\n        var decompose = function (a, b, c, d, e, f) {\n          var scaleX, scaleY, skewX;\n          if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n          if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n          if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n          if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n          return {\n            translateX: e,\n            translateY: f,\n            rotate: Math.atan2(b, a) * degrees,\n            skewX: Math.atan(skewX) * degrees,\n            scaleX: scaleX,\n            scaleY: scaleY\n          };\n        }; // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/transform/parse.js\n\n\n        var cssNode, cssRoot, cssView, svgNode;\n\n        function parseCss(value) {\n          if (value === \"none\") return decompose_identity;\n          if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n          cssNode.style.transform = value;\n          value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n          cssRoot.removeChild(cssNode);\n          value = value.slice(7, -1).split(\",\");\n          return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n        }\n\n        function parseSvg(value) {\n          if (value == null) return decompose_identity;\n          if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n          svgNode.setAttribute(\"transform\", value);\n          if (!(value = svgNode.transform.baseVal.consolidate())) return decompose_identity;\n          value = value.matrix;\n          return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n        } // CONCATENATED MODULE: ../node_modules/d3-interpolate/src/transform/index.js\n\n\n        function interpolateTransform(parse, pxComma, pxParen, degParen) {\n          function pop(s) {\n            return s.length ? s.pop() + \" \" : \"\";\n          }\n\n          function translate(xa, ya, xb, yb, s, q) {\n            if (xa !== xb || ya !== yb) {\n              var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n              q.push({\n                i: i - 4,\n                x: number(xa, xb)\n              }, {\n                i: i - 2,\n                x: number(ya, yb)\n              });\n            } else if (xb || yb) {\n              s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n            }\n          }\n\n          function rotate(a, b, s, q) {\n            if (a !== b) {\n              if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n              q.push({\n                i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n                x: number(a, b)\n              });\n            } else if (b) {\n              s.push(pop(s) + \"rotate(\" + b + degParen);\n            }\n          }\n\n          function skewX(a, b, s, q) {\n            if (a !== b) {\n              q.push({\n                i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n                x: number(a, b)\n              });\n            } else if (b) {\n              s.push(pop(s) + \"skewX(\" + b + degParen);\n            }\n          }\n\n          function scale(xa, ya, xb, yb, s, q) {\n            if (xa !== xb || ya !== yb) {\n              var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n              q.push({\n                i: i - 4,\n                x: number(xa, xb)\n              }, {\n                i: i - 2,\n                x: number(ya, yb)\n              });\n            } else if (xb !== 1 || yb !== 1) {\n              s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n            }\n          }\n\n          return function (a, b) {\n            var s = [],\n                // string constants and placeholders\n            q = []; // number interpolators\n\n            a = parse(a), b = parse(b);\n            translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n            rotate(a.rotate, b.rotate, s, q);\n            skewX(a.skewX, b.skewX, s, q);\n            scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n            a = b = null; // gc\n\n            return function (t) {\n              var i = -1,\n                  n = q.length,\n                  o;\n\n              while (++i < n) s[(o = q[i]).i] = o.x(t);\n\n              return s.join(\"\");\n            };\n          };\n        }\n\n        var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n        var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\"); // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/tween.js\n\n        function tweenRemove(id, name) {\n          var tween0, tween1;\n          return function () {\n            var schedule = schedule_set(this, id),\n                tween = schedule.tween; // If this node shared tween with the previous node,\n            // just assign the updated shared tween and we’re done!\n            // Otherwise, copy-on-write.\n\n            if (tween !== tween0) {\n              tween1 = tween0 = tween;\n\n              for (var i = 0, n = tween1.length; i < n; ++i) {\n                if (tween1[i].name === name) {\n                  tween1 = tween1.slice();\n                  tween1.splice(i, 1);\n                  break;\n                }\n              }\n            }\n\n            schedule.tween = tween1;\n          };\n        }\n\n        function tweenFunction(id, name, value) {\n          var tween0, tween1;\n          if (typeof value !== \"function\") throw new Error();\n          return function () {\n            var schedule = schedule_set(this, id),\n                tween = schedule.tween; // If this node shared tween with the previous node,\n            // just assign the updated shared tween and we’re done!\n            // Otherwise, copy-on-write.\n\n            if (tween !== tween0) {\n              tween1 = (tween0 = tween).slice();\n\n              for (var t = {\n                name: name,\n                value: value\n              }, i = 0, n = tween1.length; i < n; ++i) {\n                if (tween1[i].name === name) {\n                  tween1[i] = t;\n                  break;\n                }\n              }\n\n              if (i === n) tween1.push(t);\n            }\n\n            schedule.tween = tween1;\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_tween = function (name, value) {\n          var id = this._id;\n          name += \"\";\n\n          if (arguments.length < 2) {\n            var tween = schedule_get(this.node(), id).tween;\n\n            for (var i = 0, n = tween.length, t; i < n; ++i) {\n              if ((t = tween[i]).name === name) {\n                return t.value;\n              }\n            }\n\n            return null;\n          }\n\n          return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n        };\n\n        function tweenValue(transition, name, value) {\n          var id = transition._id;\n          transition.each(function () {\n            var schedule = schedule_set(this, id);\n            (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n          });\n          return function (node) {\n            return schedule_get(node, id).value[name];\n          };\n        } // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/interpolate.js\n\n        /* harmony default export */\n\n\n        var transition_interpolate = function (a, b) {\n          var c;\n          return (typeof b === \"number\" ? number : b instanceof color_color ? src_rgb : (c = color_color(b)) ? (b = c, src_rgb) : string)(a, b);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/attr.js\n\n\n        function attr_attrRemove(name) {\n          return function () {\n            this.removeAttribute(name);\n          };\n        }\n\n        function attr_attrRemoveNS(fullname) {\n          return function () {\n            this.removeAttributeNS(fullname.space, fullname.local);\n          };\n        }\n\n        function attr_attrConstant(name, interpolate, value1) {\n          var string00,\n              string1 = value1 + \"\",\n              interpolate0;\n          return function () {\n            var string0 = this.getAttribute(name);\n            return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n          };\n        }\n\n        function attr_attrConstantNS(fullname, interpolate, value1) {\n          var string00,\n              string1 = value1 + \"\",\n              interpolate0;\n          return function () {\n            var string0 = this.getAttributeNS(fullname.space, fullname.local);\n            return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n          };\n        }\n\n        function attr_attrFunction(name, interpolate, value) {\n          var string00, string10, interpolate0;\n          return function () {\n            var string0,\n                value1 = value(this),\n                string1;\n            if (value1 == null) return void this.removeAttribute(name);\n            string0 = this.getAttribute(name);\n            string1 = value1 + \"\";\n            return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n          };\n        }\n\n        function attr_attrFunctionNS(fullname, interpolate, value) {\n          var string00, string10, interpolate0;\n          return function () {\n            var string0,\n                value1 = value(this),\n                string1;\n            if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n            string0 = this.getAttributeNS(fullname.space, fullname.local);\n            string1 = value1 + \"\";\n            return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_attr = function (name, value) {\n          var fullname = namespace(name),\n              i = fullname === \"transform\" ? interpolateTransformSvg : transition_interpolate;\n          return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attr_attrFunctionNS : attr_attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attr_attrRemoveNS : attr_attrRemove)(fullname) : (fullname.local ? attr_attrConstantNS : attr_attrConstant)(fullname, i, value));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/attrTween.js\n\n\n        function attrInterpolate(name, i) {\n          return function (t) {\n            this.setAttribute(name, i.call(this, t));\n          };\n        }\n\n        function attrInterpolateNS(fullname, i) {\n          return function (t) {\n            this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n          };\n        }\n\n        function attrTweenNS(fullname, value) {\n          var t0, i0;\n\n          function tween() {\n            var i = value.apply(this, arguments);\n            if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n            return t0;\n          }\n\n          tween._value = value;\n          return tween;\n        }\n\n        function attrTween(name, value) {\n          var t0, i0;\n\n          function tween() {\n            var i = value.apply(this, arguments);\n            if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n            return t0;\n          }\n\n          tween._value = value;\n          return tween;\n        }\n        /* harmony default export */\n\n\n        var transition_attrTween = function (name, value) {\n          var key = \"attr.\" + name;\n          if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n          if (value == null) return this.tween(key, null);\n          if (typeof value !== \"function\") throw new Error();\n          var fullname = namespace(name);\n          return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/delay.js\n\n\n        function delayFunction(id, value) {\n          return function () {\n            init(this, id).delay = +value.apply(this, arguments);\n          };\n        }\n\n        function delayConstant(id, value) {\n          return value = +value, function () {\n            init(this, id).delay = value;\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_delay = function (value) {\n          var id = this._id;\n          return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : schedule_get(this.node(), id).delay;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/duration.js\n\n\n        function durationFunction(id, value) {\n          return function () {\n            schedule_set(this, id).duration = +value.apply(this, arguments);\n          };\n        }\n\n        function durationConstant(id, value) {\n          return value = +value, function () {\n            schedule_set(this, id).duration = value;\n          };\n        }\n        /* harmony default export */\n\n\n        var duration = function (value) {\n          var id = this._id;\n          return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : schedule_get(this.node(), id).duration;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/ease.js\n\n\n        function easeConstant(id, value) {\n          if (typeof value !== \"function\") throw new Error();\n          return function () {\n            schedule_set(this, id).ease = value;\n          };\n        }\n        /* harmony default export */\n\n\n        var ease = function (value) {\n          var id = this._id;\n          return arguments.length ? this.each(easeConstant(id, value)) : schedule_get(this.node(), id).ease;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/filter.js\n\n        /* harmony default export */\n\n\n        var transition_filter = function (match) {\n          if (typeof match !== \"function\") match = matcher(match);\n\n          for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n              if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n                subgroup.push(node);\n              }\n            }\n          }\n\n          return new Transition(subgroups, this._parents, this._name, this._id);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/merge.js\n\n        /* harmony default export */\n\n\n        var transition_merge = function (transition) {\n          if (transition._id !== this._id) throw new Error();\n\n          for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n              if (node = group0[i] || group1[i]) {\n                merge[i] = node;\n              }\n            }\n          }\n\n          for (; j < m0; ++j) {\n            merges[j] = groups0[j];\n          }\n\n          return new Transition(merges, this._parents, this._name, this._id);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/on.js\n\n\n        function on_start(name) {\n          return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n            var i = t.indexOf(\".\");\n            if (i >= 0) t = t.slice(0, i);\n            return !t || t === \"start\";\n          });\n        }\n\n        function onFunction(id, name, listener) {\n          var on0,\n              on1,\n              sit = on_start(name) ? init : schedule_set;\n          return function () {\n            var schedule = sit(this, id),\n                on = schedule.on; // If this node shared a dispatch with the previous node,\n            // just assign the updated shared dispatch and we’re done!\n            // Otherwise, copy-on-write.\n\n            if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n            schedule.on = on1;\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_on = function (name, listener) {\n          var id = this._id;\n          return arguments.length < 2 ? schedule_get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/remove.js\n\n\n        function removeFunction(id) {\n          return function () {\n            var parent = this.parentNode;\n\n            for (var i in this.__transition) if (+i !== id) return;\n\n            if (parent) parent.removeChild(this);\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_remove = function () {\n          return this.on(\"end.remove\", removeFunction(this._id));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/select.js\n\n        /* harmony default export */\n\n\n        var transition_select = function (select) {\n          var name = this._name,\n              id = this._id;\n          if (typeof select !== \"function\") select = src_selector(select);\n\n          for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n              if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n                if (\"__data__\" in node) subnode.__data__ = node.__data__;\n                subgroup[i] = subnode;\n                transition_schedule(subgroup[i], name, id, i, subgroup, schedule_get(node, id));\n              }\n            }\n          }\n\n          return new Transition(subgroups, this._parents, name, id);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/selectAll.js\n\n        /* harmony default export */\n\n\n        var transition_selectAll = function (select) {\n          var name = this._name,\n              id = this._id;\n          if (typeof select !== \"function\") select = selectorAll(select);\n\n          for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n              if (node = group[i]) {\n                for (var children = select.call(node, node.__data__, i, group), child, inherit = schedule_get(node, id), k = 0, l = children.length; k < l; ++k) {\n                  if (child = children[k]) {\n                    transition_schedule(child, name, id, k, children, inherit);\n                  }\n                }\n\n                subgroups.push(children);\n                parents.push(node);\n              }\n            }\n          }\n\n          return new Transition(subgroups, parents, name, id);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/selection.js\n\n\n        var selection_Selection = src_selection.prototype.constructor;\n        /* harmony default export */\n\n        var transition_selection = function () {\n          return new selection_Selection(this._groups, this._parents);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/style.js\n\n\n        function styleNull(name, interpolate) {\n          var string00, string10, interpolate0;\n          return function () {\n            var string0 = styleValue(this, name),\n                string1 = (this.style.removeProperty(name), styleValue(this, name));\n            return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n          };\n        }\n\n        function style_styleRemove(name) {\n          return function () {\n            this.style.removeProperty(name);\n          };\n        }\n\n        function style_styleConstant(name, interpolate, value1) {\n          var string00,\n              string1 = value1 + \"\",\n              interpolate0;\n          return function () {\n            var string0 = styleValue(this, name);\n            return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n          };\n        }\n\n        function style_styleFunction(name, interpolate, value) {\n          var string00, string10, interpolate0;\n          return function () {\n            var string0 = styleValue(this, name),\n                value1 = value(this),\n                string1 = value1 + \"\";\n            if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n            return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n          };\n        }\n\n        function styleMaybeRemove(id, name) {\n          var on0,\n              on1,\n              listener0,\n              key = \"style.\" + name,\n              event = \"end.\" + key,\n              remove;\n          return function () {\n            var schedule = schedule_set(this, id),\n                on = schedule.on,\n                listener = schedule.value[key] == null ? remove || (remove = style_styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,\n            // just assign the updated shared dispatch and we’re done!\n            // Otherwise, copy-on-write.\n\n            if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n            schedule.on = on1;\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_style = function (name, value, priority) {\n          var i = (name += \"\") === \"transform\" ? interpolateTransformCss : transition_interpolate;\n          return value == null ? this.styleTween(name, styleNull(name, i)).on(\"end.style.\" + name, style_styleRemove(name)) : typeof value === \"function\" ? this.styleTween(name, style_styleFunction(name, i, tweenValue(this, \"style.\" + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, style_styleConstant(name, i, value), priority).on(\"end.style.\" + name, null);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/styleTween.js\n\n\n        function styleInterpolate(name, i, priority) {\n          return function (t) {\n            this.style.setProperty(name, i.call(this, t), priority);\n          };\n        }\n\n        function styleTween(name, value, priority) {\n          var t, i0;\n\n          function tween() {\n            var i = value.apply(this, arguments);\n            if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n            return t;\n          }\n\n          tween._value = value;\n          return tween;\n        }\n        /* harmony default export */\n\n\n        var transition_styleTween = function (name, value, priority) {\n          var key = \"style.\" + (name += \"\");\n          if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n          if (value == null) return this.tween(key, null);\n          if (typeof value !== \"function\") throw new Error();\n          return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/text.js\n\n\n        function text_textConstant(value) {\n          return function () {\n            this.textContent = value;\n          };\n        }\n\n        function text_textFunction(value) {\n          return function () {\n            var value1 = value(this);\n            this.textContent = value1 == null ? \"\" : value1;\n          };\n        }\n        /* harmony default export */\n\n\n        var transition_text = function (value) {\n          return this.tween(\"text\", typeof value === \"function\" ? text_textFunction(tweenValue(this, \"text\", value)) : text_textConstant(value == null ? \"\" : value + \"\"));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/textTween.js\n\n\n        function textInterpolate(i) {\n          return function (t) {\n            this.textContent = i.call(this, t);\n          };\n        }\n\n        function textTween(value) {\n          var t0, i0;\n\n          function tween() {\n            var i = value.apply(this, arguments);\n            if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n            return t0;\n          }\n\n          tween._value = value;\n          return tween;\n        }\n        /* harmony default export */\n\n\n        var transition_textTween = function (value) {\n          var key = \"text\";\n          if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n          if (value == null) return this.tween(key, null);\n          if (typeof value !== \"function\") throw new Error();\n          return this.tween(key, textTween(value));\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/transition.js\n\n        /* harmony default export */\n\n\n        var transition_transition = function () {\n          var name = this._name,\n              id0 = this._id,\n              id1 = newId();\n\n          for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n              if (node = group[i]) {\n                var inherit = schedule_get(node, id0);\n                transition_schedule(node, name, id1, i, group, {\n                  time: inherit.time + inherit.delay + inherit.duration,\n                  delay: 0,\n                  duration: inherit.duration,\n                  ease: inherit.ease\n                });\n              }\n            }\n          }\n\n          return new Transition(groups, this._parents, name, id1);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/end.js\n\n        /* harmony default export */\n\n\n        var transition_end = function () {\n          var on0,\n              on1,\n              that = this,\n              id = that._id,\n              size = that.size();\n          return new Promise(function (resolve, reject) {\n            var cancel = {\n              value: reject\n            },\n                end = {\n              value: function () {\n                if (--size === 0) resolve();\n              }\n            };\n            that.each(function () {\n              var schedule = schedule_set(this, id),\n                  on = schedule.on; // If this node shared a dispatch with the previous node,\n              // just assign the updated shared dispatch and we’re done!\n              // Otherwise, copy-on-write.\n\n              if (on !== on0) {\n                on1 = (on0 = on).copy();\n\n                on1._.cancel.push(cancel);\n\n                on1._.interrupt.push(cancel);\n\n                on1._.end.push(end);\n              }\n\n              schedule.on = on1;\n            });\n          });\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/transition/index.js\n\n\n        var transition_id = 0;\n\n        function Transition(groups, parents, name, id) {\n          this._groups = groups;\n          this._parents = parents;\n          this._name = name;\n          this._id = id;\n        }\n\n        function src_transition_transition(name) {\n          return src_selection().transition(name);\n        }\n\n        function newId() {\n          return ++transition_id;\n        }\n\n        var selection_prototype = src_selection.prototype;\n        Transition.prototype = src_transition_transition.prototype = {\n          constructor: Transition,\n          select: transition_select,\n          selectAll: transition_selectAll,\n          filter: transition_filter,\n          merge: transition_merge,\n          selection: transition_selection,\n          transition: transition_transition,\n          call: selection_prototype.call,\n          nodes: selection_prototype.nodes,\n          node: selection_prototype.node,\n          size: selection_prototype.size,\n          empty: selection_prototype.empty,\n          each: selection_prototype.each,\n          on: transition_on,\n          attr: transition_attr,\n          attrTween: transition_attrTween,\n          style: transition_style,\n          styleTween: transition_styleTween,\n          text: transition_text,\n          textTween: transition_textTween,\n          remove: transition_remove,\n          tween: transition_tween,\n          delay: transition_delay,\n          duration: duration,\n          ease: ease,\n          end: transition_end\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/selection/transition.js\n\n        var defaultTiming = {\n          time: null,\n          // Set on use.\n          delay: 0,\n          duration: 250,\n          ease: cubicInOut\n        };\n\n        function transition_inherit(node, id) {\n          var timing;\n\n          while (!(timing = node.__transition) || !(timing = timing[id])) {\n            if (!(node = node.parentNode)) {\n              return defaultTiming.time = now(), defaultTiming;\n            }\n          }\n\n          return timing;\n        }\n        /* harmony default export */\n\n\n        var selection_transition = function (name) {\n          var id, timing;\n\n          if (name instanceof Transition) {\n            id = name._id, name = name._name;\n          } else {\n            id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n          }\n\n          for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n              if (node = group[i]) {\n                transition_schedule(node, name, id, i, group, timing || transition_inherit(node, id));\n              }\n            }\n          }\n\n          return new Transition(groups, this._parents, name, id);\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/selection/index.js\n\n\n        src_selection.prototype.interrupt = selection_interrupt;\n        src_selection.prototype.transition = selection_transition; // CONCATENATED MODULE: ../node_modules/d3-transition/src/active.js\n\n        var active_root = [null];\n        /* harmony default export */\n\n        var src_active = function (node, name) {\n          var schedules = node.__transition,\n              schedule,\n              i;\n\n          if (schedules) {\n            name = name == null ? null : name + \"\";\n\n            for (i in schedules) {\n              if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n                return new Transition([[node]], active_root, name, +i);\n              }\n            }\n          }\n\n          return null;\n        }; // CONCATENATED MODULE: ../node_modules/d3-transition/src/index.js\n        // CONCATENATED MODULE: ./flamegraph.js\n\n        /* harmony default export */\n\n\n        var flamegraph = __webpack_exports__[\"default\"] = function () {\n          var w = 960; // graph width\n\n          var h = null; // graph height\n\n          var c = 18; // cell height\n\n          var selection = null; // selection\n\n          var tooltip = null; // tooltip\n\n          var title = ''; // graph title\n\n          var transitionDuration = 750;\n          var transitionEase = cubicInOut; // tooltip offset\n\n          var sort = false;\n          var inverted = false; // invert the graph direction\n\n          var clickHandler = null;\n          var minFrameSize = 0;\n          var detailsElement = null;\n          var selfValue = false;\n          var searchSum = 0;\n          var totalValue = 0;\n          var resetHeightOnZoom = false;\n          var scrollOnZoom = false;\n          var minHeight = null;\n          var computeDelta = false;\n          var colorHue = null;\n\n          var getName = function (d) {\n            return d.data.n || d.data.name;\n          };\n\n          var getValue = function (d) {\n            if ('v' in d) {\n              return d.v;\n            } else {\n              return d.value;\n            }\n          };\n\n          var getChildren = function (d) {\n            return d.c || d.children;\n          };\n\n          var getLibtype = function (d) {\n            return d.data.l || d.data.libtype;\n          };\n\n          var getDelta = function (d) {\n            if ('d' in d.data) {\n              return d.data.d;\n            } else {\n              return d.data.delta;\n            }\n          };\n\n          var searchHandler = function () {\n            if (detailsElement) {\n              setSearchDetails();\n            }\n          };\n\n          var originalSearchHandler = searchHandler;\n\n          let searchMatch = (d, term, ignoreCase = false) => {\n            if (!term) {\n              return false;\n            }\n\n            let label = getName(d);\n\n            if (ignoreCase) {\n              term = term.toLowerCase();\n              label = label.toLowerCase();\n            }\n\n            const re = new RegExp(term);\n            return typeof label !== 'undefined' && label && label.match(re);\n          };\n\n          const originalSearchMatch = searchMatch;\n\n          var detailsHandler = function (d) {\n            if (detailsElement) {\n              if (d) {\n                detailsElement.innerHTML = d;\n              } else {\n                if (searchSum) {\n                  setSearchDetails();\n                } else {\n                  detailsElement.innerHTML = '';\n                }\n              }\n            }\n          };\n\n          var originalDetailsHandler = detailsHandler;\n\n          var labelHandler = function (d) {\n            return getName(d) + ' (' + defaultLocale_format('.3f')(100 * (d.x1 - d.x0), 3) + '%, ' + getValue(d) + ' samples)';\n          };\n\n          var svg;\n\n          function setSearchDetails() {\n            detailsElement.innerHTML = searchSum + ' of ' + totalValue + ' samples ( ' + defaultLocale_format('.3f')(100 * (searchSum / totalValue), 3) + '%)';\n          }\n\n          var colorMapper = function (d) {\n            return d.highlight ? '#E600E6' : colorHash(getName(d), getLibtype(d));\n          };\n\n          var originalColorMapper = colorMapper;\n\n          function generateHash(name) {\n            // Return a vector (0.0->1.0) that is a hash of the input string.\n            // The hash is computed to favor early characters over later ones, so\n            // that strings with similar starts have similar vectors. Only the first\n            // 6 characters are considered.\n            const MAX_CHAR = 6;\n            var hash = 0;\n            var maxHash = 0;\n            var weight = 1;\n            var mod = 10;\n\n            if (name) {\n              for (var i = 0; i < name.length; i++) {\n                if (i > MAX_CHAR) {\n                  break;\n                }\n\n                hash += weight * (name.charCodeAt(i) % mod);\n                maxHash += weight * (mod - 1);\n                weight *= 0.70;\n              }\n\n              if (maxHash > 0) {\n                hash = hash / maxHash;\n              }\n            }\n\n            return hash;\n          }\n\n          function colorHash(name, libtype) {\n            // Return a color for the given name and library type. The library type\n            // selects the hue, and the name is hashed to a color in that hue.\n            var r;\n            var g;\n            var b; // default when libtype is not in use\n\n            var hue = colorHue || 'warm';\n\n            if (!colorHue && !(typeof libtype === 'undefined' || libtype === '')) {\n              // Select hue. Order is important.\n              hue = 'red';\n\n              if (typeof name !== 'undefined' && name && name.match(/::/)) {\n                hue = 'yellow';\n              }\n\n              if (libtype === 'kernel') {\n                hue = 'orange';\n              } else if (libtype === 'jit') {\n                hue = 'green';\n              } else if (libtype === 'inlined') {\n                hue = 'aqua';\n              }\n            } // calculate hash\n\n\n            var vector = 0;\n\n            if (name) {\n              var nameArr = name.split('`');\n\n              if (nameArr.length > 1) {\n                name = nameArr[nameArr.length - 1]; // drop module name if present\n              }\n\n              name = name.split('(')[0]; // drop extra info\n\n              vector = generateHash(name);\n            } // calculate color\n\n\n            if (hue === 'red') {\n              r = 200 + Math.round(55 * vector);\n              g = 50 + Math.round(80 * vector);\n              b = g;\n            } else if (hue === 'orange') {\n              r = 190 + Math.round(65 * vector);\n              g = 90 + Math.round(65 * vector);\n              b = 0;\n            } else if (hue === 'yellow') {\n              r = 175 + Math.round(55 * vector);\n              g = r;\n              b = 50 + Math.round(20 * vector);\n            } else if (hue === 'green') {\n              r = 50 + Math.round(60 * vector);\n              g = 200 + Math.round(55 * vector);\n              b = r;\n            } else if (hue === 'aqua') {\n              r = 50 + Math.round(60 * vector);\n              g = 165 + Math.round(55 * vector);\n              b = g;\n            } else if (hue === 'cold') {\n              r = 0 + Math.round(55 * (1 - vector));\n              g = 0 + Math.round(230 * (1 - vector));\n              b = 200 + Math.round(55 * vector);\n            } else {\n              // original warm palette\n              r = 200 + Math.round(55 * vector);\n              g = 0 + Math.round(230 * (1 - vector));\n              b = 0 + Math.round(55 * (1 - vector));\n            }\n\n            return 'rgb(' + r + ',' + g + ',' + b + ')';\n          }\n\n          function show(d) {\n            d.data.fade = false;\n            d.data.hide = false;\n\n            if (d.children) {\n              d.children.forEach(show);\n            }\n          }\n\n          function hideSiblings(node) {\n            let child = node;\n            let parent = child.parent;\n            let children, i, sibling;\n\n            while (parent) {\n              children = parent.children;\n              i = children.length;\n\n              while (i--) {\n                sibling = children[i];\n\n                if (sibling !== child) {\n                  sibling.data.hide = true;\n                }\n              }\n\n              child = parent;\n              parent = child.parent;\n            }\n          }\n\n          function fadeAncestors(d) {\n            if (d.parent) {\n              d.parent.data.fade = true;\n              fadeAncestors(d.parent);\n            }\n          }\n\n          function zoom(d) {\n            if (tooltip) tooltip.hide();\n            hideSiblings(d);\n            show(d);\n            fadeAncestors(d);\n            update();\n\n            if (scrollOnZoom) {\n              const chartOffset = svg._groups[0][0].parentNode.offsetTop;\n              const maxFrames = (window.innerHeight - chartOffset) / c;\n              const frameOffset = (d.height - maxFrames + 10) * c;\n              window.scrollTo({\n                top: chartOffset + frameOffset,\n                left: 0,\n                behavior: 'smooth'\n              });\n            }\n\n            if (typeof clickHandler === 'function') {\n              clickHandler(d);\n            }\n          }\n\n          function searchTree(d, term) {\n            var results = [];\n            var sum = 0;\n\n            function searchInner(d, foundParent) {\n              var found = false;\n\n              if (searchMatch(d, term)) {\n                d.highlight = true;\n                found = true;\n\n                if (!foundParent) {\n                  sum += getValue(d);\n                }\n\n                results.push(d);\n              } else {\n                d.highlight = false;\n              }\n\n              if (getChildren(d)) {\n                getChildren(d).forEach(function (child) {\n                  searchInner(child, foundParent || found);\n                });\n              }\n            }\n\n            searchInner(d, false);\n            searchSum = sum;\n            searchHandler(results, sum, totalValue);\n          }\n\n          function findTree(d, id) {\n            if (d.id === id) {\n              return d;\n            } else {\n              var children = getChildren(d);\n\n              if (children) {\n                for (var i = 0; i < children.length; i++) {\n                  var found = findTree(children[i], id);\n\n                  if (found) {\n                    return found;\n                  }\n                }\n              }\n            }\n          }\n\n          function clear(d) {\n            d.highlight = false;\n\n            if (getChildren(d)) {\n              getChildren(d).forEach(function (child) {\n                clear(child);\n              });\n            }\n          }\n\n          function doSort(a, b) {\n            if (typeof sort === 'function') {\n              return sort(a, b);\n            } else if (sort) {\n              return src_ascending(getName(a), getName(b));\n            }\n          }\n\n          var p = src_partition();\n\n          function filterNodes(root) {\n            var nodeList = root.descendants();\n\n            if (minFrameSize > 0) {\n              var kx = w / (root.x1 - root.x0);\n              nodeList = nodeList.filter(function (el) {\n                return (el.x1 - el.x0) * kx > minFrameSize;\n              });\n            }\n\n            return nodeList;\n          }\n\n          function update() {\n            selection.each(function (root) {\n              var x = linear_linear().range([0, w]);\n              var y = linear_linear().range([0, c]);\n              reappraiseNode(root);\n              totalValue = root.value;\n              if (sort) root.sort(doSort);\n              p(root);\n              var kx = w / (root.x1 - root.x0);\n\n              function width(d) {\n                return (d.x1 - d.x0) * kx;\n              }\n\n              var descendants = filterNodes(root);\n              var g = src_select(this).select('svg').selectAll('g').data(descendants, function (d) {\n                return d.id;\n              }); // if height is not set: set height on first update, after nodes were filtered by minFrameSize\n\n              if (!h || resetHeightOnZoom) {\n                var maxDepth = Math.max.apply(null, descendants.map(function (n) {\n                  return n.depth;\n                }));\n                h = (maxDepth + 3) * c;\n                if (h < minHeight) h = minHeight;\n                src_select(this).select('svg').attr('height', h);\n              }\n\n              g.transition().duration(transitionDuration).ease(transitionEase).attr('transform', function (d) {\n                return 'translate(' + x(d.x0) + ',' + (inverted ? y(d.depth) : h - y(d.depth) - c) + ')';\n              });\n              g.select('rect').transition().duration(transitionDuration).ease(transitionEase).attr('width', width);\n              var node = g.enter().append('svg:g').attr('transform', function (d) {\n                return 'translate(' + x(d.x0) + ',' + (inverted ? y(d.depth) : h - y(d.depth) - c) + ')';\n              });\n              node.append('svg:rect').transition().delay(transitionDuration / 2).attr('width', width);\n\n              if (!tooltip) {\n                node.append('svg:title');\n              }\n\n              node.append('foreignObject').append('xhtml:div'); // Now we have to re-select to see the new elements (why?).\n\n              g = src_select(this).select('svg').selectAll('g').data(descendants, function (d) {\n                return d.id;\n              });\n              g.attr('width', width).attr('height', function (d) {\n                return c;\n              }).attr('name', function (d) {\n                return getName(d);\n              }).attr('class', function (d) {\n                return d.data.fade ? 'frame fade' : 'frame';\n              });\n              g.select('rect').attr('height', function (d) {\n                return c;\n              }).attr('fill', function (d) {\n                return colorMapper(d);\n              });\n\n              if (!tooltip) {\n                g.select('title').text(labelHandler);\n              }\n\n              g.select('foreignObject').attr('width', width).attr('height', function (d) {\n                return c;\n              }).select('div').attr('class', 'd3-flame-graph-label').style('display', function (d) {\n                return width(d) < 35 ? 'none' : 'block';\n              }).transition().delay(transitionDuration).text(getName);\n              g.on('click', zoom);\n              g.exit().remove();\n              g.on('mouseover', function (d) {\n                if (tooltip) tooltip.show(d, this);\n                detailsHandler(labelHandler(d));\n              }).on('mouseout', function () {\n                if (tooltip) tooltip.hide();\n                detailsHandler(null);\n              });\n            });\n          }\n\n          function merge(data, samples) {\n            samples.forEach(function (sample) {\n              var node = data.find(function (element) {\n                return element.name === sample.name;\n              });\n\n              if (node) {\n                if (node.original) {\n                  node.original += sample.value;\n                } else {\n                  node.value += sample.value;\n                }\n\n                if (sample.children) {\n                  if (!node.children) {\n                    node.children = [];\n                  }\n\n                  merge(node.children, sample.children);\n                }\n              } else {\n                data.push(sample);\n              }\n            });\n          }\n\n          function forEachNode(node, f) {\n            f(node);\n            let children = node.children;\n\n            if (children) {\n              const stack = [children];\n              let count, child, grandChildren;\n\n              while (stack.length) {\n                children = stack.pop();\n                count = children.length;\n\n                while (count--) {\n                  child = children[count];\n                  f(child);\n                  grandChildren = child.children;\n\n                  if (grandChildren) {\n                    stack.push(grandChildren);\n                  }\n                }\n              }\n            }\n          }\n\n          function adoptNode(node) {\n            let id = 0;\n            forEachNode(node, function (n) {\n              n.id = id++;\n            });\n          }\n\n          function reappraiseNode(root) {\n            let node, children, grandChildren, childrenValue, i, j, child, childValue;\n            const stack = [];\n            const included = [];\n            const excluded = [];\n            const compoundValue = !selfValue;\n            let item = root.data;\n\n            if (item.hide) {\n              root.value = 0;\n              children = root.children;\n\n              if (children) {\n                excluded.push(children);\n              }\n            } else {\n              root.value = item.fade ? 0 : getValue(item);\n              stack.push(root);\n            } // First DFS pass:\n            // 1. Update node.value with node's self value\n            // 2. Populate excluded list with children under hidden nodes\n            // 3. Populate included list with children under visible nodes\n\n\n            while (node = stack.pop()) {\n              children = node.children;\n\n              if (children && (i = children.length)) {\n                childrenValue = 0;\n\n                while (i--) {\n                  child = children[i];\n                  item = child.data;\n\n                  if (item.hide) {\n                    child.value = 0;\n                    grandChildren = child.children;\n\n                    if (grandChildren) {\n                      excluded.push(grandChildren);\n                    }\n\n                    continue;\n                  }\n\n                  if (item.fade) {\n                    child.value = 0;\n                  } else {\n                    childValue = getValue(item);\n                    child.value = childValue;\n                    childrenValue += childValue;\n                  }\n\n                  stack.push(child);\n                } // Here second part of `&&` is actually checking for `node.data.fade`. However,\n                // checking for node.value is faster and presents more oportunities for JS optimizer.\n\n\n                if (compoundValue && node.value) {\n                  node.value -= childrenValue;\n                }\n\n                included.push(children);\n              }\n            } // Postorder traversal to compute compound value of each visible node.\n\n\n            i = included.length;\n\n            while (i--) {\n              children = included[i];\n              childrenValue = 0;\n              j = children.length;\n\n              while (j--) {\n                childrenValue += children[j].value;\n              }\n\n              children[0].parent.value += childrenValue;\n            } // Continue DFS to set value of all hidden nodes to 0.\n\n\n            while (excluded.length) {\n              children = excluded.pop();\n              j = children.length;\n\n              while (j--) {\n                child = children[j];\n                child.value = 0;\n                grandChildren = child.children;\n\n                if (grandChildren) {\n                  excluded.push(grandChildren);\n                }\n              }\n            }\n          }\n\n          function chart(s) {\n            const root = hierarchy(s.datum(), getChildren);\n            adoptNode(root);\n\n            if (computeDelta) {\n              root.eachAfter(node => {\n                let sum = getDelta(node);\n                const children = node.children;\n                let i = children && children.length;\n\n                while (--i >= 0) sum += children[i].delta;\n\n                node.delta = sum;\n              });\n            }\n\n            selection = s.datum(root);\n            if (!arguments.length) return chart;\n            selection.each(function (data) {\n              if (!svg) {\n                svg = src_select(this).append('svg:svg').attr('width', w).attr('class', 'partition d3-flame-graph');\n\n                if (h) {\n                  if (h < minHeight) h = minHeight;\n                  svg.attr('height', h);\n                }\n\n                svg.append('svg:text').attr('class', 'title').attr('text-anchor', 'middle').attr('y', '25').attr('x', w / 2).attr('fill', '#808080').text(title);\n                if (tooltip) svg.call(tooltip);\n              }\n            }); // first draw\n\n            update();\n          }\n\n          chart.height = function (_) {\n            if (!arguments.length) {\n              return h;\n            }\n\n            h = _;\n            return chart;\n          };\n\n          chart.minHeight = function (_) {\n            if (!arguments.length) {\n              return minHeight;\n            }\n\n            minHeight = _;\n            return chart;\n          };\n\n          chart.width = function (_) {\n            if (!arguments.length) {\n              return w;\n            }\n\n            w = _;\n            return chart;\n          };\n\n          chart.cellHeight = function (_) {\n            if (!arguments.length) {\n              return c;\n            }\n\n            c = _;\n            return chart;\n          };\n\n          chart.tooltip = function (_) {\n            if (!arguments.length) {\n              return tooltip;\n            }\n\n            if (typeof _ === 'function') {\n              tooltip = _;\n            }\n\n            return chart;\n          };\n\n          chart.title = function (_) {\n            if (!arguments.length) {\n              return title;\n            }\n\n            title = _;\n            return chart;\n          };\n\n          chart.transitionDuration = function (_) {\n            if (!arguments.length) {\n              return transitionDuration;\n            }\n\n            transitionDuration = _;\n            return chart;\n          };\n\n          chart.transitionEase = function (_) {\n            if (!arguments.length) {\n              return transitionEase;\n            }\n\n            transitionEase = _;\n            return chart;\n          };\n\n          chart.sort = function (_) {\n            if (!arguments.length) {\n              return sort;\n            }\n\n            sort = _;\n            return chart;\n          };\n\n          chart.inverted = function (_) {\n            if (!arguments.length) {\n              return inverted;\n            }\n\n            inverted = _;\n            return chart;\n          };\n\n          chart.computeDelta = function (_) {\n            if (!arguments.length) {\n              return computeDelta;\n            }\n\n            computeDelta = _;\n            return chart;\n          };\n\n          chart.setLabelHandler = function (_) {\n            if (!arguments.length) {\n              return labelHandler;\n            }\n\n            labelHandler = _;\n            return chart;\n          }; // Kept for backwards compatibility.\n\n\n          chart.label = chart.setLabelHandler;\n\n          chart.search = function (term) {\n            selection.each(function (data) {\n              searchTree(data, term);\n              update();\n            });\n          };\n\n          chart.findById = function (id) {\n            if (typeof id === 'undefined' || id === null) {\n              return null;\n            }\n\n            let found = null;\n            selection.each(function (data) {\n              if (found === null) {\n                found = findTree(data, id);\n              }\n            });\n            return found;\n          };\n\n          chart.clear = function () {\n            searchSum = 0;\n            detailsHandler(null);\n            selection.each(function (data) {\n              clear(data);\n              update();\n            });\n          };\n\n          chart.zoomTo = function (d) {\n            zoom(d);\n          };\n\n          chart.resetZoom = function () {\n            selection.each(function (data) {\n              zoom(data); // zoom to root\n            });\n          };\n\n          chart.onClick = function (_) {\n            if (!arguments.length) {\n              return clickHandler;\n            }\n\n            clickHandler = _;\n            return chart;\n          };\n\n          chart.merge = function (samples) {\n            if (!selection) {\n              return chart;\n            }\n\n            var newRoot; // Need to re-create hierarchy after data changes.\n\n            selection.each(function (root) {\n              merge([root.data], [samples]);\n              newRoot = hierarchy(root.data, getChildren);\n              adoptNode(newRoot);\n            });\n            selection = selection.datum(newRoot);\n            update();\n            return chart;\n          };\n\n          chart.update = function (samples) {\n            if (!selection) {\n              return chart;\n            }\n\n            var newRoot; // Need to re-create hierarchy after data changes.\n\n            selection.each(function (root) {\n              root.data = samples;\n              newRoot = hierarchy(root.data, getChildren);\n              adoptNode(newRoot);\n            });\n            selection = selection.datum(newRoot);\n            update();\n            return chart;\n          };\n\n          chart.destroy = function () {\n            if (!selection) {\n              return chart;\n            }\n\n            if (tooltip) tooltip.hide();\n            selection.selectAll('svg').remove();\n            return chart;\n          };\n\n          chart.setColorMapper = function (_) {\n            if (!arguments.length) {\n              colorMapper = originalColorMapper;\n              return chart;\n            }\n\n            colorMapper = d => {\n              const originalColor = originalColorMapper(d);\n              return _(d, originalColor);\n            };\n\n            return chart;\n          }; // Kept for backwards compatibility.\n\n\n          chart.color = chart.setColorMapper;\n\n          chart.setColorHue = function (_) {\n            if (!arguments.length) {\n              colorHue = null;\n              return chart;\n            }\n\n            colorHue = _;\n            return chart;\n          };\n\n          chart.minFrameSize = function (_) {\n            if (!arguments.length) {\n              return minFrameSize;\n            }\n\n            minFrameSize = _;\n            return chart;\n          };\n\n          chart.setDetailsElement = function (_) {\n            if (!arguments.length) {\n              return detailsElement;\n            }\n\n            detailsElement = _;\n            return chart;\n          }; // Kept for backwards compatibility.\n\n\n          chart.details = chart.setDetailsElement;\n\n          chart.selfValue = function (_) {\n            if (!arguments.length) {\n              return selfValue;\n            }\n\n            selfValue = _;\n            return chart;\n          };\n\n          chart.resetHeightOnZoom = function (_) {\n            if (!arguments.length) {\n              return resetHeightOnZoom;\n            }\n\n            resetHeightOnZoom = _;\n            return chart;\n          };\n\n          chart.scrollOnZoom = function (_) {\n            if (!arguments.length) {\n              return scrollOnZoom;\n            }\n\n            scrollOnZoom = _;\n            return chart;\n          };\n\n          chart.getName = function (_) {\n            if (!arguments.length) {\n              return getName;\n            }\n\n            getName = _;\n            return chart;\n          };\n\n          chart.getValue = function (_) {\n            if (!arguments.length) {\n              return getValue;\n            }\n\n            getValue = _;\n            return chart;\n          };\n\n          chart.getChildren = function (_) {\n            if (!arguments.length) {\n              return getChildren;\n            }\n\n            getChildren = _;\n            return chart;\n          };\n\n          chart.getLibtype = function (_) {\n            if (!arguments.length) {\n              return getLibtype;\n            }\n\n            getLibtype = _;\n            return chart;\n          };\n\n          chart.getDelta = function (_) {\n            if (!arguments.length) {\n              return getDelta;\n            }\n\n            getDelta = _;\n            return chart;\n          };\n\n          chart.setSearchHandler = function (_) {\n            if (!arguments.length) {\n              searchHandler = originalSearchHandler;\n              return chart;\n            }\n\n            searchHandler = _;\n            return chart;\n          };\n\n          chart.setDetailsHandler = function (_) {\n            if (!arguments.length) {\n              detailsHandler = originalDetailsHandler;\n              return chart;\n            }\n\n            detailsHandler = _;\n            return chart;\n          };\n\n          chart.setSearchMatch = function (_) {\n            if (!arguments.length) {\n              searchMatch = originalSearchMatch;\n              return chart;\n            }\n\n            searchMatch = _;\n            return chart;\n          };\n\n          return chart;\n        };\n        /***/\n\n      }\n      /******/\n\n    })[\"default\"]\n  );\n});","map":null,"metadata":{},"sourceType":"script"}