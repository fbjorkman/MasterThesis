{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Renderer2, Optional, ContentChild, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith, filter } from 'rxjs/operators';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconDirective, NzIconModule } from 'ng-zorro-antd/icon';\nimport { CommonModule } from '@angular/common';\nimport { ɵNzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/transition-patch';\nconst _c0 = [\"nz-button\", \"\"];\n\nfunction NzButtonComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 1);\n  }\n}\n\nconst _c1 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'button';\nlet NzButtonComponent = /*#__PURE__*/(() => {\n  class NzButtonComponent {\n    constructor(elementRef, cdr, renderer, nzConfigService, directionality) {\n      this.elementRef = elementRef;\n      this.cdr = cdr;\n      this.renderer = renderer;\n      this.nzConfigService = nzConfigService;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzBlock = false;\n      this.nzGhost = false;\n      this.nzSearch = false;\n      this.nzLoading = false;\n      this.nzDanger = false;\n      this.disabled = false;\n      this.tabIndex = null;\n      this.nzType = null;\n      this.nzShape = null;\n      this.nzSize = 'default';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n      this.loading$ = new Subject(); // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-btn');\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    }\n\n    haltDisabledEvents(event) {\n      var _a;\n\n      if (this.disabled && ((_a = event.target) === null || _a === void 0 ? void 0 : _a.tagName) === 'A') {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }\n\n    insertSpan(nodes, renderer) {\n      nodes.forEach(node => {\n        if (node.nodeName === '#text') {\n          const span = renderer.createElement('span');\n          const parent = renderer.parentNode(node);\n          renderer.insertBefore(parent, span, node);\n          renderer.appendChild(span, node);\n        }\n      });\n    }\n\n    assertIconOnly(element, renderer) {\n      const listOfNode = Array.from(element.childNodes);\n      const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n      const noText = listOfNode.every(node => node.nodeName !== '#text');\n      const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n      const isIconOnly = noSpan && noText && iconCount >= 1;\n\n      if (isIconOnly) {\n        renderer.addClass(element, 'ant-btn-icon-only');\n      }\n    }\n\n    ngOnInit() {\n      var _a;\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzLoading\n      } = changes;\n\n      if (nzLoading) {\n        this.loading$.next(this.nzLoading);\n      }\n    }\n\n    ngAfterViewInit() {\n      this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n      this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n    }\n\n    ngAfterContentInit() {\n      this.loading$.pipe(startWith(this.nzLoading), filter(() => !!this.nzIconDirectiveElement), takeUntil(this.destroy$)).subscribe(loading => {\n        const nativeElement = this.nzIconDirectiveElement.nativeElement;\n\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NzButtonComponent.ɵfac = function NzButtonComponent_Factory(t) {\n    return new (t || NzButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n  };\n\n  NzButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzButtonComponent,\n    selectors: [[\"button\", \"nz-button\", \"\"], [\"a\", \"nz-button\", \"\"]],\n    contentQueries: function NzButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzIconDirective, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzIconDirectiveElement = _t.first);\n      }\n    },\n    hostVars: 30,\n    hostBindings: function NzButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzButtonComponent_click_HostBindingHandler($event) {\n          return ctx.haltDisabledEvents($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex === null ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"ant-btn-primary\", ctx.nzType === \"primary\")(\"ant-btn-dashed\", ctx.nzType === \"dashed\")(\"ant-btn-link\", ctx.nzType === \"link\")(\"ant-btn-text\", ctx.nzType === \"text\")(\"ant-btn-circle\", ctx.nzShape === \"circle\")(\"ant-btn-round\", ctx.nzShape === \"round\")(\"ant-btn-lg\", ctx.nzSize === \"large\")(\"ant-btn-sm\", ctx.nzSize === \"small\")(\"ant-btn-dangerous\", ctx.nzDanger)(\"ant-btn-loading\", ctx.nzLoading)(\"ant-btn-background-ghost\", ctx.nzGhost)(\"ant-btn-block\", ctx.nzBlock)(\"ant-input-search-button\", ctx.nzSearch)(\"ant-btn-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzBlock: \"nzBlock\",\n      nzGhost: \"nzGhost\",\n      nzSearch: \"nzSearch\",\n      nzLoading: \"nzLoading\",\n      nzDanger: \"nzDanger\",\n      disabled: \"disabled\",\n      tabIndex: \"tabIndex\",\n      nzType: \"nzType\",\n      nzShape: \"nzShape\",\n      nzSize: \"nzSize\"\n    },\n    exportAs: [\"nzButton\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 1,\n    consts: [[\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]],\n    template: function NzButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzButtonComponent_i_0_Template, 1, 0, \"i\", 0);\n        ɵngcc0.ɵɵprojection(1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.ɵNzTransitionPatchDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"nzBlock\", void 0);\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"nzGhost\", void 0);\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"nzSearch\", void 0);\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"nzLoading\", void 0);\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"nzDanger\", void 0);\n\n  __decorate([InputBoolean()], NzButtonComponent.prototype, \"disabled\", void 0);\n\n  __decorate([WithConfig()], NzButtonComponent.prototype, \"nzSize\", void 0);\n\n  return NzButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzButtonGroupComponent = /*#__PURE__*/(() => {\n  class NzButtonGroupComponent {\n    constructor(elementRef, directionality) {\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this.nzSize = 'default';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject(); // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-btn-group');\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NzButtonGroupComponent.ɵfac = function NzButtonGroupComponent_Factory(t) {\n    return new (t || NzButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n  };\n\n  NzButtonGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzButtonGroupComponent,\n    selectors: [[\"nz-button-group\"]],\n    hostVars: 6,\n    hostBindings: function NzButtonGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-btn-group-lg\", ctx.nzSize === \"large\")(\"ant-btn-group-sm\", ctx.nzSize === \"small\")(\"ant-btn-group-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzSize: \"nzSize\"\n    },\n    exportAs: [\"nzButtonGroup\"],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NzButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzButtonGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzButtonModule = /*#__PURE__*/(() => {\n  class NzButtonModule {}\n\n  NzButtonModule.ɵfac = function NzButtonModule_Factory(t) {\n    return new (t || NzButtonModule)();\n  };\n\n  NzButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzButtonModule\n  });\n  NzButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule], ɵNzTransitionPatchModule, NzWaveModule]\n  });\n  return NzButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzButtonModule, {\n    declarations: function () {\n      return [NzButtonComponent, NzButtonGroupComponent];\n    },\n    imports: function () {\n      return [BidiModule, CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule];\n    },\n    exports: function () {\n      return [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzButtonComponent, NzButtonGroupComponent, NzButtonModule }; //# sourceMappingURL=ng-zorro-antd-button.js.map","map":null,"metadata":{},"sourceType":"module"}