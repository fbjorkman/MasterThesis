{"ast":null,"code":"import { __decorate, __rest } from 'tslib';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayConfig, Overlay, OverlayKeyboardDispatcher, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, TemplateRef, EventEmitter, Type, Injector, Component, ChangeDetectionStrategy, ChangeDetectorRef, Optional, Inject, Renderer2, ViewContainerRef, Input, Output, ViewChild, ContentChild, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { toCssPixel, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/cdk/portal';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc9 from 'ng-zorro-antd/icon';\nconst _c0 = [\"drawerTemplate\"];\n\nfunction NzDrawerComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_1_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.maskClick();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r2.nzMaskStyle);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"div\", 16);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r13.nzTitle, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r11.nzTitle);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_button_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const closeIcon_r15 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", closeIcon_r15);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_5_button_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r16.closeClick();\n    });\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_button_2_ng_container_1_Template, 2, 1, \"ng-container\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r12.nzCloseIcon);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_1_Template, 2, 1, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(2, NzDrawerComponent_ng_template_0_div_5_button_2_Template, 2, 1, \"button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-drawer-header\", !!ctx_r3.nzTitle)(\"ant-drawer-header-no-title\", !ctx_r3.nzTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.nzTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.nzClosable);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_template_7_Template(rf, ctx) {}\n\nfunction NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.nzContent)(\"ngTemplateOutletContext\", ctx_r18.templateContext);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template, 2, 2, \"ng-container\", 19);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.isTemplateRef(ctx_r5.nzContent));\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nfunction NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 21);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.contentFromContentChild);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_Template, 2, 1, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.contentFromContentChild && (ctx_r7.isOpen || ctx_r7.inAnimation));\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"div\", 16);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r22.nzFooter, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_11_ng_container_1_Template, 2, 1, \"ng-container\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r8.nzFooter);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_1_Template, 1, 1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(5, NzDrawerComponent_ng_template_0_div_5_Template, 3, 6, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(7, NzDrawerComponent_ng_template_0_ng_template_7_Template, 0, 0, \"ng-template\", 7);\n    ɵngcc0.ɵɵtemplate(8, NzDrawerComponent_ng_template_0_ng_container_8_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵtemplate(9, NzDrawerComponent_ng_template_0_ng_template_9_Template, 1, 1, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(11, NzDrawerComponent_ng_template_0_div_11_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(10);\n\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"transform\", ctx_r1.offsetTransform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null)(\"z-index\", ctx_r1.nzZIndex);\n    ɵngcc0.ɵɵclassProp(\"ant-drawer-rtl\", ctx_r1.dir === \"rtl\")(\"ant-drawer-open\", ctx_r1.isOpen)(\"no-mask\", !ctx_r1.nzMask)(\"ant-drawer-top\", ctx_r1.nzPlacement === \"top\")(\"ant-drawer-bottom\", ctx_r1.nzPlacement === \"bottom\")(\"ant-drawer-right\", ctx_r1.nzPlacement === \"right\")(\"ant-drawer-left\", ctx_r1.nzPlacement === \"left\");\n    ɵngcc0.ɵɵproperty(\"nzNoAnimation\", ctx_r1.nzNoAnimation);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzMask);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ant-drawer-content-wrapper \", ctx_r1.nzWrapClassName, \"\");\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1.width)(\"height\", ctx_r1.height)(\"transform\", ctx_r1.transform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r1.isLeftOrRight ? \"100%\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzTitle || ctx_r1.nzClosable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.nzBodyStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzContent)(\"ngIfElse\", _r6);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzFooter);\n  }\n}\n\nlet NzDrawerContentDirective = /*#__PURE__*/(() => {\n  class NzDrawerContentDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  }\n\n  NzDrawerContentDirective.ɵfac = function NzDrawerContentDirective_Factory(t) {\n    return new (t || NzDrawerContentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  NzDrawerContentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NzDrawerContentDirective,\n    selectors: [[\"\", \"nzDrawerContent\", \"\"]],\n    exportAs: [\"nzDrawerContent\"]\n  });\n  return NzDrawerContentDirective;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDrawerRef {}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst DRAWER_ANIMATE_DURATION = 300;\nconst NZ_CONFIG_MODULE_NAME = 'drawer';\nlet NzDrawerComponent = /*#__PURE__*/(() => {\n  class NzDrawerComponent extends NzDrawerRef {\n    constructor(cdr, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    document, nzConfigService, renderer, overlay, injector, changeDetectorRef, focusTrapFactory, viewContainerRef, overlayKeyboardDispatcher, directionality) {\n      super();\n      this.cdr = cdr;\n      this.document = document;\n      this.nzConfigService = nzConfigService;\n      this.renderer = renderer;\n      this.overlay = overlay;\n      this.injector = injector;\n      this.changeDetectorRef = changeDetectorRef;\n      this.focusTrapFactory = focusTrapFactory;\n      this.viewContainerRef = viewContainerRef;\n      this.overlayKeyboardDispatcher = overlayKeyboardDispatcher;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzCloseIcon = 'close';\n      this.nzClosable = true;\n      this.nzMaskClosable = true;\n      this.nzMask = true;\n      this.nzCloseOnNavigation = true;\n      this.nzNoAnimation = false;\n      this.nzKeyboard = true;\n      this.nzPlacement = 'right';\n      this.nzMaskStyle = {};\n      this.nzBodyStyle = {};\n      this.nzWidth = 256;\n      this.nzHeight = 256;\n      this.nzZIndex = 1000;\n      this.nzOffsetX = 0;\n      this.nzOffsetY = 0;\n      this.componentInstance = null;\n      this.nzOnViewInit = new EventEmitter();\n      this.nzOnClose = new EventEmitter();\n      this.nzVisibleChange = new EventEmitter();\n      this.destroy$ = new Subject();\n      this.placementChanging = false;\n      this.placementChangeTimeoutId = -1;\n      this.isOpen = false;\n      this.inAnimation = false;\n      this.templateContext = {\n        $implicit: undefined,\n        drawerRef: this\n      };\n      this.nzAfterOpen = new Subject();\n      this.nzAfterClose = new Subject(); // from service config\n\n      this.nzDirection = undefined;\n      this.dir = 'ltr';\n    }\n\n    set nzVisible(value) {\n      this.isOpen = value;\n    }\n\n    get nzVisible() {\n      return this.isOpen;\n    }\n\n    get offsetTransform() {\n      if (!this.isOpen || this.nzOffsetX + this.nzOffsetY === 0) {\n        return null;\n      }\n\n      switch (this.nzPlacement) {\n        case 'left':\n          return `translateX(${this.nzOffsetX}px)`;\n\n        case 'right':\n          return `translateX(-${this.nzOffsetX}px)`;\n\n        case 'top':\n          return `translateY(${this.nzOffsetY}px)`;\n\n        case 'bottom':\n          return `translateY(-${this.nzOffsetY}px)`;\n      }\n    }\n\n    get transform() {\n      if (this.isOpen) {\n        return null;\n      }\n\n      switch (this.nzPlacement) {\n        case 'left':\n          return `translateX(-100%)`;\n\n        case 'right':\n          return `translateX(100%)`;\n\n        case 'top':\n          return `translateY(-100%)`;\n\n        case 'bottom':\n          return `translateY(100%)`;\n      }\n    }\n\n    get width() {\n      return this.isLeftOrRight ? toCssPixel(this.nzWidth) : null;\n    }\n\n    get height() {\n      return !this.isLeftOrRight ? toCssPixel(this.nzHeight) : null;\n    }\n\n    get isLeftOrRight() {\n      return this.nzPlacement === 'left' || this.nzPlacement === 'right';\n    }\n\n    get afterOpen() {\n      return this.nzAfterOpen.asObservable();\n    }\n\n    get afterClose() {\n      return this.nzAfterClose.asObservable();\n    }\n\n    isTemplateRef(value) {\n      return value instanceof TemplateRef;\n    }\n\n    ngOnInit() {\n      var _a;\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.nzDirection || this.directionality.value;\n      this.attachOverlay();\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.templateContext = {\n        $implicit: this.nzContentParams,\n        drawerRef: this\n      };\n      this.changeDetectorRef.detectChanges();\n    }\n\n    ngAfterViewInit() {\n      this.attachBodyContent(); // The `setTimeout` triggers change detection. There's no sense to schedule the DOM timer if anyone is\n      // listening to the `nzOnViewInit` event inside the template, for instance `<nz-drawer (nzOnViewInit)=\"...\">`.\n\n      if (this.nzOnViewInit.observers.length) {\n        setTimeout(() => {\n          this.nzOnViewInit.emit();\n        });\n      }\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzPlacement,\n        nzVisible\n      } = changes;\n\n      if (nzVisible) {\n        const value = changes.nzVisible.currentValue;\n\n        if (value) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      if (nzPlacement && !nzPlacement.isFirstChange()) {\n        this.triggerPlacementChangeCycleOnce();\n      }\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      clearTimeout(this.placementChangeTimeoutId);\n      this.disposeOverlay();\n    }\n\n    getAnimationDuration() {\n      return this.nzNoAnimation ? 0 : DRAWER_ANIMATE_DURATION;\n    } // Disable the transition animation temporarily when the placement changing\n\n\n    triggerPlacementChangeCycleOnce() {\n      if (!this.nzNoAnimation) {\n        this.placementChanging = true;\n        this.changeDetectorRef.markForCheck();\n        clearTimeout(this.placementChangeTimeoutId);\n        this.placementChangeTimeoutId = setTimeout(() => {\n          this.placementChanging = false;\n          this.changeDetectorRef.markForCheck();\n        }, this.getAnimationDuration());\n      }\n    }\n\n    close(result) {\n      this.isOpen = false;\n      this.inAnimation = true;\n      this.nzVisibleChange.emit(false);\n      this.updateOverlayStyle();\n      this.overlayKeyboardDispatcher.remove(this.overlayRef);\n      this.changeDetectorRef.detectChanges();\n      setTimeout(() => {\n        this.updateBodyOverflow();\n        this.restoreFocus();\n        this.inAnimation = false;\n        this.nzAfterClose.next(result);\n        this.nzAfterClose.complete();\n        this.componentInstance = null;\n      }, this.getAnimationDuration());\n    }\n\n    open() {\n      this.attachOverlay();\n      this.isOpen = true;\n      this.inAnimation = true;\n      this.nzVisibleChange.emit(true);\n      this.overlayKeyboardDispatcher.add(this.overlayRef);\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      this.changeDetectorRef.detectChanges();\n      setTimeout(() => {\n        this.inAnimation = false;\n        this.changeDetectorRef.detectChanges();\n        this.nzAfterOpen.next();\n      }, this.getAnimationDuration());\n    }\n\n    getContentComponent() {\n      return this.componentInstance;\n    }\n\n    closeClick() {\n      this.nzOnClose.emit();\n    }\n\n    maskClick() {\n      if (this.nzMaskClosable && this.nzMask) {\n        this.nzOnClose.emit();\n      }\n    }\n\n    attachBodyContent() {\n      this.bodyPortalOutlet.dispose();\n\n      if (this.nzContent instanceof Type) {\n        const childInjector = Injector.create({\n          parent: this.injector,\n          providers: [{\n            provide: NzDrawerRef,\n            useValue: this\n          }]\n        });\n        const componentPortal = new ComponentPortal(this.nzContent, null, childInjector);\n        const componentRef = this.bodyPortalOutlet.attachComponentPortal(componentPortal);\n        this.componentInstance = componentRef.instance;\n        Object.assign(componentRef.instance, this.nzContentParams);\n        componentRef.changeDetectorRef.detectChanges();\n      }\n    }\n\n    attachOverlay() {\n      if (!this.overlayRef) {\n        this.portal = new TemplatePortal(this.drawerTemplate, this.viewContainerRef);\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\n      }\n\n      if (this.overlayRef && !this.overlayRef.hasAttached()) {\n        this.overlayRef.attach(this.portal);\n        this.overlayRef.keydownEvents().pipe(takeUntil(this.destroy$)).subscribe(event => {\n          if (event.keyCode === ESCAPE && this.isOpen && this.nzKeyboard) {\n            this.nzOnClose.emit();\n          }\n        });\n        this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(() => {\n          this.disposeOverlay();\n        });\n      }\n    }\n\n    disposeOverlay() {\n      var _a;\n\n      (_a = this.overlayRef) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.overlayRef = null;\n    }\n\n    getOverlayConfig() {\n      return new OverlayConfig({\n        disposeOnNavigation: this.nzCloseOnNavigation,\n        positionStrategy: this.overlay.position().global(),\n        scrollStrategy: this.overlay.scrollStrategies.block()\n      });\n    }\n\n    updateOverlayStyle() {\n      if (this.overlayRef && this.overlayRef.overlayElement) {\n        this.renderer.setStyle(this.overlayRef.overlayElement, 'pointer-events', this.isOpen ? 'auto' : 'none');\n      }\n    }\n\n    updateBodyOverflow() {\n      if (this.overlayRef) {\n        if (this.isOpen) {\n          this.overlayRef.getConfig().scrollStrategy.enable();\n        } else {\n          this.overlayRef.getConfig().scrollStrategy.disable();\n        }\n      }\n    }\n\n    savePreviouslyFocusedElement() {\n      if (this.document && !this.previouslyFocusedElement) {\n        this.previouslyFocusedElement = this.document.activeElement; // We need the extra check, because IE's svg element has no blur method.\n\n        if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.blur === 'function') {\n          this.previouslyFocusedElement.blur();\n        }\n      }\n    }\n\n    trapFocus() {\n      if (!this.focusTrap && this.overlayRef && this.overlayRef.overlayElement) {\n        this.focusTrap = this.focusTrapFactory.create(this.overlayRef.overlayElement);\n        this.focusTrap.focusInitialElement();\n      }\n    }\n\n    restoreFocus() {\n      // We need the extra check, because IE can set the `activeElement` to null in some cases.\n      if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n        this.previouslyFocusedElement.focus();\n      }\n\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n      }\n    }\n\n  }\n\n  NzDrawerComponent.ɵfac = function NzDrawerComponent_Factory(t) {\n    return new (t || NzDrawerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OverlayKeyboardDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8));\n  };\n\n  NzDrawerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzDrawerComponent,\n    selectors: [[\"nz-drawer\"]],\n    contentQueries: function NzDrawerComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzDrawerContentDirective, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentFromContentChild = _t.first);\n      }\n    },\n    viewQuery: function NzDrawerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.drawerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyPortalOutlet = _t.first);\n      }\n    },\n    inputs: {\n      nzCloseIcon: \"nzCloseIcon\",\n      nzClosable: \"nzClosable\",\n      nzMaskClosable: \"nzMaskClosable\",\n      nzMask: \"nzMask\",\n      nzCloseOnNavigation: \"nzCloseOnNavigation\",\n      nzNoAnimation: \"nzNoAnimation\",\n      nzKeyboard: \"nzKeyboard\",\n      nzPlacement: \"nzPlacement\",\n      nzMaskStyle: \"nzMaskStyle\",\n      nzBodyStyle: \"nzBodyStyle\",\n      nzWidth: \"nzWidth\",\n      nzHeight: \"nzHeight\",\n      nzZIndex: \"nzZIndex\",\n      nzOffsetX: \"nzOffsetX\",\n      nzOffsetY: \"nzOffsetY\",\n      nzVisible: \"nzVisible\",\n      nzContent: \"nzContent\",\n      nzTitle: \"nzTitle\",\n      nzFooter: \"nzFooter\",\n      nzWrapClassName: \"nzWrapClassName\"\n    },\n    outputs: {\n      nzOnViewInit: \"nzOnViewInit\",\n      nzOnClose: \"nzOnClose\",\n      nzVisibleChange: \"nzVisibleChange\"\n    },\n    exportAs: [\"nzDrawer\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"drawerTemplate\", \"\"], [1, \"ant-drawer\", 3, \"nzNoAnimation\"], [\"class\", \"ant-drawer-mask\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"ant-drawer-content\"], [1, \"ant-drawer-wrapper-body\"], [3, \"ant-drawer-header\", \"ant-drawer-header-no-title\", 4, \"ngIf\"], [1, \"ant-drawer-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"contentElseTemp\", \"\"], [\"class\", \"ant-drawer-footer\", 4, \"ngIf\"], [1, \"ant-drawer-mask\", 3, \"ngStyle\", \"click\"], [\"class\", \"ant-drawer-title\", 4, \"ngIf\"], [\"aria-label\", \"Close\", \"class\", \"ant-drawer-close\", \"style\", \"--scroll-bar: 0px;\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-drawer-title\"], [4, \"nzStringTemplateOutlet\"], [3, \"innerHTML\"], [\"aria-label\", \"Close\", 1, \"ant-drawer-close\", 2, \"--scroll-bar\", \"0px\", 3, \"click\"], [\"nz-icon\", \"\", 3, \"nzType\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngTemplateOutlet\"], [1, \"ant-drawer-footer\"]],\n    template: function NzDrawerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzDrawerComponent_ng_template_0_Template, 12, 40, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [ɵngcc5.NzNoAnimationDirective, ɵngcc6.NgIf, ɵngcc6.NgStyle, ɵngcc7.CdkPortalOutlet, ɵngcc8.NzStringTemplateOutletDirective, ɵngcc9.NzIconDirective, ɵngcc6.NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzClosable\", void 0);\n\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzMaskClosable\", void 0);\n\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzMask\", void 0);\n\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzCloseOnNavigation\", void 0);\n\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzNoAnimation\", void 0);\n\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzKeyboard\", void 0);\n\n  __decorate([WithConfig()], NzDrawerComponent.prototype, \"nzDirection\", void 0);\n\n  return NzDrawerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzDrawerServiceModule = /*#__PURE__*/(() => {\n  class NzDrawerServiceModule {}\n\n  NzDrawerServiceModule.ɵfac = function NzDrawerServiceModule_Factory(t) {\n    return new (t || NzDrawerServiceModule)();\n  };\n\n  NzDrawerServiceModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzDrawerServiceModule\n  });\n  NzDrawerServiceModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NzDrawerServiceModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzDrawerModule = /*#__PURE__*/(() => {\n  class NzDrawerModule {}\n\n  NzDrawerModule.ɵfac = function NzDrawerModule_Factory(t) {\n    return new (t || NzDrawerModule)();\n  };\n\n  NzDrawerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzDrawerModule\n  });\n  NzDrawerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule]]\n  });\n  return NzDrawerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzDrawerModule, {\n    declarations: function () {\n      return [NzDrawerComponent, NzDrawerContentDirective];\n    },\n    imports: function () {\n      return [BidiModule, CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule];\n    },\n    exports: function () {\n      return [NzDrawerComponent, NzDrawerContentDirective];\n    }\n  });\n})();\n\nclass DrawerBuilderForService {\n  constructor(overlay, options) {\n    this.overlay = overlay;\n    this.options = options;\n    this.unsubscribe$ = new Subject();\n    /** pick {@link NzDrawerOptions.nzOnCancel} and omit this option */\n\n    const _a = this.options,\n          {\n      nzOnCancel\n    } = _a,\n          componentOption = __rest(_a, [\"nzOnCancel\"]);\n\n    this.overlayRef = this.overlay.create();\n    this.drawerRef = this.overlayRef.attach(new ComponentPortal(NzDrawerComponent)).instance;\n    this.updateOptions(componentOption); // Prevent repeatedly open drawer when tap focus element.\n\n    this.drawerRef.savePreviouslyFocusedElement();\n    this.drawerRef.nzOnViewInit.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.drawerRef.open();\n    });\n    this.drawerRef.nzOnClose.subscribe(() => {\n      if (nzOnCancel) {\n        nzOnCancel().then(canClose => {\n          if (canClose !== false) {\n            this.drawerRef.close();\n          }\n        });\n      } else {\n        this.drawerRef.close();\n      }\n    });\n    this.drawerRef.afterClose.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.overlayRef.dispose();\n      this.drawerRef = null;\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n  }\n\n  getInstance() {\n    return this.drawerRef;\n  }\n\n  updateOptions(options) {\n    Object.assign(this.drawerRef, options);\n  }\n\n}\n\nlet NzDrawerService = /*#__PURE__*/(() => {\n  class NzDrawerService {\n    constructor(overlay) {\n      this.overlay = overlay;\n    }\n\n    create(options) {\n      return new DrawerBuilderForService(this.overlay, options).getInstance();\n    }\n\n  }\n\n  NzDrawerService.ɵfac = function NzDrawerService_Factory(t) {\n    return new (t || NzDrawerService)(ɵngcc0.ɵɵinject(ɵngcc2.Overlay));\n  };\n\n  NzDrawerService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NzDrawerService_Factory() {\n      return new NzDrawerService(i0.ɵɵinject(i1.Overlay));\n    },\n    token: NzDrawerService,\n    providedIn: NzDrawerServiceModule\n  });\n  return NzDrawerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DRAWER_ANIMATE_DURATION, DrawerBuilderForService, NzDrawerComponent, NzDrawerContentDirective, NzDrawerModule, NzDrawerRef, NzDrawerService, NzDrawerServiceModule }; //# sourceMappingURL=ng-zorro-antd-drawer.js.map","map":null,"metadata":{},"sourceType":"module"}