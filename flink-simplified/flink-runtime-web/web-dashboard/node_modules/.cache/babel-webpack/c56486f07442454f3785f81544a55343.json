{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, flatMap, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ng-zorro-antd/tabs\";\nimport * as i3 from \"@angular/common\";\n\nfunction NavigationComponent_nz_tab_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-tab\", 2);\n    i0.ɵɵlistener(\"nzClick\", function NavigationComponent_nz_tab_1_Template_nz_tab_nzClick_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const nav_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.navigateTo(nav_r1.path);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const nav_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzTitle\", nav_r1.title);\n  }\n}\n\nexport let NavigationComponent = /*#__PURE__*/(() => {\n  class NavigationComponent {\n    constructor(activatedRoute, router, cdr) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.cdr = cdr;\n      this.listOfNavigation = [];\n      this.size = 'default';\n      this.navIndex = 0;\n      this.destroy$ = new Subject();\n    }\n\n    navigateTo(path) {\n      this.router.navigate([path], {\n        relativeTo: this.activatedRoute\n      }).then();\n    }\n\n    ngOnInit() {\n      this.router.events.pipe(filter(e => e instanceof NavigationEnd), startWith(true), filter(() => !!(this.activatedRoute && this.activatedRoute.firstChild)), flatMap(() => this.activatedRoute.firstChild.data), takeUntil(this.destroy$), map(data => data.path)).subscribe(data => {\n        this.navIndex = this.listOfNavigation.map(nav => nav.path).indexOf(data);\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NavigationComponent.ɵfac = function NavigationComponent_Factory(t) {\n    return new (t || NavigationComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  NavigationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavigationComponent,\n    selectors: [[\"flink-navigation\"]],\n    inputs: {\n      listOfNavigation: \"listOfNavigation\",\n      size: \"size\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"nzSelectedIndex\", \"nzSize\"], [3, \"nzTitle\", \"nzClick\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzTitle\", \"nzClick\"]],\n    template: function NavigationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-tabset\", 0);\n        i0.ɵɵtemplate(1, NavigationComponent_nz_tab_1_Template, 1, 1, \"nz-tab\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"nzSelectedIndex\", ctx.navIndex)(\"nzSize\", ctx.size);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfNavigation);\n      }\n    },\n    directives: [i2.NzTabSetComponent, i3.NgForOf, i2.NzTabComponent],\n    styles: [\"[_nghost-%COMP%]     .ant-tabs-nav{margin-bottom:0}\"],\n    changeDetection: 0\n  });\n  return NavigationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}