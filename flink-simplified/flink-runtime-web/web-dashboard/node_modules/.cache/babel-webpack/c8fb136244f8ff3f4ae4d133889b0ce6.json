{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { flatMap, takeUntil } from 'rxjs/operators';\nimport { deepFind } from 'utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"ng-zorro-antd/table\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"share/customize/task-badge/task-badge.component\";\nimport * as i5 from \"share/customize/job-badge/job-badge.component\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"ng-zorro-antd/icon\";\nimport * as i8 from \"../../../../share/pipes/humanize-date.pipe\";\nimport * as i9 from \"../../../../share/pipes/humanize-duration.pipe\";\nimport * as i10 from \"share/pipes/humanize-bytes.pipe\";\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"-\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/task-manager\", a1, \"logs\"];\n};\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 19);\n    i0.ɵɵtext(1, \"LOG\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, taskManager_r4[\"taskmanager-id\"]));\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, taskManager_r4.metrics[\"read-bytes\"]), \" \");\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, taskManager_r4.metrics[\"read-records\"]), \" \");\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, taskManager_r4.metrics[\"write-bytes\"]), \" \");\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, taskManager_r4.metrics[\"write-records\"]), \" \");\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtemplate(4, JobOverviewDrawerTaskmanagersComponent_tr_27_span_4_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(5, JobOverviewDrawerTaskmanagersComponent_tr_27_ng_template_5_Template, 2, 3, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, JobOverviewDrawerTaskmanagersComponent_tr_27_span_8_Template, 3, 3, \"span\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtemplate(10, JobOverviewDrawerTaskmanagersComponent_tr_27_span_10_Template, 3, 3, \"span\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtemplate(12, JobOverviewDrawerTaskmanagersComponent_tr_27_span_12_Template, 3, 3, \"span\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtemplate(14, JobOverviewDrawerTaskmanagersComponent_tr_27_span_14_Template, 3, 3, \"span\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"humanizeDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"humanizeDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"humanizeDuration\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵelement(25, \"flink-task-badge\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"td\", 17);\n    i0.ɵɵelement(27, \"flink-job-badge\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const taskManager_r4 = ctx.$implicit;\n\n    const _r6 = i0.ɵɵreference(6);\n\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(29);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(taskManager_r4.host);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !taskManager_r4[\"taskmanager-id\"] || taskManager_r4[\"taskmanager-id\"] === \"(unassigned)\")(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", taskManager_r4.metrics[\"read-bytes-complete\"])(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", taskManager_r4.metrics[\"read-records-complete\"])(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", taskManager_r4.metrics[\"write-bytes-complete\"])(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", taskManager_r4.metrics[\"write-records-complete\"])(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 16, taskManager_r4[\"start-time\"], \"yyyy-MM-dd HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(20, 19, taskManager_r4[\"end-time\"], \"yyyy-MM-dd HH:mm:ss\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 22, taskManager_r4[\"duration\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"tasks\", taskManager_r4[\"status-counts\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"state\", taskManager_r4.status);\n  }\n}\n\nfunction JobOverviewDrawerTaskmanagersComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 20);\n  }\n}\n\nconst _c1 = function () {\n  return {\n    x: \"1500px\",\n    y: \"calc( 100% - 35px )\"\n  };\n};\n\nexport let JobOverviewDrawerTaskmanagersComponent = /*#__PURE__*/(() => {\n  class JobOverviewDrawerTaskmanagersComponent {\n    constructor(jobService, cdr) {\n      this.jobService = jobService;\n      this.cdr = cdr;\n      this.listOfTaskManager = [];\n      this.destroy$ = new Subject();\n      this.isLoading = true;\n      this.sortReadBytesFn = this.sortFn('metrics.read-bytes');\n      this.sortReadRecordsFn = this.sortFn('metrics.read-records');\n      this.sortWriteBytesFn = this.sortFn('metrics.write-bytes');\n      this.sortWriteRecordsFn = this.sortFn('metrics.write-records');\n      this.sortAttemptFn = this.sortFn('attempt');\n      this.sortHostFn = this.sortFn('host');\n      this.sortStartTimeFn = this.sortFn('detail.start-time');\n      this.sortDurationFn = this.sortFn('detail.duration');\n      this.sortEndTimeFn = this.sortFn('detail.end-time');\n      this.sortStatusFn = this.sortFn('status');\n    }\n\n    sortFn(path) {\n      return (pre, next) => deepFind(pre, path) > deepFind(next, path) ? 1 : -1;\n    }\n\n    trackTaskManagerBy(_, node) {\n      return node.host;\n    }\n\n    ngOnInit() {\n      this.jobService.jobWithVertex$.pipe(takeUntil(this.destroy$), flatMap(data => this.jobService.loadTaskManagers(data.job.jid, data.vertex.id))).subscribe(data => {\n        this.listOfTaskManager = data.taskmanagers;\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }, () => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobOverviewDrawerTaskmanagersComponent.ɵfac = function JobOverviewDrawerTaskmanagersComponent_Factory(t) {\n    return new (t || JobOverviewDrawerTaskmanagersComponent)(i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  JobOverviewDrawerTaskmanagersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobOverviewDrawerTaskmanagersComponent,\n    selectors: [[\"flink-job-overview-drawer-taskmanagers\"]],\n    decls: 30,\n    vars: 18,\n    consts: [[1, \"small\", \"full-height\", 3, \"nzSize\", \"nzLoading\", \"nzData\", \"nzScroll\", \"nzFrontPagination\", \"nzShowPagination\"], [\"table\", \"\"], [\"nzWidth\", \"160px\", \"nzLeft\", \"0px\", 3, \"nzSortFn\"], [\"nzWidth\", \"50px\", \"nzLeft\", \"160px\"], [\"nzWidth\", \"150px\", 3, \"nzSortFn\"], [\"nzWidth\", \"120px\", 3, \"nzSortFn\"], [\"nzWidth\", \"200px\", 3, \"nzSortFn\"], [\"nzWidth\", \"100px\", 3, \"nzSortFn\"], [\"nzWidth\", \"120px\"], [\"nzWidth\", \"100px\", \"nzRight\", \"0px\", 3, \"nzSortFn\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"loadingTemplate\", \"\"], [\"nzLeft\", \"0px\"], [\"nzLeft\", \"160px\"], [4, \"ngIf\", \"ngIfElse\"], [\"hrefTpl\", \"\"], [3, \"tasks\"], [\"nzRight\", \"0px\"], [3, \"state\"], [\"target\", \"_blank\", 3, \"routerLink\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]],\n    template: function JobOverviewDrawerTaskmanagersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-table\", 0, 1);\n        i0.ɵɵelementStart(2, \"thead\");\n        i0.ɵɵelementStart(3, \"tr\");\n        i0.ɵɵelementStart(4, \"th\", 2);\n        i0.ɵɵtext(5, \"Host\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\", 3);\n        i0.ɵɵtext(7, \"LOG\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 4);\n        i0.ɵɵtext(9, \"Bytes received\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 4);\n        i0.ɵɵtext(11, \"Records received\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 5);\n        i0.ɵɵtext(13, \"Bytes sent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\", 4);\n        i0.ɵɵtext(15, \"Records sent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\", 6);\n        i0.ɵɵtext(17, \"Start Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\", 6);\n        i0.ɵɵtext(19, \"End Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\", 7);\n        i0.ɵɵtext(21, \"Duration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\", 8);\n        i0.ɵɵtext(23, \"Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\", 9);\n        i0.ɵɵtext(25, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"tbody\");\n        i0.ɵɵtemplate(27, JobOverviewDrawerTaskmanagersComponent_tr_27_Template, 28, 24, \"tr\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, JobOverviewDrawerTaskmanagersComponent_ng_template_28_Template, 1, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵproperty(\"nzSize\", \"small\")(\"nzLoading\", ctx.isLoading)(\"nzData\", ctx.listOfTaskManager)(\"nzScroll\", i0.ɵɵpureFunction0(17, _c1))(\"nzFrontPagination\", false)(\"nzShowPagination\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortHostFn);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortReadBytesFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortReadRecordsFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortWriteBytesFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortWriteRecordsFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortStartTimeFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortEndTimeFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortDurationFn);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"nzSortFn\", ctx.sortStatusFn);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", _r0.data)(\"ngForTrackBy\", ctx.trackTaskManagerBy);\n      }\n    },\n    directives: [i2.NzTableComponent, i2.NzTheadComponent, i2.NzTrDirective, i2.NzTableCellDirective, i2.NzThMeasureDirective, i2.NzCellFixedDirective, i2.NzThAddOnComponent, i2.NzTbodyComponent, i3.NgForOf, i3.NgIf, i4.TaskBadgeComponent, i5.JobBadgeComponent, i6.RouterLinkWithHref, i7.NzIconDirective],\n    pipes: [i8.HumanizeDatePipe, i9.HumanizeDurationPipe, i10.HumanizeBytesPipe, i3.DecimalPipe],\n    styles: [\"\"]\n  });\n  return JobOverviewDrawerTaskmanagersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}