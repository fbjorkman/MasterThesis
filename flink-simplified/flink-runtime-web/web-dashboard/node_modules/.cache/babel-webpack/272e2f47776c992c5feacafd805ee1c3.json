{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/card\";\nimport * as i4 from \"ng-zorro-antd/grid\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"ng-zorro-antd/icon\";\nimport * as i7 from \"ng-zorro-antd/tooltip\";\nimport * as i8 from \"ng-zorro-antd/progress\";\nimport * as i9 from \"share/pipes/humanize-bytes.pipe\";\nimport * as i10 from \"../../../share/pipes/parse-int.pipe\";\n\nfunction JobManagerMetricsComponent_nz_table_1_ng_container_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"humanizeBytes\");\n    i0.ɵɵpipe(3, \"parseInt\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, i0.ɵɵpipeBind1(3, 3, ctx_r2.config[\"jobmanager.memory.jvm-overhead.min\"])), \" \");\n  }\n}\n\nfunction JobManagerMetricsComponent_nz_table_1_ng_template_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" Min: \", ctx_r4.config[\"jobmanager.memory.jvm-overhead.min\"] || \"-\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Max: \", ctx_r4.config[\"jobmanager.memory.jvm-overhead.max\"] || \"-\", \" \");\n  }\n}\n\nconst _c0 = function () {\n  return [\"220px\", \"160px\", \"200px\", null];\n};\n\nfunction JobManagerMetricsComponent_nz_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-table\", 10);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\", 11);\n    i0.ɵɵtext(4, \"Flink Memory Model\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 12);\n    i0.ɵɵtext(6, \" Effective Configuration \");\n    i0.ɵɵelement(7, \"i\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 12);\n    i0.ɵɵtext(9, \"Metric\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵelementStart(12, \"td\", 14);\n    i0.ɵɵelement(13, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 12);\n    i0.ɵɵtext(15, \"JVM Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"humanizeBytes\");\n    i0.ɵɵpipe(19, \"parseInt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵelement(21, \"nz-progress\", 16);\n    i0.ɵɵpipe(22, \"number\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"humanizeBytes\");\n    i0.ɵɵpipe(25, \"humanizeBytes\");\n    i0.ɵɵelement(26, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"tr\");\n    i0.ɵɵelementStart(28, \"td\", 12);\n    i0.ɵɵtext(29, \"Off-Heap Memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"td\");\n    i0.ɵɵtext(31);\n    i0.ɵɵpipe(32, \"humanizeBytes\");\n    i0.ɵɵpipe(33, \"parseInt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"td\");\n    i0.ɵɵelement(35, \"i\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"tr\");\n    i0.ɵɵelementStart(37, \"td\", 12);\n    i0.ɵɵtext(38, \"JVM Metaspace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"td\");\n    i0.ɵɵtext(40);\n    i0.ɵɵpipe(41, \"humanizeBytes\");\n    i0.ɵɵpipe(42, \"parseInt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"td\");\n    i0.ɵɵelement(44, \"nz-progress\", 16);\n    i0.ɵɵpipe(45, \"number\");\n    i0.ɵɵtext(46);\n    i0.ɵɵpipe(47, \"humanizeBytes\");\n    i0.ɵɵpipe(48, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"tr\");\n    i0.ɵɵelementStart(50, \"td\", 12);\n    i0.ɵɵtext(51, \"JVM Overhead\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"td\");\n    i0.ɵɵtemplate(53, JobManagerMetricsComponent_nz_table_1_ng_container_53_Template, 4, 5, \"ng-container\", 19);\n    i0.ɵɵtemplate(54, JobManagerMetricsComponent_nz_table_1_ng_template_54_Template, 3, 2, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"td\");\n    i0.ɵɵelement(57, \"i\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(55);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzWidthConfig\", i0.ɵɵpureFunction0(38, _c0));\n    i0.ɵɵadvance(17);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 12, i0.ɵɵpipeBind1(19, 14, ctx_r0.config[\"jobmanager.memory.heap.size\"])));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(22, 16, ctx_r0.metrics[\"Status.JVM.Memory.Heap.Used\"] / ctx_r0.metrics[\"Status.JVM.Memory.Heap.Max\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(24, 19, ctx_r0.metrics[\"Status.JVM.Memory.Heap.Used\"]), \" / \", i0.ɵɵpipeBind1(25, 21, ctx_r0.metrics[\"Status.JVM.Memory.Heap.Max\"]), \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(32, 23, i0.ɵɵpipeBind1(33, 25, ctx_r0.config[\"jobmanager.memory.off-heap.size\"])));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(41, 27, i0.ɵɵpipeBind1(42, 29, ctx_r0.config[\"jobmanager.memory.jvm-metaspace.size\"])));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(45, 31, ctx_r0.metrics[\"Status.JVM.Memory.Metaspace.Used\"] / ctx_r0.metrics[\"Status.JVM.Memory.Metaspace.Max\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(47, 34, ctx_r0.metrics[\"Status.JVM.Memory.Metaspace.Used\"]), \" / \", i0.ɵɵpipeBind1(48, 36, ctx_r0.metrics[\"Status.JVM.Memory.Metaspace.Max\"]), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config[\"jobmanager.memory.jvm-overhead.min\"] === ctx_r0.config[\"jobmanager.memory.jvm-overhead.max\"])(\"ngIfElse\", _r3);\n  }\n}\n\nfunction JobManagerMetricsComponent_tr_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const gc_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(gc_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gc_r5.count || \"-\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gc_r5.time || \"-\");\n  }\n}\n\nexport let JobManagerMetricsComponent = /*#__PURE__*/(() => {\n  class JobManagerMetricsComponent {\n    constructor(jobManagerService, statusService, cdr) {\n      this.jobManagerService = jobManagerService;\n      this.statusService = statusService;\n      this.cdr = cdr;\n      this.destroy$ = new Subject();\n      this.metrics = {};\n      this.config = {};\n      this.listOfGCName = [];\n      this.listOfGCMetric = [];\n    }\n\n    ngOnInit() {\n      this.jobManagerService.loadConfig().subscribe(data => {\n        for (const item of data) {\n          this.config[item.key] = item.value;\n        }\n\n        this.cdr.markForCheck();\n      });\n      this.statusService.refresh$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.jobManagerService.getMetricsName().pipe(map(arr => arr.filter(item => item.indexOf('Status.JVM.GarbageCollector') !== -1))).subscribe(data => {\n          this.listOfGCName = data;\n          this.cdr.markForCheck();\n        });\n        this.jobManagerService.getMetrics(['Status.JVM.Memory.Heap.Used', 'Status.JVM.Memory.Heap.Max', 'Status.JVM.Memory.Metaspace.Used', 'Status.JVM.Memory.Metaspace.Max', 'Status.JVM.Memory.Heap.Committed', 'Status.JVM.Memory.Heap.Used', 'Status.JVM.Memory.Heap.Max', 'Status.JVM.Memory.NonHeap.Committed', 'Status.JVM.Memory.NonHeap.Used', 'Status.JVM.Memory.NonHeap.Max', 'Status.JVM.Memory.Direct.Count', 'Status.JVM.Memory.Direct.MemoryUsed', 'Status.JVM.Memory.Direct.TotalCapacity', 'Status.JVM.Memory.Mapped.Count', 'Status.JVM.Memory.Mapped.MemoryUsed', 'Status.JVM.Memory.Mapped.TotalCapacity', ...this.listOfGCName]).subscribe(data => {\n          this.metrics = data;\n          this.listOfGCMetric = Array.from(new Set(this.listOfGCName.map(item => item.replace('Status.JVM.GarbageCollector.', '').replace('.Count', '').replace('.Time', '')))).map(name => {\n            return {\n              name,\n              count: this.metrics[`Status.JVM.GarbageCollector.${name}.Count`],\n              time: this.metrics[`Status.JVM.GarbageCollector.${name}.Time`]\n            };\n          });\n          this.cdr.markForCheck();\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobManagerMetricsComponent.ɵfac = function JobManagerMetricsComponent_Factory(t) {\n    return new (t || JobManagerMetricsComponent)(i0.ɵɵdirectiveInject(i1.JobManagerService), i0.ɵɵdirectiveInject(i1.StatusService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  JobManagerMetricsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobManagerMetricsComponent,\n    selectors: [[\"flink-job-manager-metrics\"]],\n    decls: 94,\n    vars: 54,\n    consts: [[1, \"wrapper\"], [\"nzBordered\", \"\", \"class\", \"flink-memory-model\", \"nzTemplateMode\", \"\", \"nzSize\", \"small\", 3, \"nzWidthConfig\", 4, \"ngIf\"], [\"nzTitle\", \"Advanced\"], [\"nz-row\", \"\", 3, \"nzGutter\"], [\"nz-col\", \"\", 3, \"nzSpan\"], [\"nzBordered\", \"\", \"nzTitle\", \"JVM (Heap/Non-Heap) Memory\", 3, \"nzTemplateMode\", \"nzFrontPagination\", \"nzShowPagination\", \"nzSize\"], [\"nzBordered\", \"\", \"nzTitle\", \"Outside JVM Memory\", 3, \"nzTemplateMode\", \"nzFrontPagination\", \"nzShowPagination\", \"nzSize\"], [\"nz-col\", \"\", 1, \"top-margin\", 3, \"nzSpan\"], [\"nzBordered\", \"\", \"nzTitle\", \"Garbage Collection\", 3, \"nzTemplateMode\", \"nzFrontPagination\", \"nzShowPagination\", \"nzSize\"], [4, \"ngFor\", \"ngForOf\"], [\"nzBordered\", \"\", \"nzTemplateMode\", \"\", \"nzSize\", \"small\", 1, \"flink-memory-model\", 3, \"nzWidthConfig\"], [\"colspan\", \"2\", 1, \"table-header\"], [1, \"table-header\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"This column shows the values that are actually used by Flink. These may differ from the configured values; Flink may adjust them to fit the actual setup, and automatically derives values that were not explicitly configured.\", \"nzType\", \"info-circle\", 1, \"header-icon\"], [\"rowspan\", \"8\", 1, \"table-header\"], [\"src\", \"assets/images/process_mem_model.svg\"], [\"nzSize\", \"small\", \"nzStrokeLinecap\", \"square\", \"nzStatus\", \"normal\", 3, \"nzPercent\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"The maximum heap displayed might differ from the configured values depending on the used GC algorithm for this process.\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"Metrics related to this configuration parameter cannot be monitored. Flink does not have full control over these memory pools\", \"nzType\", \"info-circle\"], [4, \"ngIf\", \"ngIfElse\"], [\"minMaxTemplate\", \"\"]],\n    template: function JobManagerMetricsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, JobManagerMetricsComponent_nz_table_1_Template, 58, 39, \"nz-table\", 1);\n        i0.ɵɵelementStart(2, \"nz-card\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"nz-table\", 5);\n        i0.ɵɵelementStart(6, \"thead\");\n        i0.ɵɵelementStart(7, \"tr\");\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Committed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Used\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Maximum\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵelementStart(17, \"tr\");\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵelementStart(19, \"strong\");\n        i0.ɵɵtext(20, \"Heap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"td\");\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"td\");\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"td\");\n        i0.ɵɵtext(28);\n        i0.ɵɵpipe(29, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"tr\");\n        i0.ɵɵelementStart(31, \"td\");\n        i0.ɵɵelementStart(32, \"strong\");\n        i0.ɵɵtext(33, \"Non-Heap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"td\");\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"td\");\n        i0.ɵɵtext(38);\n        i0.ɵɵpipe(39, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"td\");\n        i0.ɵɵtext(41);\n        i0.ɵɵpipe(42, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 4);\n        i0.ɵɵelementStart(44, \"nz-table\", 6);\n        i0.ɵɵelementStart(45, \"thead\");\n        i0.ɵɵelementStart(46, \"tr\");\n        i0.ɵɵelementStart(47, \"th\");\n        i0.ɵɵtext(48, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\");\n        i0.ɵɵtext(50, \"Count\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"th\");\n        i0.ɵɵtext(52, \"Used\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"th\");\n        i0.ɵɵtext(54, \"Capacity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"tbody\");\n        i0.ɵɵelementStart(56, \"tr\");\n        i0.ɵɵelementStart(57, \"td\");\n        i0.ɵɵelementStart(58, \"strong\");\n        i0.ɵɵtext(59, \"Direct\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"td\");\n        i0.ɵɵtext(61);\n        i0.ɵɵpipe(62, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"td\");\n        i0.ɵɵtext(64);\n        i0.ɵɵpipe(65, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"td\");\n        i0.ɵɵtext(67);\n        i0.ɵɵpipe(68, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"tr\");\n        i0.ɵɵelementStart(70, \"td\");\n        i0.ɵɵelementStart(71, \"strong\");\n        i0.ɵɵtext(72, \"Mapped\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"td\");\n        i0.ɵɵtext(74);\n        i0.ɵɵpipe(75, \"number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"td\");\n        i0.ɵɵtext(77);\n        i0.ɵɵpipe(78, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(79, \"td\");\n        i0.ɵɵtext(80);\n        i0.ɵɵpipe(81, \"humanizeBytes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 7);\n        i0.ɵɵelementStart(83, \"nz-table\", 8);\n        i0.ɵɵelementStart(84, \"thead\");\n        i0.ɵɵelementStart(85, \"tr\");\n        i0.ɵɵelementStart(86, \"th\");\n        i0.ɵɵtext(87, \"Collector\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"th\");\n        i0.ɵɵtext(89, \"Count\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"th\");\n        i0.ɵɵtext(91, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"tbody\");\n        i0.ɵɵtemplate(93, JobManagerMetricsComponent_tr_93_Template, 8, 3, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.metrics);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzGutter\", 16);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzSpan\", 12);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzFrontPagination\", false)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n        i0.ɵɵadvance(17);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 30, ctx.metrics[\"Status.JVM.Memory.Heap.Committed\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 32, ctx.metrics[\"Status.JVM.Memory.Heap.Used\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 34, ctx.metrics[\"Status.JVM.Memory.Heap.Max\"]));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 36, ctx.metrics[\"Status.JVM.Memory.NonHeap.Committed\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 38, ctx.metrics[\"Status.JVM.Memory.NonHeap.Used\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(42, 40, ctx.metrics[\"Status.JVM.Memory.NonHeap.Max\"]));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSpan\", 12);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzFrontPagination\", false)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n        i0.ɵɵadvance(17);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(62, 42, ctx.metrics[\"Status.JVM.Memory.Direct.Count\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(65, 44, ctx.metrics[\"Status.JVM.Memory.Direct.MemoryUsed\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(68, 46, ctx.metrics[\"Status.JVM.Memory.Direct.TotalCapacity\"]));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(75, 48, ctx.metrics[\"Status.JVM.Memory.Mapped.Count\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(78, 50, ctx.metrics[\"Status.JVM.Memory.Mapped.MemoryUsed\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(81, 52, ctx.metrics[\"Status.JVM.Memory.Mapped.TotalCapacity\"]));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSpan\", 24);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzFrontPagination\", false)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfGCMetric);\n      }\n    },\n    directives: [i2.NgIf, i3.NzCardComponent, i4.NzRowDirective, i4.NzColDirective, i5.NzTableComponent, i5.NzTheadComponent, i5.NzTrDirective, i5.NzTableCellDirective, i5.NzThMeasureDirective, i5.NzTbodyComponent, i2.NgForOf, i6.NzIconDirective, i7.NzTooltipDirective, i8.NzProgressComponent],\n    pipes: [i9.HumanizeBytesPipe, i2.DecimalPipe, i10.ParseIntPipe],\n    styles: [\".wrapper[_ngcontent-%COMP%]{margin:0 24px 24px}.header-icon[_ngcontent-%COMP%]{position:relative;top:1px}.flink-memory-model[_ngcontent-%COMP%]{margin-bottom:16px}.flink-memory-model[_ngcontent-%COMP%]     table{border-collapse:collapse}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small{border:none}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small .ant-table-body{margin:0;overflow:hidden!important}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small tr:hover td, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small tr:hover th{background:transparent}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small td, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small th{border-collapse:collapse}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small td.table-header, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small th.table-header{background:#fafafa!important;color:rgba(0,0,0,.85);font-weight:500}nz-progress[_ngcontent-%COMP%]{display:block;width:90%}nz-progress[_ngcontent-%COMP%]     .ant-progress-inner{border-radius:0!important}.top-margin[_ngcontent-%COMP%]{margin-top:16px}\"],\n    changeDetection: 0\n  });\n  return JobManagerMetricsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}