{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { flatMap, takeUntil, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"ng-zorro-antd/table\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ng-zorro-antd/divider\";\nimport * as i5 from \"../../../../share/customize/backpressure-badge/backpressure-badge.component\";\nimport * as i6 from \"../../../../share/pipes/humanize-duration.pipe\";\n\nfunction JobOverviewDrawerBackpressureComponent_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"humanizeDuration\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r3.now - ctx_r3.backpressure[\"end-timestamp\"]), \" ago \");\n  }\n}\n\nfunction JobOverviewDrawerBackpressureComponent_span_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Sampling in progress... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction JobOverviewDrawerBackpressureComponent_span_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" - \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction JobOverviewDrawerBackpressureComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Measurement: \");\n    i0.ɵɵtemplate(2, JobOverviewDrawerBackpressureComponent_span_4_span_2_Template, 3, 3, \"span\", 2);\n    i0.ɵɵtemplate(3, JobOverviewDrawerBackpressureComponent_span_4_span_3_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtemplate(4, JobOverviewDrawerBackpressureComponent_span_4_span_4_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelement(5, \"nz-divider\", 4);\n    i0.ɵɵtext(6, \" Back Pressure Status: \");\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵelement(8, \"flink-backpressure-badge\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.backpressure[\"end-timestamp\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.backpressure[\"status\"] === \"deprecated\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.backpressure[\"end-timestamp\"] && ctx_r0.backpressure[\"status\"] !== \"deprecated\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"state\", ctx_r0.backpressure[\"backpressure-level\"]);\n  }\n}\n\nfunction JobOverviewDrawerBackpressureComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Operator is not running. Cannot sample back pressure. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction JobOverviewDrawerBackpressureComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"flink-backpressure-badge\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subtask_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subtask_r6[\"subtask\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", ctx_r2.prettyPrint(subtask_r6[\"ratio\"]), \" / \", ctx_r2.prettyPrint(subtask_r6[\"idleRatio\"]), \" / \", ctx_r2.prettyPrint(subtask_r6[\"busyRatio\"]), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"state\", subtask_r6[\"backpressure-level\"]);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    y: \"calc( 100% - 72px )\"\n  };\n};\n\nconst _c1 = function () {\n  return [\"33.33%\", \"33.33%\", \"33.33%\"];\n};\n\nexport let JobOverviewDrawerBackpressureComponent = /*#__PURE__*/(() => {\n  class JobOverviewDrawerBackpressureComponent {\n    constructor(jobService, cdr) {\n      this.jobService = jobService;\n      this.cdr = cdr;\n      this.destroy$ = new Subject();\n      this.isLoading = true;\n      this.now = Date.now();\n      this.backpressure = {};\n      this.listOfSubTaskBackpressure = [];\n    }\n\n    trackBackPressureBy(_, node) {\n      return node.subtask;\n    }\n\n    prettyPrint(value) {\n      if (isNaN(value)) {\n        return \"N/A\";\n      } else {\n        return Math.round(value * 100) + \"%\";\n      }\n    }\n\n    ngOnInit() {\n      this.jobService.jobWithVertex$.pipe(takeUntil(this.destroy$), tap(data => this.selectedVertex = data.vertex), flatMap(data => this.jobService.loadOperatorBackPressure(data.job.jid, data.vertex.id))).subscribe(data => {\n        this.isLoading = false;\n        this.now = Date.now();\n        this.backpressure = data;\n        this.listOfSubTaskBackpressure = data.subtasks || [];\n        this.cdr.markForCheck();\n      }, () => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobOverviewDrawerBackpressureComponent.ɵfac = function JobOverviewDrawerBackpressureComponent_Factory(t) {\n    return new (t || JobOverviewDrawerBackpressureComponent)(i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  JobOverviewDrawerBackpressureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobOverviewDrawerBackpressureComponent,\n    selectors: [[\"flink-job-overview-drawer-backpressure\"]],\n    decls: 15,\n    vars: 13,\n    consts: [[1, \"no-border\", \"small\", \"full-height\", 3, \"nzSize\", \"nzLoading\", \"nzData\", \"nzScroll\", \"nzWidthConfig\", \"nzFrontPagination\", \"nzShowPagination\"], [\"colspan\", \"3\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"nzType\"], [3, \"state\"]],\n    template: function JobOverviewDrawerBackpressureComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nz-table\", 0);\n        i0.ɵɵelementStart(1, \"thead\");\n        i0.ɵɵelementStart(2, \"tr\");\n        i0.ɵɵelementStart(3, \"th\", 1);\n        i0.ɵɵtemplate(4, JobOverviewDrawerBackpressureComponent_span_4_Template, 9, 5, \"span\", 2);\n        i0.ɵɵtemplate(5, JobOverviewDrawerBackpressureComponent_span_5_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"tr\");\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"SubTask\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Backpressured / Idle / Busy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Backpressure Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵtemplate(14, JobOverviewDrawerBackpressureComponent_tr_14_Template, 7, 5, \"tr\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"nzSize\", \"small\")(\"nzLoading\", ctx.isLoading)(\"nzData\", ctx.listOfSubTaskBackpressure)(\"nzScroll\", i0.ɵɵpureFunction0(11, _c0))(\"nzWidthConfig\", i0.ɵɵpureFunction0(12, _c1))(\"nzFrontPagination\", false)(\"nzShowPagination\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.selectedVertex == null ? null : ctx.selectedVertex.detail == null ? null : ctx.selectedVertex.detail.status) === \"RUNNING\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.selectedVertex == null ? null : ctx.selectedVertex.detail == null ? null : ctx.selectedVertex.detail.status) !== \"RUNNING\");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfSubTaskBackpressure)(\"ngForTrackBy\", ctx.trackBackPressureBy);\n      }\n    },\n    directives: [i2.NzTableComponent, i2.NzTheadComponent, i2.NzTrDirective, i2.NzTableCellDirective, i2.NzThMeasureDirective, i3.NgIf, i2.NzTbodyComponent, i3.NgForOf, i4.NzDividerComponent, i5.BackpressureBadgeComponent],\n    pipes: [i6.HumanizeDurationPipe],\n    styles: [\".pressure-badge[_ngcontent-%COMP%]{margin-top:-4px}\"],\n    changeDetection: 0\n  });\n  return JobOverviewDrawerBackpressureComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}