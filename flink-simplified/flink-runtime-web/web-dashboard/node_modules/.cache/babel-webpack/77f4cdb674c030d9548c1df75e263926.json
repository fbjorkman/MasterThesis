{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { flatMap, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"services\";\nimport * as i3 from \"./status/task-manager-status.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng-zorro-antd/skeleton\";\n\nfunction TaskManagerComponent_nz_skeleton_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-skeleton\", 4);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"nzActive\", true);\n  }\n}\n\nexport let TaskManagerComponent = /*#__PURE__*/(() => {\n  class TaskManagerComponent {\n    constructor(cdr, activatedRoute, taskManagerService, statusService) {\n      this.cdr = cdr;\n      this.activatedRoute = activatedRoute;\n      this.taskManagerService = taskManagerService;\n      this.statusService = statusService;\n      this.destroy$ = new Subject();\n      this.isLoading = true;\n    }\n\n    ngOnInit() {\n      this.statusService.refresh$.pipe(takeUntil(this.destroy$), flatMap(() => this.taskManagerService.loadManager(this.activatedRoute.snapshot.params.taskManagerId))).subscribe(data => {\n        this.taskManagerService.taskManagerDetail$.next(data);\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }, () => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  TaskManagerComponent.ɵfac = function TaskManagerComponent_Factory(t) {\n    return new (t || TaskManagerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TaskManagerService), i0.ɵɵdirectiveInject(i2.StatusService));\n  };\n\n  TaskManagerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskManagerComponent,\n    selectors: [[\"flink-task-manager\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[3, \"isLoading\"], [1, \"content\"], [3, \"nzActive\", 4, \"ngIf\"], [1, \"router\"], [3, \"nzActive\"]],\n    template: function TaskManagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"flink-task-manager-status\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, TaskManagerComponent_nz_skeleton_2_Template, 1, 1, \"nz-skeleton\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"display\", ctx.isLoading ? \"none\" : \"block\");\n      }\n    },\n    directives: [i3.TaskManagerStatusComponent, i4.NgIf, i1.RouterOutlet, i5.NzSkeletonComponent],\n    styles: [\".content[_ngcontent-%COMP%]{margin-top:16px}.router[_ngcontent-%COMP%]{height:100%;width:100%}\"],\n    changeDetection: 0\n  });\n  return TaskManagerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}