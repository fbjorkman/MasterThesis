{"ast":null,"code":"import { combineLatest, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { trigger, animate, style, transition } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"services\";\nimport * as i3 from \"share/customize/job-chart/job-chart.service\";\nimport * as i4 from \"share/common/navigation/navigation.component\";\nimport * as i5 from \"ng-zorro-antd/icon\";\nexport let JobOverviewDrawerComponent = /*#__PURE__*/(() => {\n  class JobOverviewDrawerComponent {\n    constructor(activatedRoute, router, jobService, jobChartService) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.jobService = jobService;\n      this.jobChartService = jobChartService;\n      this.listOfNavigation = [{\n        title: 'Detail',\n        path: 'detail'\n      }, {\n        title: 'SubTasks',\n        path: 'subtasks'\n      }, {\n        title: 'TaskManagers',\n        path: 'taskmanagers'\n      }, {\n        title: 'Watermarks',\n        path: 'watermarks'\n      }, {\n        title: 'Accumulators',\n        path: 'accumulators'\n      }, {\n        title: 'BackPressure',\n        path: 'backpressure'\n      }, {\n        title: 'Metrics',\n        path: 'metrics'\n      }, {\n        title: 'FlameGraph',\n        path: 'flamegraph'\n      }];\n      this.fullScreen = false;\n      this.cachePath = this.listOfNavigation[0].path;\n      this.destroy$ = new Subject();\n    }\n\n    closeDrawer() {\n      if (this.fullScreen) {\n        this.fullScreen = false;\n        this.jobChartService.resize();\n      } else {\n        this.router.navigate(['../../'], {\n          relativeTo: this.activatedRoute\n        }).then();\n      }\n    }\n\n    fullDrawer() {\n      this.fullScreen = true;\n      this.jobChartService.resize();\n    }\n\n    ngOnInit() {\n      const nodeId$ = this.activatedRoute.params.pipe(map(item => item.vertexId));\n      combineLatest(this.jobService.jobDetail$.pipe(map(item => item.plan.nodes)), nodeId$).pipe(takeUntil(this.destroy$)).subscribe(data => {\n        const [nodes, nodeId] = data;\n\n        if (!this.activatedRoute.firstChild) {\n          this.router.navigate([this.cachePath], {\n            relativeTo: this.activatedRoute\n          });\n        } else {\n          this.cachePath = this.activatedRoute.firstChild.snapshot.data.path;\n        }\n\n        if (nodes && nodeId) {\n          this.jobService.selectedVertex$.next(nodes.find(item => item.id === nodeId));\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.jobService.selectedVertex$.next(null);\n    }\n\n  }\n\n  JobOverviewDrawerComponent.ɵfac = function JobOverviewDrawerComponent_Factory(t) {\n    return new (t || JobOverviewDrawerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.JobService), i0.ɵɵdirectiveInject(i3.JobChartService));\n  };\n\n  JobOverviewDrawerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobOverviewDrawerComponent,\n    selectors: [[\"flink-job-overview-drawer\"]],\n    hostVars: 3,\n    hostBindings: function JobOverviewDrawerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@drawer\", undefined);\n        i0.ɵɵclassProp(\"full-width\", ctx.fullScreen);\n      }\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[3, \"listOfNavigation\", \"size\"], [1, \"drawer-content\"], [1, \"handler\", \"close\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"right\"], [1, \"handler\", \"full\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"left\"]],\n    template: function JobOverviewDrawerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"flink-navigation\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function JobOverviewDrawerComponent_Template_a_click_3_listener() {\n          return ctx.closeDrawer();\n        });\n        i0.ɵɵelement(4, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 4);\n        i0.ɵɵlistener(\"click\", function JobOverviewDrawerComponent_Template_a_click_5_listener() {\n          return ctx.fullDrawer();\n        });\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"listOfNavigation\", ctx.listOfNavigation)(\"size\", \"small\");\n      }\n    },\n    directives: [i4.NavigationComponent, i1.RouterOutlet, i5.NzIconDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;z-index:10;width:60%;height:100%;position:absolute;right:0;top:0;background:#fff;border-left:1px solid #f0f0f0}.full-width[_nghost-%COMP%]{width:100%;border-left:none}.full-width[_nghost-%COMP%]   .handler.close[_ngcontent-%COMP%]{left:-1px}.full-width[_nghost-%COMP%]   .handler.full[_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]     .ant-tabs-bar{margin:0}[_nghost-%COMP%]     .ant-tabs-tab:first-of-type{margin:0 0 0 16px}.drawer-content[_ngcontent-%COMP%]{height:calc(100% - 34px);overflow:auto}.handler[_ngcontent-%COMP%]{z-index:2;font-size:14px;top:50%;display:block;transform:translateY(-50%);position:absolute;background:#fafafa;padding:12px 0;border:1px solid #f0f0f0}.handler.close[_ngcontent-%COMP%]{left:-16px;margin-top:-25px}.handler.full[_ngcontent-%COMP%]{left:-16px;margin-top:25px}.handler[_ngcontent-%COMP%]:hover{color:#fff;background:#1890ff}\"],\n    data: {\n      animation: [trigger('drawer', [transition('void => *', [style({\n        transform: 'translateX(100%)'\n      }), animate(100, style({\n        transform: 'translateX(0)'\n      }))]), transition('* => void', [style({\n        transform: 'translateX(0)'\n      }), animate(100, style({\n        transform: 'translateX(100%)'\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return JobOverviewDrawerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}