{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/divider\";\nimport * as i4 from \"share/common/navigation/navigation.component\";\nimport * as i5 from \"ng-zorro-antd/skeleton\";\nimport * as i6 from \"share/pipes/humanize-bytes.pipe\";\n\nfunction TaskManagerStatusComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7, \"Last Heartbeat:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"nz-divider\", 6);\n    i0.ɵɵelementStart(12, \"div\", 5);\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtext(14, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"nz-divider\", 6);\n    i0.ɵɵelementStart(18, \"div\", 5);\n    i0.ɵɵelementStart(19, \"div\");\n    i0.ɵɵtext(20, \"Data Port:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"nz-divider\", 6);\n    i0.ɵɵelementStart(24, \"div\", 5);\n    i0.ɵɵelementStart(25, \"div\");\n    i0.ɵɵtext(26, \"Free Slots / All Slots:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"nz-divider\", 6);\n    i0.ɵɵelementStart(30, \"div\", 5);\n    i0.ɵɵelementStart(31, \"div\");\n    i0.ɵɵtext(32, \"CPU Cores:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"nz-divider\", 6);\n    i0.ɵɵelementStart(36, \"div\", 5);\n    i0.ɵɵelementStart(37, \"div\");\n    i0.ɵɵtext(38, \"Physical Memory:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\");\n    i0.ɵɵtext(40);\n    i0.ɵɵpipe(41, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"nz-divider\", 6);\n    i0.ɵɵelementStart(43, \"div\", 5);\n    i0.ɵɵelementStart(44, \"div\");\n    i0.ɵɵtext(45, \"JVM Heap Size:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"div\");\n    i0.ɵɵtext(47);\n    i0.ɵɵpipe(48, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(49, \"nz-divider\", 6);\n    i0.ɵɵelementStart(50, \"div\", 5);\n    i0.ɵɵelementStart(51, \"div\");\n    i0.ɵɵtext(52, \"Flink Managed Memory:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"div\");\n    i0.ɵɵtext(54);\n    i0.ɵɵpipe(55, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(56, \"flink-navigation\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.taskManagerDetail.path);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 18, ctx_r0.taskManagerDetail.timeSinceLastHeartbeat, \"yyyy-MM-dd HH:mm:ss\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.taskManagerDetail.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.taskManagerDetail.dataPort);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.taskManagerDetail.freeSlots, \" / \", ctx_r0.taskManagerDetail.slotsNumber, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.taskManagerDetail.hardware.cpuCores);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(41, 21, ctx_r0.taskManagerDetail.hardware.physicalMemory));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 23, ctx_r0.taskManagerDetail.hardware.freeMemory));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzType\", \"vertical\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(55, 25, ctx_r0.taskManagerDetail.hardware.managedMemory));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"listOfNavigation\", ctx_r0.listOfNavigation);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    rows: 4\n  };\n};\n\nfunction TaskManagerStatusComponent_nz_skeleton_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-skeleton\", 8);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"nzActive\", true)(\"nzTitle\", false)(\"nzParagraph\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nexport let TaskManagerStatusComponent = /*#__PURE__*/(() => {\n  class TaskManagerStatusComponent {\n    constructor(taskManagerService, cdr) {\n      this.taskManagerService = taskManagerService;\n      this.cdr = cdr;\n      this.isLoading = true;\n      this.listOfNavigation = [{\n        path: 'metrics',\n        title: 'Metrics'\n      }, {\n        path: 'logs',\n        title: 'Logs'\n      }, {\n        path: 'stdout',\n        title: 'Stdout'\n      }, {\n        path: 'log-list',\n        title: 'Log List'\n      }, {\n        path: 'thread-dump',\n        title: 'Thread Dump'\n      }];\n      this.destroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      this.taskManagerService.taskManagerDetail$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n        this.taskManagerDetail = data;\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  TaskManagerStatusComponent.ɵfac = function TaskManagerStatusComponent_Factory(t) {\n    return new (t || TaskManagerStatusComponent)(i0.ɵɵdirectiveInject(i1.TaskManagerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TaskManagerStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskManagerStatusComponent,\n    selectors: [[\"flink-task-manager-status\"]],\n    inputs: {\n      isLoading: \"isLoading\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"wrapper\", 4, \"ngIf\"], [3, \"nzActive\", \"nzTitle\", \"nzParagraph\", 4, \"ngIf\"], [1, \"wrapper\"], [1, \"name\"], [1, \"status\"], [1, \"field\"], [3, \"nzType\"], [3, \"listOfNavigation\"], [3, \"nzActive\", \"nzTitle\", \"nzParagraph\"]],\n    template: function TaskManagerStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TaskManagerStatusComponent_div_0_Template, 57, 27, \"div\", 0);\n        i0.ɵɵtemplate(1, TaskManagerStatusComponent_nz_skeleton_1_Template, 1, 4, \"nz-skeleton\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i2.NgIf, i3.NzDividerComponent, i4.NavigationComponent, i5.NzSkeletonComponent],\n    pipes: [i2.DatePipe, i6.HumanizeBytesPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;background:#fff;padding:16px 24px 0;border-bottom:1px solid #f0f0f0;margin:-24px -24px 0}.wrapper[_ngcontent-%COMP%]{position:relative}.name[_ngcontent-%COMP%]   flink-job-badge[_ngcontent-%COMP%], .name[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{display:inline-block}.name[_ngcontent-%COMP%]   nz-divider[_ngcontent-%COMP%]{margin:0 24px}.field[_ngcontent-%COMP%]{display:flex;font-size:14px;margin-bottom:12px}.field[_ngcontent-%COMP%], .field[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{line-height:22px}.field[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child{margin-left:8px;font-weight:700;color:rgba(0,0,0,.85)}.status[_ngcontent-%COMP%]{margin-bottom:12px;display:flex;align-items:center;flex-wrap:wrap;padding:12px 12px 0;border:1px solid #f0f0f0;background:#fcfcfc}.status[_ngcontent-%COMP%]   nz-divider[_ngcontent-%COMP%]{margin:0 24px}flink-navigation[_ngcontent-%COMP%]{margin-bottom:-1px;display:block}\"],\n    changeDetection: 0\n  });\n  return TaskManagerStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}