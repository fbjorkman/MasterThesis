{"ast":null,"code":"/// <reference path=\"../../../../../node_modules/@antv/g2/src/index.d.ts\" />\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/// <reference path=\"../../../../../node_modules/@antv/g2/src/index.d.ts\" />\nimport { EventEmitter } from '@angular/core';\nimport * as G2 from '@antv/g2';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"share/customize/job-chart/job-chart.service\";\nimport * as i2 from \"ng-zorro-antd/button\";\nimport * as i3 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i4 from \"ng-zorro-antd/core/wave\";\nimport * as i5 from \"ng-zorro-antd/icon\";\nimport * as i6 from \"../../pipes/humanize-chart-numeric.pipe\";\nconst _c0 = [\"chart\"];\nexport let JobChartComponent = /*#__PURE__*/(() => {\n  class JobChartComponent {\n    constructor(cdr, jobChartService) {\n      this.cdr = cdr;\n      this.jobChartService = jobChartService;\n      this.closed = new EventEmitter();\n      this.size = 'small';\n      this.displayMode = 'chart';\n      this.data = [];\n      this.destroy$ = new Subject();\n    }\n\n    get isBig() {\n      return this.size === 'big';\n    }\n\n    refresh(res) {\n      this.latestValue = res.values[this.title];\n\n      if (this.displayMode === 'numeric') {\n        this.cdr.detectChanges();\n      }\n\n      this.data.push({\n        time: res.timestamp,\n        value: this.latestValue,\n        type: this.title\n      });\n\n      if (this.data.length > 20) {\n        this.data.shift();\n      }\n\n      if (this.chartInstance) {\n        this.chartInstance.changeData(this.data);\n      }\n    }\n\n    setMode(mode) {\n      this.displayMode = mode;\n      this.cdr.detectChanges();\n    }\n\n    resize(size) {\n      this.size = size;\n      this.cdr.detectChanges();\n      setTimeout(() => this.chartInstance.forceFit());\n    }\n\n    close() {\n      this.closed.emit(this.title);\n    }\n\n    ngAfterViewInit() {\n      this.cdr.detach();\n      G2.track(false);\n      this.chartInstance = new G2.Chart({\n        container: this.chart.nativeElement,\n        height: 150,\n        forceFit: true,\n        padding: 'auto'\n      });\n      this.chartInstance.legend(false);\n      this.chartInstance.source(this.data, {\n        time: {\n          alias: 'Time',\n          type: 'time',\n          mask: 'HH:mm:ss',\n          tickCount: 3\n        },\n        type: {\n          type: 'cat'\n        }\n      });\n      this.chartInstance.line().position('time*value').shape('smooth').color('type').size(2).animate({\n        update: {\n          duration: 0\n        }\n      });\n      this.chartInstance.render();\n      this.jobChartService.resize$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        if (this.chartInstance) {\n          setTimeout(() => {\n            this.chartInstance.forceFit();\n          });\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      if (this.chartInstance) {\n        this.chartInstance.destroy();\n      }\n    }\n\n  }\n\n  JobChartComponent.ɵfac = function JobChartComponent_Factory(t) {\n    return new (t || JobChartComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.JobChartService));\n  };\n\n  JobChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobChartComponent,\n    selectors: [[\"flink-job-chart\"]],\n    viewQuery: function JobChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function JobChartComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"big\", ctx.isBig);\n      }\n    },\n    inputs: {\n      title: \"title\"\n    },\n    outputs: {\n      closed: \"closed\"\n    },\n    decls: 24,\n    vars: 15,\n    consts: [[1, \"chart\"], [1, \"title\"], [1, \"text\"], [1, \"operate\"], [3, \"nzSize\"], [\"nz-button\", \"\", 3, \"nzType\", \"click\"], [\"nz-button\", \"\", 1, \"close\", 3, \"nzSize\", \"click\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"nzTheme\", \"outline\"], [1, \"content\"], [3, \"hidden\"], [\"chart\", \"\"], [1, \"numeric\", 3, \"hidden\"], [1, \"type-switch\"]],\n    template: function JobChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"nz-button-group\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function JobChartComponent_Template_button_click_6_listener() {\n          return ctx.resize(\"big\");\n        });\n        i0.ɵɵtext(7, \"Big\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function JobChartComponent_Template_button_click_8_listener() {\n          return ctx.resize(\"small\");\n        });\n        i0.ɵɵtext(9, \"Small\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function JobChartComponent_Template_button_click_10_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelement(11, \"i\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelement(13, \"div\", 9, 10);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"humanizeChartNumeric\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12);\n        i0.ɵɵelementStart(19, \"nz-button-group\", 4);\n        i0.ɵɵelementStart(20, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function JobChartComponent_Template_button_click_20_listener() {\n          return ctx.setMode(\"chart\");\n        });\n        i0.ɵɵtext(21, \"Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function JobChartComponent_Template_button_click_22_listener() {\n          return ctx.setMode(\"numeric\");\n        });\n        i0.ɵɵtext(23, \"Numeric\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSize\", \"small\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzType\", ctx.size === \"big\" ? \"primary\" : \"default\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzType\", ctx.size === \"small\" ? \"primary\" : \"default\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzSize\", \"small\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.displayMode === \"numeric\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.displayMode === \"chart\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 12, ctx.latestValue, ctx.title));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"nzSize\", \"small\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzType\", ctx.displayMode === \"chart\" ? \"primary\" : \"default\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nzType\", ctx.displayMode === \"numeric\" ? \"primary\" : \"default\");\n      }\n    },\n    directives: [i2.NzButtonGroupComponent, i3.ɵNzTransitionPatchDirective, i2.NzButtonComponent, i4.NzWaveDirective, i5.NzIconDirective],\n    pipes: [i6.HumanizeChartNumericPipe],\n    styles: [\"[_nghost-%COMP%]{padding:12px;margin-bottom:12px;float:left;width:33.33%}.big[_nghost-%COMP%]{width:100%}.close[_ngcontent-%COMP%]{margin-left:8px}.chart[_ngcontent-%COMP%]{border:1px solid #f0f0f0}.chart[_ngcontent-%COMP%], .title[_ngcontent-%COMP%]{position:relative}.title[_ngcontent-%COMP%]{padding:12px;border-bottom:1px solid #f0f0f0}.text[_ngcontent-%COMP%]{font-size:12px;line-height:24px;overflow:hidden;max-width:calc(100% - 128px);text-overflow:ellipsis}.operate[_ngcontent-%COMP%]{display:flex;align-items:center;position:absolute;top:12px;right:12px}.content[_ngcontent-%COMP%]{padding:12px}.content[_ngcontent-%COMP%]   .numeric[_ngcontent-%COMP%]{line-height:150px;font-size:32px;text-align:center}button[_ngcontent-%COMP%]{transition:none}\"],\n    changeDetection: 0\n  });\n  return JobChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}