{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Renderer2, ChangeDetectorRef, ElementRef, Optional, Host, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\n\nfunction NzBadgeComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(3, NzBadgeComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    ɵngcc0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-badge-sup\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor || (ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)))(\"nzCount\", ctx_r3.nzCount)(\"noAnimation\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation));\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template, 1, 8, \"nz-badge-sup\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showSup);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r8 = ctx.$implicit;\n    const i_r5 = ɵngcc0.ɵɵnextContext(2).index;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"current\", p_r8 === ctx_r7.countArray[i_r5]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", p_r8, \" \");\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template, 2, 3, \"p\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.countSingleArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r3.countArray[i_r5] * 100 + \"%)\");\n    ɵngcc0.ɵɵproperty(\"nzNoAnimation\", ctx_r3.noAnimation);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.nzDot && ctx_r3.countArray[i_r5] !== undefined);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.maxNumberArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r2.nzOverflowCount, \"+\");\n  }\n}\n\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\n\nconst badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nlet NzBadgeComponent = /*#__PURE__*/(() => {\n  class NzBadgeComponent {\n    constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n      this.nzConfigService = nzConfigService;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this.noAnimation = noAnimation;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.showSup = false;\n      this.presetColor = null;\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n      this.nzShowZero = false;\n      this.nzShowDot = true;\n      this.nzStandalone = false;\n      this.nzDot = false;\n      this.nzOverflowCount = 99;\n      this.nzColor = undefined;\n      this.nzStyle = null;\n      this.nzText = null; // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-badge');\n    }\n\n    ngOnInit() {\n      var _a;\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.prepareBadgeForRtl();\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.prepareBadgeForRtl();\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzColor,\n        nzShowDot,\n        nzDot,\n        nzCount,\n        nzShowZero\n      } = changes;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n\n      if (nzShowDot || nzDot || nzCount || nzShowZero) {\n        this.showSup = this.nzShowDot && this.nzDot || this.nzCount > 0 || this.nzCount <= 0 && this.nzShowZero;\n      }\n    }\n\n    prepareBadgeForRtl() {\n      if (this.isRtlLayout) {\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n      }\n    }\n\n    get isRtlLayout() {\n      return this.dir === 'rtl';\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NzBadgeComponent.ɵfac = function NzBadgeComponent_Factory(t) {\n    return new (t || NzBadgeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzNoAnimationDirective, 9));\n  };\n\n  NzBadgeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzBadgeComponent,\n    selectors: [[\"nz-badge\"]],\n    hostVars: 4,\n    hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n      }\n    },\n    inputs: {\n      nzShowZero: \"nzShowZero\",\n      nzShowDot: \"nzShowDot\",\n      nzStandalone: \"nzStandalone\",\n      nzDot: \"nzDot\",\n      nzOverflowCount: \"nzOverflowCount\",\n      nzColor: \"nzColor\",\n      nzStyle: \"nzStyle\",\n      nzText: \"nzText\",\n      nzTitle: \"nzTitle\",\n      nzStatus: \"nzStatus\",\n      nzCount: \"nzCount\",\n      nzOffset: \"nzOffset\"\n    },\n    exportAs: [\"nzBadge\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", 4, \"ngIf\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"]],\n    template: function NzBadgeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzBadgeComponent_ng_container_0_Template, 4, 7, \"ng-container\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzStatus || ctx.nzColor);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n      }\n    },\n    directives: function () {\n      return [ɵngcc4.NgIf, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc4.NgStyle, NzBadgeSupComponent];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [zoomBadgeMotion]\n    },\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n\n  __decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n\n  __decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n\n  __decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzDot\", void 0);\n\n  __decorate([WithConfig()], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n\n  __decorate([WithConfig()], NzBadgeComponent.prototype, \"nzColor\", void 0);\n\n  return NzBadgeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzBadgeSupComponent = /*#__PURE__*/(() => {\n  class NzBadgeSupComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.nzStyle = null;\n      this.nzDot = false;\n      this.nzOverflowCount = 99;\n      this.disableAnimation = false;\n      this.noAnimation = false;\n      this.maxNumberArray = [];\n      this.countArray = [];\n      this.count = 0;\n      this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]; // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-scroll-number');\n    }\n\n    generateMaxNumberArray() {\n      this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n\n    ngOnInit() {\n      this.generateMaxNumberArray();\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzOverflowCount,\n        nzCount\n      } = changes;\n\n      if (nzCount && typeof nzCount.currentValue === 'number') {\n        this.count = Math.max(0, nzCount.currentValue);\n        this.countArray = this.count.toString().split('').map(item => +item);\n      }\n\n      if (nzOverflowCount) {\n        this.generateMaxNumberArray();\n      }\n    }\n\n  }\n\n  NzBadgeSupComponent.ɵfac = function NzBadgeSupComponent_Factory(t) {\n    return new (t || NzBadgeSupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NzBadgeSupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzBadgeSupComponent,\n    selectors: [[\"nz-badge-sup\"]],\n    hostVars: 15,\n    hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n        ɵngcc0.ɵɵstyleMap(ctx.nzStyle);\n        ɵngcc0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n      }\n    },\n    inputs: {\n      nzStyle: \"nzStyle\",\n      nzDot: \"nzDot\",\n      nzOverflowCount: \"nzOverflowCount\",\n      disableAnimation: \"disableAnimation\",\n      noAnimation: \"noAnimation\",\n      nzOffset: \"nzOffset\",\n      nzTitle: \"nzTitle\",\n      nzCount: \"nzCount\"\n    },\n    exportAs: [\"nzBadgeSup\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"overflowTemplate\", \"\"], [\"class\", \"ant-scroll-number-only\", 3, \"nzNoAnimation\", \"transform\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only\", 3, \"nzNoAnimation\"], [4, \"ngIf\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only-unit\"]],\n    template: function NzBadgeSupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzBadgeSupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzBadgeSupComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.count <= ctx.nzOverflowCount)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc3.NzNoAnimationDirective],\n    encapsulation: 2,\n    data: {\n      animation: [zoomBadgeMotion]\n    },\n    changeDetection: 0\n  });\n  return NzBadgeSupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzRibbonComponent = /*#__PURE__*/(() => {\n  class NzRibbonComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.nzPlacement = 'end';\n      this.nzText = null;\n      this.presetColor = null; // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-ribbon-wrapper');\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzColor\n      } = changes;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n    }\n\n  }\n\n  NzRibbonComponent.ɵfac = function NzRibbonComponent_Factory(t) {\n    return new (t || NzRibbonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NzRibbonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NzRibbonComponent,\n    selectors: [[\"nz-ribbon\"]],\n    inputs: {\n      nzPlacement: \"nzPlacement\",\n      nzText: \"nzText\",\n      nzColor: \"nzColor\"\n    },\n    exportAs: [\"nzRibbon\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 11,\n    consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"]],\n    template: function NzRibbonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n        ɵngcc0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n        ɵngcc0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n      }\n    },\n    directives: [ɵngcc5.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzRibbonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzBadgeModule = /*#__PURE__*/(() => {\n  class NzBadgeModule {}\n\n  NzBadgeModule.ɵfac = function NzBadgeModule_Factory(t) {\n    return new (t || NzBadgeModule)();\n  };\n\n  NzBadgeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzBadgeModule\n  });\n  NzBadgeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]]\n  });\n  return NzBadgeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzBadgeModule, {\n    declarations: function () {\n      return [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent];\n    },\n    imports: function () {\n      return [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule];\n    },\n    exports: function () {\n      return [NzBadgeComponent, NzRibbonComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBadgeComponent, NzBadgeModule, NzBadgeSupComponent as ɵa, NzRibbonComponent as ɵb }; //# sourceMappingURL=ng-zorro-antd-badge.js.map","map":null,"metadata":{},"sourceType":"module"}