{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isNil } from 'utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i2 from \"ng-zorro-antd/icon\";\nconst _c0 = [\"trigger\"];\nexport var ResizeModeEnums = /*#__PURE__*/(() => {\n  (function (ResizeModeEnums) {\n    ResizeModeEnums[\"Vertical\"] = \"vertical\";\n    ResizeModeEnums[\"Horizontal\"] = \"horizontal\";\n  })(ResizeModeEnums || (ResizeModeEnums = {}));\n\n  return ResizeModeEnums;\n})();\nexport let ResizeComponent = /*#__PURE__*/(() => {\n  class ResizeComponent {\n    constructor(document) {\n      this.document = document;\n      this.destroy$ = new Subject();\n      this.isMoving = false;\n      this.left = 0;\n      this.top = 0;\n      this.resizeMin = 0;\n      this.mode = ResizeModeEnums.Vertical;\n      this.leftChange = new EventEmitter();\n      this.topChange = new EventEmitter();\n      this.resizeEnd = new EventEmitter();\n    }\n\n    startMove() {\n      this.isMoving = true;\n    }\n    /**\n     * Get recursive top\n     * @param e\n     */\n\n\n    getResizeTop(e) {\n      const getOffsetTop = elem => {\n        let innerOffsetTop = 0;\n\n        do {\n          if (!isNil(elem.offsetTop)) {\n            innerOffsetTop += elem.offsetTop;\n          }\n        } while (elem = elem.offsetParent);\n\n        return innerOffsetTop;\n      };\n\n      const offsetTop = getOffsetTop(this.baseElement.nativeElement);\n      const maxResize = 900;\n      let newTop = e.pageY - offsetTop;\n\n      if (newTop > maxResize) {\n        newTop = maxResize;\n      }\n\n      if (newTop < this.resizeMin) {\n        newTop = this.resizeMin;\n      }\n\n      return newTop;\n    }\n    /**\n     * Get recursive left\n     * @param e\n     */\n\n\n    getResizeLeft(e) {\n      const getOffsetLeft = elem => {\n        let innerOffsetLeft = 0;\n\n        do {\n          if (!isNil(elem.offsetLeft)) {\n            innerOffsetLeft += elem.offsetLeft;\n          }\n        } while (elem = elem.offsetParent);\n\n        return innerOffsetLeft;\n      };\n\n      const offsetLeft = getOffsetLeft(this.baseElement.nativeElement);\n      const maxResize = this.baseElement.nativeElement.getBoundingClientRect().width - 200;\n      let newLeft = e.pageX - offsetLeft;\n\n      if (newLeft > maxResize) {\n        newLeft = maxResize;\n      }\n\n      if (newLeft < this.resizeMin) {\n        newLeft = this.resizeMin;\n      }\n\n      return newLeft;\n    }\n\n    ngOnInit() {\n      fromEvent(this.document, 'mouseup').pipe(takeUntil(this.destroy$)).subscribe(e => {\n        this.isMoving = false;\n\n        if (e.target === this.trigger.nativeElement) {\n          e.stopPropagation();\n          this.resizeEnd.emit({\n            left: this.left,\n            top: this.top\n          });\n        }\n      });\n      fromEvent(this.document, 'mousemove').pipe(takeUntil(this.destroy$)).subscribe(e => {\n        if (!this.isMoving) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (this.mode === ResizeModeEnums.Vertical) {\n          this.left = this.getResizeLeft(e);\n          this.leftChange.emit(this.left);\n        } else {\n          this.top = this.getResizeTop(e);\n          this.topChange.emit(this.top);\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  ResizeComponent.ɵfac = function ResizeComponent_Factory(t) {\n    return new (t || ResizeComponent)(i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  ResizeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResizeComponent,\n    selectors: [[\"flink-resize\"]],\n    viewQuery: function ResizeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n      }\n    },\n    inputs: {\n      left: \"left\",\n      top: \"top\",\n      baseElement: \"baseElement\",\n      resizeMin: \"resizeMin\",\n      mode: \"mode\"\n    },\n    outputs: {\n      leftChange: \"leftChange\",\n      topChange: \"topChange\",\n      resizeEnd: \"resizeEnd\"\n    },\n    decls: 4,\n    vars: 12,\n    consts: [[1, \"resize\", 3, \"mousedown\"], [\"trigger\", \"\"], [1, \"resize-handle\"], [\"nz-icon\", \"\", \"nzType\", \"ellipsis\"]],\n    template: function ResizeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"mousedown\", function ResizeComponent_Template_div_mousedown_0_listener() {\n          return ctx.startMove();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"left\", ctx.mode === \"vertical\" ? ctx.left : 0, \"px\")(\"top\", ctx.mode === \"vertical\" ? 0 : ctx.top, \"px\");\n        i0.ɵɵclassProp(\"vertical\", ctx.mode === \"vertical\")(\"horizontal\", ctx.mode === \"horizontal\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"horizontal\", ctx.mode === \"horizontal\")(\"vertical\", ctx.mode === \"vertical\");\n      }\n    },\n    directives: [i1.ɵNzTransitionPatchDirective, i2.NzIconDirective],\n    styles: [\".resize[_ngcontent-%COMP%]{position:absolute;top:0;left:0;z-index:10;background:transparent}.resize.vertical[_ngcontent-%COMP%]{border-left:1px solid #f0f0f0;width:7px;height:100%;cursor:col-resize}.resize.horizontal[_ngcontent-%COMP%]{width:100%;height:7px;transform:translateY(-3.5px);cursor:row-resize}.resize-handle[_ngcontent-%COMP%]{pointer-events:none;position:relative;left:50%;margin-right:15px;width:30px;height:10px;line-height:10px;text-align:center;background:#fbfbfb;top:-2px;border:1px solid #e8e8e8;border-radius:2px}.resize-handle.vertical[_ngcontent-%COMP%]{transform:rotate(90deg);transform-origin:left top;top:50%;margin-top:-15px;left:auto;margin-right:auto;margin-left:5px}.resize-handle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{position:relative;top:-2px}\"],\n    changeDetection: 0\n  });\n  return ResizeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}