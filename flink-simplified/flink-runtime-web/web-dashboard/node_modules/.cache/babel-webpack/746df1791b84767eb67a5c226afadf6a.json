{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/card\";\nimport * as i4 from \"ng-zorro-antd/grid\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"ng-zorro-antd/icon\";\nimport * as i7 from \"ng-zorro-antd/tooltip\";\nimport * as i8 from \"ng-zorro-antd/progress\";\nimport * as i9 from \"share/pipes/humanize-bytes.pipe\";\n\nconst _c0 = function () {\n  return [\"220px\", \"200px\", \"200px\", null];\n};\n\nfunction TaskManagerMetricsComponent_ng_container_0_nz_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-table\", 12);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\", 13);\n    i0.ɵɵtext(4, \"Flink Memory Model\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 14);\n    i0.ɵɵtext(6, \"Effective Configuration \");\n    i0.ɵɵelement(7, \"i\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 14);\n    i0.ɵɵtext(9, \"Metric\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵelementStart(12, \"td\", 16);\n    i0.ɵɵelement(13, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 14);\n    i0.ɵɵtext(15, \"Framework Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 18);\n    i0.ɵɵelement(20, \"nz-progress\", 19);\n    i0.ɵɵpipe(21, \"number\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"humanizeBytes\");\n    i0.ɵɵpipe(24, \"humanizeBytes\");\n    i0.ɵɵelement(25, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"tr\");\n    i0.ɵɵelementStart(27, \"td\", 14);\n    i0.ɵɵtext(28, \"Task Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵelementStart(33, \"td\", 14);\n    i0.ɵɵtext(34, \"Managed Memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"td\");\n    i0.ɵɵtext(36);\n    i0.ɵɵpipe(37, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"td\");\n    i0.ɵɵelement(39, \"nz-progress\", 19);\n    i0.ɵɵpipe(40, \"number\");\n    i0.ɵɵtext(41);\n    i0.ɵɵpipe(42, \"humanizeBytes\");\n    i0.ɵɵpipe(43, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"tr\");\n    i0.ɵɵelementStart(45, \"td\", 14);\n    i0.ɵɵtext(46, \"Framework Off-Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"td\");\n    i0.ɵɵtext(48);\n    i0.ɵɵpipe(49, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"td\", 18);\n    i0.ɵɵelement(51, \"i\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"tr\");\n    i0.ɵɵelementStart(53, \"td\", 14);\n    i0.ɵɵtext(54, \"Task Off-Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"td\");\n    i0.ɵɵtext(56);\n    i0.ɵɵpipe(57, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"tr\");\n    i0.ɵɵelementStart(59, \"td\", 14);\n    i0.ɵɵtext(60, \"Network\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(61, \"td\");\n    i0.ɵɵtext(62);\n    i0.ɵɵpipe(63, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"td\");\n    i0.ɵɵelement(65, \"nz-progress\", 19);\n    i0.ɵɵpipe(66, \"number\");\n    i0.ɵɵtext(67);\n    i0.ɵɵpipe(68, \"humanizeBytes\");\n    i0.ɵɵpipe(69, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(70, \"tr\");\n    i0.ɵɵelementStart(71, \"td\", 14);\n    i0.ɵɵtext(72, \"JVM Metaspace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(73, \"td\");\n    i0.ɵɵtext(74);\n    i0.ɵɵpipe(75, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(76, \"td\");\n    i0.ɵɵelement(77, \"nz-progress\", 19);\n    i0.ɵɵpipe(78, \"number\");\n    i0.ɵɵtext(79);\n    i0.ɵɵpipe(80, \"humanizeBytes\");\n    i0.ɵɵpipe(81, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"tr\");\n    i0.ɵɵelementStart(83, \"td\", 14);\n    i0.ɵɵtext(84, \"JVM Overhead\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(85, \"td\");\n    i0.ɵɵtext(86);\n    i0.ɵɵpipe(87, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(88, \"td\");\n    i0.ɵɵelement(89, \"i\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzWidthConfig\", i0.ɵɵpureFunction0(65, _c0));\n    i0.ɵɵadvance(17);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 21, ctx_r1.taskManagerDetail.memoryConfiguration.frameworkHeap));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(21, 23, ctx_r1.metrics[\"Status.JVM.Memory.Heap.Used\"] / ctx_r1.metrics[\"Status.JVM.Memory.Heap.Max\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(23, 26, ctx_r1.metrics[\"Status.JVM.Memory.Heap.Used\"]), \" / \", i0.ɵɵpipeBind1(24, 28, ctx_r1.metrics[\"Status.JVM.Memory.Heap.Max\"]), \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 30, ctx_r1.taskManagerDetail.memoryConfiguration.taskHeap));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(37, 32, ctx_r1.taskManagerDetail.memoryConfiguration.managedMemory));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(40, 34, ctx_r1.metrics[\"Status.Flink.Memory.Managed.Used\"] / ctx_r1.metrics[\"Status.Flink.Memory.Managed.Total\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(42, 37, ctx_r1.metrics[\"Status.Flink.Memory.Managed.Used\"]), \" / \", i0.ɵɵpipeBind1(43, 39, ctx_r1.metrics[\"Status.Flink.Memory.Managed.Total\"]), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(49, 41, ctx_r1.taskManagerDetail.memoryConfiguration.frameworkOffHeap));\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(57, 43, ctx_r1.taskManagerDetail.memoryConfiguration.taskOffHeap));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(63, 45, ctx_r1.taskManagerDetail.memoryConfiguration.networkMemory));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(66, 47, ctx_r1.metrics[\"Status.Shuffle.Netty.UsedMemory\"] / ctx_r1.metrics[\"Status.Shuffle.Netty.TotalMemory\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(68, 50, ctx_r1.metrics[\"Status.Shuffle.Netty.UsedMemory\"]), \" / \", i0.ɵɵpipeBind1(69, 52, ctx_r1.metrics[\"Status.Shuffle.Netty.TotalMemory\"]), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(75, 54, ctx_r1.taskManagerDetail.memoryConfiguration.jvmMetaspace));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"nzPercent\", +i0.ɵɵpipeBind2(78, 56, ctx_r1.metrics[\"Status.JVM.Memory.Metaspace.Used\"] / ctx_r1.metrics[\"Status.JVM.Memory.Metaspace.Max\"] * 100, \"1.0-2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(80, 59, ctx_r1.metrics[\"Status.JVM.Memory.Metaspace.Used\"]), \" / \", i0.ɵɵpipeBind1(81, 61, ctx_r1.metrics[\"Status.JVM.Memory.Metaspace.Max\"]), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(87, 63, ctx_r1.taskManagerDetail.memoryConfiguration.jvmOverhead));\n  }\n}\n\nfunction TaskManagerMetricsComponent_ng_container_0_tr_122_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const g_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(g_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 3, g_r3.count));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 5, g_r3.time));\n  }\n}\n\nconst _c1 = function () {\n  return {\n    padding: \"0px\"\n  };\n};\n\nfunction TaskManagerMetricsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"nz-card\", 1);\n    i0.ɵɵtemplate(2, TaskManagerMetricsComponent_ng_container_0_nz_table_2_Template, 90, 66, \"nz-table\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-card\", 3);\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵelementStart(6, \"nz-card\", 6);\n    i0.ɵɵelementStart(7, \"nz-table\", 7);\n    i0.ɵɵelementStart(8, \"thead\");\n    i0.ɵɵelementStart(9, \"tr\");\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Committed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Maximum\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"tbody\");\n    i0.ɵɵelementStart(19, \"tr\");\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵelementStart(21, \"strong\");\n    i0.ɵɵtext(22, \"Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"td\");\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"tr\");\n    i0.ɵɵelementStart(33, \"td\");\n    i0.ɵɵelementStart(34, \"strong\");\n    i0.ɵɵtext(35, \"Non-Heap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"td\");\n    i0.ɵɵtext(37);\n    i0.ɵɵpipe(38, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"td\");\n    i0.ɵɵtext(40);\n    i0.ɵɵpipe(41, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"td\");\n    i0.ɵɵtext(43);\n    i0.ɵɵpipe(44, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"div\", 5);\n    i0.ɵɵelementStart(46, \"nz-card\", 8);\n    i0.ɵɵelementStart(47, \"nz-table\", 7);\n    i0.ɵɵelementStart(48, \"thead\");\n    i0.ɵɵelementStart(49, \"tr\");\n    i0.ɵɵelementStart(50, \"th\");\n    i0.ɵɵtext(51, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"th\");\n    i0.ɵɵtext(53, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"th\");\n    i0.ɵɵtext(55, \"Used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"th\");\n    i0.ɵɵtext(57, \"Capacity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"tbody\");\n    i0.ɵɵelementStart(59, \"tr\");\n    i0.ɵɵelementStart(60, \"td\");\n    i0.ɵɵelementStart(61, \"strong\");\n    i0.ɵɵtext(62, \"Direct\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"td\");\n    i0.ɵɵtext(64);\n    i0.ɵɵpipe(65, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(66, \"td\");\n    i0.ɵɵtext(67);\n    i0.ɵɵpipe(68, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"td\");\n    i0.ɵɵtext(70);\n    i0.ɵɵpipe(71, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(72, \"tr\");\n    i0.ɵɵelementStart(73, \"td\");\n    i0.ɵɵelementStart(74, \"strong\");\n    i0.ɵɵtext(75, \"Mapped\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(76, \"td\");\n    i0.ɵɵtext(77);\n    i0.ɵɵpipe(78, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(79, \"td\");\n    i0.ɵɵtext(80);\n    i0.ɵɵpipe(81, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"td\");\n    i0.ɵɵtext(83);\n    i0.ɵɵpipe(84, \"humanizeBytes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(85, \"div\", 4);\n    i0.ɵɵelementStart(86, \"div\", 5);\n    i0.ɵɵelementStart(87, \"nz-card\", 9);\n    i0.ɵɵelementStart(88, \"nz-table\", 7);\n    i0.ɵɵelementStart(89, \"thead\");\n    i0.ɵɵelementStart(90, \"tr\");\n    i0.ɵɵelementStart(91, \"th\");\n    i0.ɵɵtext(92, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(93, \"th\");\n    i0.ɵɵtext(94, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(95, \"tbody\");\n    i0.ɵɵelementStart(96, \"tr\");\n    i0.ɵɵelementStart(97, \"td\");\n    i0.ɵɵelementStart(98, \"strong\");\n    i0.ɵɵtext(99, \"Available\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(100, \"td\");\n    i0.ɵɵtext(101);\n    i0.ɵɵpipe(102, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(103, \"tr\");\n    i0.ɵɵelementStart(104, \"td\");\n    i0.ɵɵelementStart(105, \"strong\");\n    i0.ɵɵtext(106, \"Total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(107, \"td\");\n    i0.ɵɵtext(108);\n    i0.ɵɵpipe(109, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(110, \"div\", 5);\n    i0.ɵɵelementStart(111, \"nz-card\", 10);\n    i0.ɵɵelementStart(112, \"nz-table\", 7);\n    i0.ɵɵelementStart(113, \"thead\");\n    i0.ɵɵelementStart(114, \"tr\");\n    i0.ɵɵelementStart(115, \"th\");\n    i0.ɵɵtext(116, \"Collector\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(117, \"th\");\n    i0.ɵɵtext(118, \"Count\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(119, \"th\");\n    i0.ɵɵtext(120, \"Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(121, \"tbody\");\n    i0.ɵɵtemplate(122, TaskManagerMetricsComponent_ng_container_0_tr_122_Template, 10, 7, \"tr\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.metrics);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzGutter\", 16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzSpan\", 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzBodyStyle\", i0.ɵɵpureFunction0(66, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n    i0.ɵɵadvance(17);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 38, ctx_r0.taskManagerDetail.metrics.heapCommitted));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 40, ctx_r0.taskManagerDetail.metrics.heapUsed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 42, ctx_r0.taskManagerDetail.metrics.heapMax));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(38, 44, ctx_r0.taskManagerDetail.metrics.nonHeapCommitted));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(41, 46, ctx_r0.taskManagerDetail.metrics.nonHeapUsed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(44, 48, ctx_r0.taskManagerDetail.metrics.nonHeapMax));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzSpan\", 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzBodyStyle\", i0.ɵɵpureFunction0(67, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n    i0.ɵɵadvance(17);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(65, 50, ctx_r0.taskManagerDetail.metrics.directCount));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(68, 52, ctx_r0.taskManagerDetail.metrics.directUsed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(71, 54, ctx_r0.taskManagerDetail.metrics.directMax));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(78, 56, ctx_r0.taskManagerDetail.metrics.mappedCount));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(81, 58, ctx_r0.taskManagerDetail.metrics.mappedUsed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(84, 60, ctx_r0.taskManagerDetail.metrics.mappedMax));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzGutter\", 16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzSpan\", 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzBodyStyle\", i0.ɵɵpureFunction0(68, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n    i0.ɵɵadvance(13);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(102, 62, ctx_r0.taskManagerDetail.metrics.memorySegmentsAvailable));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(109, 64, ctx_r0.taskManagerDetail.metrics.memorySegmentsTotal));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzSpan\", 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzBodyStyle\", i0.ɵɵpureFunction0(69, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzTemplateMode\", true)(\"nzShowPagination\", false)(\"nzSize\", \"small\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.taskManagerDetail.metrics.garbageCollectors);\n  }\n}\n\nexport let TaskManagerMetricsComponent = /*#__PURE__*/(() => {\n  class TaskManagerMetricsComponent {\n    constructor(taskManagerService, cdr) {\n      this.taskManagerService = taskManagerService;\n      this.cdr = cdr;\n      this.destroy$ = new Subject();\n      this.metrics = {};\n    }\n\n    ngOnInit() {\n      this.taskManagerService.taskManagerDetail$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n        this.taskManagerDetail = data;\n        this.taskManagerService.getMetrics(data.id, ['Status.JVM.Memory.Heap.Used', 'Status.JVM.Memory.Heap.Max', 'Status.Shuffle.Netty.UsedMemory', 'Status.Shuffle.Netty.TotalMemory', 'Status.Flink.Memory.Managed.Used', 'Status.Flink.Memory.Managed.Total', 'Status.JVM.Memory.Metaspace.Used', 'Status.JVM.Memory.Metaspace.Max']).subscribe(metrics => {\n          this.metrics = metrics;\n          this.cdr.markForCheck();\n        });\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  TaskManagerMetricsComponent.ɵfac = function TaskManagerMetricsComponent_Factory(t) {\n    return new (t || TaskManagerMetricsComponent)(i0.ɵɵdirectiveInject(i1.TaskManagerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TaskManagerMetricsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskManagerMetricsComponent,\n    selectors: [[\"flink-task-manager-metrics\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"nzTitle\", \"Memory\"], [\"class\", \"flink-memory-model\", \"nzTemplateMode\", \"\", \"nzSize\", \"small\", 3, \"nzWidthConfig\", 4, \"ngIf\"], [\"nzTitle\", \"Advanced\"], [\"nz-row\", \"\", 3, \"nzGutter\"], [\"nz-col\", \"\", 3, \"nzSpan\"], [\"nzType\", \"inner\", \"nzTitle\", \"JVM (Heap/Non-Heap) Memory\", 3, \"nzBodyStyle\"], [1, \"no-border\", 3, \"nzTemplateMode\", \"nzShowPagination\", \"nzSize\"], [\"nzType\", \"inner\", \"nzTitle\", \"Outside JVM Memory\", 3, \"nzBodyStyle\"], [\"nzType\", \"inner\", \"nzTitle\", \"Netty Shuffle Buffers\", 3, \"nzBodyStyle\"], [\"nzType\", \"inner\", \"nzTitle\", \"Garbage Collection\", 3, \"nzBodyStyle\"], [4, \"ngFor\", \"ngForOf\"], [\"nzTemplateMode\", \"\", \"nzSize\", \"small\", 1, \"flink-memory-model\", 3, \"nzWidthConfig\"], [\"colspan\", \"2\", 1, \"table-header\"], [1, \"table-header\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"This column shows the values that are actually used by Flink. These may differ from the configured values; Flink may adjust them to fit the actual setup, and automatically derives values that were not explicitly configured.\", \"nzType\", \"info-circle\", 1, \"header-icon\"], [\"rowspan\", \"8\", 1, \"table-header\"], [\"src\", \"assets/images/memory-model.svg\"], [\"rowspan\", \"2\"], [\"nzSize\", \"small\", \"nzStrokeLinecap\", \"square\", \"nzStatus\", \"normal\", 3, \"nzPercent\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"The maximum heap displayed might differ from the configured values depending on the used GC algorithm for this process.\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nz-tooltip\", \"\", \"nzTooltipTitle\", \"Metrics related to this configuration parameter cannot be monitored. Flink does not have full control over these memory pools.\", \"nzType\", \"info-circle\"]],\n    template: function TaskManagerMetricsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TaskManagerMetricsComponent_ng_container_0_Template, 123, 70, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.taskManagerDetail);\n      }\n    },\n    directives: [i2.NgIf, i3.NzCardComponent, i4.NzRowDirective, i4.NzColDirective, i5.NzTableComponent, i5.NzTheadComponent, i5.NzTrDirective, i5.NzTableCellDirective, i5.NzThMeasureDirective, i5.NzTbodyComponent, i2.NgForOf, i6.NzIconDirective, i7.NzTooltipDirective, i8.NzProgressComponent],\n    pipes: [i9.HumanizeBytesPipe, i2.DecimalPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;margin-bottom:16px}.header-icon[_ngcontent-%COMP%]{position:relative;top:1px}nz-card[_ngcontent-%COMP%]:first-child{margin-bottom:16px}.flink-memory-model[_ngcontent-%COMP%]     table{border-collapse:collapse}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small{border:none}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small .ant-table-body{margin:0;overflow:hidden!important}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small tr:hover td, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small tr:hover th{background:transparent}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small td, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small th{border-collapse:collapse;border:1px solid #f0f0f0!important}.flink-memory-model[_ngcontent-%COMP%]     .ant-table-small td.table-header, .flink-memory-model[_ngcontent-%COMP%]     .ant-table-small th.table-header{background:#fafafa!important;color:rgba(0,0,0,.85);font-weight:500}nz-progress[_ngcontent-%COMP%]{display:block;width:90%}nz-progress[_ngcontent-%COMP%]     .ant-progress-inner{border-radius:0!important}\"],\n    changeDetection: 0\n  });\n  return TaskManagerMetricsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}