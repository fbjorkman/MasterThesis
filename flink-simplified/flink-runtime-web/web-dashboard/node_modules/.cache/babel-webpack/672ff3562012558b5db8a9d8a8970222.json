{"ast":null,"code":"import { NzNotificationService } from 'ng-zorro-antd/notification';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { StatusService } from 'services';\nimport * as i0 from \"@angular/core\";\nexport let AppInterceptor = /*#__PURE__*/(() => {\n  class AppInterceptor {\n    constructor(injector) {\n      this.injector = injector;\n    }\n\n    intercept(req, next) {\n      /**\n       * Error response from below url should be ignored\n       */\n      const ignoreErrorUrlEndsList = ['checkpoints/config', 'checkpoints'];\n      const ignoreErrorMessage = ['File not found.'];\n      return next.handle(req).pipe(catchError(res => {\n        const errorMessage = res && res.error && res.error.errors && res.error.errors[0];\n\n        if (errorMessage && ignoreErrorUrlEndsList.every(url => !res.url.endsWith(url)) && ignoreErrorMessage.every(message => errorMessage !== message)) {\n          this.injector.get(StatusService).listOfErrorMessage.push(errorMessage);\n          this.injector.get(NzNotificationService).info('Server Response Message:', errorMessage);\n        }\n\n        return throwError(res);\n      }));\n    }\n\n  }\n\n  AppInterceptor.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)(i0.ɵɵinject(i0.Injector));\n  };\n\n  AppInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n  return AppInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}