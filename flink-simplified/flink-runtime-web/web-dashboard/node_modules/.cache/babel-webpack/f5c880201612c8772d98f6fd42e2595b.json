{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, flatMap, takeUntil } from 'rxjs/operators';\nimport { JobChartComponent } from 'share/customize/job-chart/job-chart.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/select\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"share/customize/job-chart/job-chart.component\";\n\nfunction JobOverviewDrawerChartComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"No Available Metric\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction JobOverviewDrawerChartComponent_ng_template_2_nz_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-option\", 7);\n  }\n\n  if (rf & 2) {\n    const name_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzLabel\", name_r5)(\"nzValue\", name_r5);\n  }\n}\n\nfunction JobOverviewDrawerChartComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtext(0, \" Add Metric: \");\n    i0.ɵɵelementStart(1, \"nz-select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function JobOverviewDrawerChartComponent_ng_template_2_Template_nz_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateMetric($event);\n    });\n    i0.ɵɵtemplate(2, JobOverviewDrawerChartComponent_ng_template_2_nz_option_2_Template, 1, 2, \"nz-option\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", null)(\"nzPlaceHolder\", \"Select Metric Name\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.listOfUnselectedMetric);\n  }\n}\n\nfunction JobOverviewDrawerChartComponent_flink_job_chart_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"flink-job-chart\", 8);\n    i0.ɵɵlistener(\"closed\", function JobOverviewDrawerChartComponent_flink_job_chart_5_Template_flink_job_chart_closed_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.closeMetric($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const metric_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"title\", metric_r8);\n  }\n}\n\nexport let JobOverviewDrawerChartComponent = /*#__PURE__*/(() => {\n  class JobOverviewDrawerChartComponent {\n    constructor(metricsService, jobService, cdr) {\n      this.metricsService = metricsService;\n      this.jobService = jobService;\n      this.cdr = cdr;\n      this.destroy$ = new Subject();\n      this.data = [];\n      this.listOfMetricName = [];\n      this.listOfSelectedMetric = [];\n      this.listOfUnselectedMetric = [];\n    }\n\n    loadMetricList(jobId, vertexId) {\n      this.cacheMetricKey = `${jobId}/${vertexId}`;\n      this.metricsService.getAllAvailableMetrics(jobId, vertexId).subscribe(data => {\n        this.listOfMetricName = data.map(item => item.id);\n        this.listOfSelectedMetric = this.jobService.metricsCacheMap.get(this.cacheMetricKey) || [];\n        this.updateUnselectedMetricList();\n        this.cdr.markForCheck();\n      });\n    }\n\n    updateMetric(metric) {\n      this.listOfSelectedMetric = [...this.listOfSelectedMetric, metric];\n      this.jobService.metricsCacheMap.set(this.cacheMetricKey, this.listOfSelectedMetric);\n      this.updateUnselectedMetricList();\n    }\n\n    closeMetric(metric) {\n      this.listOfSelectedMetric = this.listOfSelectedMetric.filter(item => item !== metric);\n      this.jobService.metricsCacheMap.set(this.cacheMetricKey, this.listOfSelectedMetric);\n      this.updateUnselectedMetricList();\n    }\n\n    updateUnselectedMetricList() {\n      this.listOfUnselectedMetric = this.listOfMetricName.filter(item => this.listOfSelectedMetric.indexOf(item) === -1);\n    }\n\n    ngOnInit() {\n      this.jobService.jobWithVertex$.pipe(takeUntil(this.destroy$), distinctUntilChanged((x, y) => x.vertex.id === y.vertex.id)).subscribe(data => {\n        this.loadMetricList(data.job.jid, data.vertex.id);\n      });\n      this.jobService.jobWithVertex$.pipe(takeUntil(this.destroy$), filter(() => this.listOfSelectedMetric.length > 0), flatMap(data => this.metricsService.getMetrics(data.job.jid, data.vertex.id, this.listOfSelectedMetric))).subscribe(res => {\n        if (this.listOfJobChartComponent && this.listOfJobChartComponent.length) {\n          this.listOfJobChartComponent.forEach(chart => {\n            chart.refresh(res);\n          });\n        }\n\n        this.cdr.markForCheck();\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  JobOverviewDrawerChartComponent.ɵfac = function JobOverviewDrawerChartComponent_Factory(t) {\n    return new (t || JobOverviewDrawerChartComponent)(i0.ɵɵdirectiveInject(i1.MetricsService), i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  JobOverviewDrawerChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobOverviewDrawerChartComponent,\n    selectors: [[\"flink-job-overview-drawer-chart\"]],\n    viewQuery: function JobOverviewDrawerChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(JobChartComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfJobChartComponent = _t);\n      }\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"metric-selector\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [1, \"metric-area\"], [3, \"title\", \"closed\", 4, \"ngFor\", \"ngForOf\"], [\"nzSize\", \"small\", \"nzShowSearch\", \"\", 3, \"ngModel\", \"nzPlaceHolder\", \"ngModelChange\"], [3, \"nzLabel\", \"nzValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzLabel\", \"nzValue\"], [3, \"title\", \"closed\"]],\n    template: function JobOverviewDrawerChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, JobOverviewDrawerChartComponent_span_1_Template, 2, 0, \"span\", 1);\n        i0.ɵɵtemplate(2, JobOverviewDrawerChartComponent_ng_template_2_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, JobOverviewDrawerChartComponent_flink_job_chart_5_Template, 1, 1, \"flink-job-chart\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.listOfMetricName.length === 0)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfSelectedMetric);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i3.NzSelectComponent, i4.NgControlStatus, i4.NgModel, i3.NzOptionComponent, i5.JobChartComponent],\n    styles: [\"nz-select[_ngcontent-%COMP%]{width:300px}.metric-selector[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]{padding:16px;display:block}\"],\n    changeDetection: 0\n  });\n  return JobOverviewDrawerChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}