{"version":3,"file":"icon.service.d.ts","sources":["icon.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { HttpBackend } from '@angular/common/http';\nimport { InjectionToken, OnDestroy, RendererFactory2 } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nexport interface NzIconfontOption {\n    scriptUrl: string;\n}\nexport declare const NZ_ICONS: InjectionToken<unknown>;\nexport declare const NZ_ICON_DEFAULT_TWOTONE_COLOR: InjectionToken<unknown>;\nexport declare const DEFAULT_TWOTONE_COLOR = \"#1890ff\";\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nexport declare class NzIconService extends IconService implements OnDestroy {\n    protected nzConfigService: NzConfigService;\n    configUpdated$: Subject<void>;\n    private iconfontCache;\n    private subscription;\n    ngOnDestroy(): void;\n    normalizeSvgElement(svg: SVGElement): void;\n    fetchFromIconfont(opt: NzIconfontOption): void;\n    createIconfontIcon(type: string): SVGElement;\n    constructor(rendererFactory: RendererFactory2, sanitizer: DomSanitizer, nzConfigService: NzConfigService, handler: HttpBackend, _document: NzSafeAny, icons?: IconDefinition[]);\n    private onConfigChange;\n    private configDefaultTheme;\n    private configDefaultTwotoneColor;\n    private getConfig;\n}\nexport declare const NZ_ICONS_PATCH: InjectionToken<unknown>;\nexport declare class NzIconPatchService {\n    private extraIcons;\n    private rootIconService;\n    patched: boolean;\n    constructor(extraIcons: IconDefinition[], rootIconService: NzIconService);\n    doPatch(): void;\n}\n"]}