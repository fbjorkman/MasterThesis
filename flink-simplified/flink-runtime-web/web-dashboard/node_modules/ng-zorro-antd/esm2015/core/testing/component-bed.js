/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CommonModule } from '@angular/common';
import { NO_ERRORS_SCHEMA } from '@angular/core';
import { TestBed } from '@angular/core/testing';
import { NoopAnimationsModule } from '@angular/platform-browser/animations';
export function createComponentBed(component, options = {
    providers: [],
    declarations: [],
    imports: []
}) {
    const { imports, declarations, providers } = options;
    const config = {
        imports: [NoopAnimationsModule, CommonModule, ...(imports || [])],
        declarations: [component, ...(declarations || [])],
        schemas: [NO_ERRORS_SCHEMA],
        providers: providers || []
    };
    const bed = TestBed.configureTestingModule(config);
    const fixture = TestBed.createComponent(component);
    fixture.detectChanges();
    return {
        bed,
        fixture,
        nativeElement: fixture.nativeElement,
        debugElement: fixture.debugElement,
        component: fixture.componentInstance
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWJlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvY29yZS90ZXN0aW5nL2NvbXBvbmVudC1iZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBMEIsZ0JBQWdCLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFvQixPQUFPLEVBQWlCLE1BQU0sdUJBQXVCLENBQUM7QUFDakYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFVNUUsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxTQUFrQixFQUNsQixVQUErQjtJQUM3QixTQUFTLEVBQUUsRUFBRTtJQUNiLFlBQVksRUFBRSxFQUFFO0lBQ2hCLE9BQU8sRUFBRSxFQUFFO0NBQ1o7SUFFRCxNQUFNLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsR0FBRyxPQUFPLENBQUM7SUFDckQsTUFBTSxNQUFNLEdBQUc7UUFDYixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxZQUFZLEVBQUUsR0FBRyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNqRSxZQUFZLEVBQUUsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNsRCxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMzQixTQUFTLEVBQUUsU0FBUyxJQUFJLEVBQUU7S0FDM0IsQ0FBQztJQUNGLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFJLFNBQVMsQ0FBQyxDQUFDO0lBQ3RELE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN4QixPQUFPO1FBQ0wsR0FBRztRQUNILE9BQU87UUFDUCxhQUFhLEVBQUUsT0FBTyxDQUFDLGFBQWE7UUFDcEMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxZQUFZO1FBQ2xDLFNBQVMsRUFBRSxPQUFPLENBQUMsaUJBQWlCO0tBQ3JDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERlYnVnRWxlbWVudCwgTmdNb2R1bGUsIE5PX0VSUk9SU19TQ0hFTUEsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudEZpeHR1cmUsIFRlc3RCZWQsIFRlc3RCZWRTdGF0aWMgfSBmcm9tICdAYW5ndWxhci9jb3JlL3Rlc3RpbmcnO1xuaW1wb3J0IHsgTm9vcEFuaW1hdGlvbnNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyL2FuaW1hdGlvbnMnO1xuXG50eXBlIENvbXBvbmVudEJlZE9wdGlvbnMgPSBQaWNrPE5nTW9kdWxlLCAncHJvdmlkZXJzJyB8ICdkZWNsYXJhdGlvbnMnIHwgJ2ltcG9ydHMnPjtcbmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50QmVkPFQ+IHtcbiAgYmVkOiBUZXN0QmVkU3RhdGljO1xuICBmaXh0dXJlOiBDb21wb25lbnRGaXh0dXJlPFQ+O1xuICBuYXRpdmVFbGVtZW50OiBIVE1MRWxlbWVudDtcbiAgZGVidWdFbGVtZW50OiBEZWJ1Z0VsZW1lbnQ7XG4gIGNvbXBvbmVudDogVDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wb25lbnRCZWQ8VD4oXG4gIGNvbXBvbmVudDogVHlwZTxUPixcbiAgb3B0aW9uczogQ29tcG9uZW50QmVkT3B0aW9ucyA9IHtcbiAgICBwcm92aWRlcnM6IFtdLFxuICAgIGRlY2xhcmF0aW9uczogW10sXG4gICAgaW1wb3J0czogW11cbiAgfVxuKTogQ29tcG9uZW50QmVkPFQ+IHtcbiAgY29uc3QgeyBpbXBvcnRzLCBkZWNsYXJhdGlvbnMsIHByb3ZpZGVycyB9ID0gb3B0aW9ucztcbiAgY29uc3QgY29uZmlnID0ge1xuICAgIGltcG9ydHM6IFtOb29wQW5pbWF0aW9uc01vZHVsZSwgQ29tbW9uTW9kdWxlLCAuLi4oaW1wb3J0cyB8fCBbXSldLFxuICAgIGRlY2xhcmF0aW9uczogW2NvbXBvbmVudCwgLi4uKGRlY2xhcmF0aW9ucyB8fCBbXSldLFxuICAgIHNjaGVtYXM6IFtOT19FUlJPUlNfU0NIRU1BXSxcbiAgICBwcm92aWRlcnM6IHByb3ZpZGVycyB8fCBbXVxuICB9O1xuICBjb25zdCBiZWQgPSBUZXN0QmVkLmNvbmZpZ3VyZVRlc3RpbmdNb2R1bGUoY29uZmlnKTtcbiAgY29uc3QgZml4dHVyZSA9IFRlc3RCZWQuY3JlYXRlQ29tcG9uZW50PFQ+KGNvbXBvbmVudCk7XG4gIGZpeHR1cmUuZGV0ZWN0Q2hhbmdlcygpO1xuICByZXR1cm4ge1xuICAgIGJlZCxcbiAgICBmaXh0dXJlLFxuICAgIG5hdGl2ZUVsZW1lbnQ6IGZpeHR1cmUubmF0aXZlRWxlbWVudCxcbiAgICBkZWJ1Z0VsZW1lbnQ6IGZpeHR1cmUuZGVidWdFbGVtZW50LFxuICAgIGNvbXBvbmVudDogZml4dHVyZS5jb21wb25lbnRJbnN0YW5jZVxuICB9O1xufVxuIl19