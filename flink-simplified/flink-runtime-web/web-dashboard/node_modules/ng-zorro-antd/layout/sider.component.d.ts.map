{"version":3,"file":"sider.component.d.ts","sources":["sider.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzBreakpointKey, NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { NzMenuDirective } from 'ng-zorro-antd/menu';\nexport declare class NzSiderComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit {\n    private platform;\n    private cdr;\n    private breakpointService;\n    private elementRef;\n    static ngAcceptInputType_nzReverseArrow: BooleanInput;\n    static ngAcceptInputType_nzCollapsible: BooleanInput;\n    static ngAcceptInputType_nzCollapsed: BooleanInput;\n    private destroy$;\n    nzMenuDirective: NzMenuDirective | null;\n    readonly nzCollapsedChange: EventEmitter<any>;\n    nzWidth: string | number;\n    nzTheme: 'light' | 'dark';\n    nzCollapsedWidth: number;\n    nzBreakpoint: NzBreakpointKey | null;\n    nzZeroTrigger: TemplateRef<void> | null;\n    nzTrigger: TemplateRef<void> | undefined | null;\n    nzReverseArrow: boolean;\n    nzCollapsible: boolean;\n    nzCollapsed: boolean;\n    matchBreakPoint: boolean;\n    flexSetting: string | null;\n    widthSetting: string | null;\n    updateStyleMap(): void;\n    updateMenuInlineCollapsed(): void;\n    setCollapsed(collapsed: boolean): void;\n    constructor(platform: Platform, cdr: ChangeDetectorRef, breakpointService: NzBreakpointService, elementRef: ElementRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}