{"version":3,"file":"base.d.ts","sources":["base.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { AnimationEvent } from '@angular/animations';\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { NzMessageData, NzMessageDataOptions } from './typings';\nexport declare abstract class NzMNService {\n    protected nzSingletonService: NzSingletonService;\n    protected overlay: Overlay;\n    private injector;\n    protected abstract componentPrefix: string;\n    protected container?: NzMNContainerComponent;\n    constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector);\n    remove(id?: string): void;\n    protected getInstanceId(): string;\n    protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T;\n}\nexport declare abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n    protected cdr: ChangeDetectorRef;\n    protected nzConfigService: NzConfigService;\n    config?: Required<MessageConfig>;\n    instances: Array<Required<NzMessageData>>;\n    protected readonly destroy$: Subject<void>;\n    constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    create(data: NzMessageData): Required<NzMessageData>;\n    remove(id: string, userAction?: boolean): void;\n    removeAll(): void;\n    protected onCreate(instance: NzMessageData): Required<NzMessageData>;\n    protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void;\n    protected readyInstances(): void;\n    protected abstract updateConfig(): void;\n    protected abstract subscribeConfigChange(): void;\n    protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions;\n}\nexport declare abstract class NzMNComponent implements OnInit, OnDestroy {\n    protected cdr: ChangeDetectorRef;\n    instance: Required<NzMessageData>;\n    index?: number;\n    readonly destroyed: EventEmitter<{\n        id: string;\n        userAction: boolean;\n    }>;\n    readonly animationStateChanged: Subject<AnimationEvent>;\n    protected options: Required<NzMessageDataOptions>;\n    protected autoClose?: boolean;\n    protected closeTimer?: number;\n    protected userAction: boolean;\n    protected eraseTimer: number | null;\n    protected eraseTimingStart?: number;\n    protected eraseTTL: number;\n    protected constructor(cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onEnter(): void;\n    onLeave(): void;\n    protected destroy(userAction?: boolean): void;\n    private initErase;\n    private updateTTL;\n    private startEraseTimeout;\n    private clearEraseTimeout;\n}\n"]}