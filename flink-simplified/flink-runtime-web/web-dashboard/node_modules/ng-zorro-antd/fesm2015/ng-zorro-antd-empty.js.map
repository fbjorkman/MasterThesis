{"version":3,"file":"ng-zorro-antd-empty.js","sources":["../../components/empty/config.ts","../../components/empty/embed-empty.component.ts","../../components/empty/empty.component.ts","../../components/empty/partial/default.ts","../../components/empty/partial/simple.ts","../../components/empty/empty.module.ts","../../components/empty/public-api.ts","../../components/empty/ng-zorro-antd-empty.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken, TemplateRef, Type } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type NzEmptySize = 'normal' | 'small' | '';\n\nexport type NzEmptyCustomContent = Type<NzSafeAny> | TemplateRef<NzSafeAny> | string;\n\nexport const NZ_EMPTY_COMPONENT_NAME = new InjectionToken<string>('nz-empty-component-name');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ComponentPortal, Portal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzEmptyCustomContent, NzEmptySize, NZ_EMPTY_COMPONENT_NAME } from './config';\n\nfunction getEmptySize(componentName: string): NzEmptySize {\n  switch (componentName) {\n    case 'table':\n    case 'list':\n      return 'normal';\n    case 'select':\n    case 'tree-select':\n    case 'cascader':\n    case 'transfer':\n      return 'small';\n    default:\n      return '';\n  }\n}\n\ntype NzEmptyContentType = 'component' | 'template' | 'string';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-embed-empty',\n  exportAs: 'nzEmbedEmpty',\n  template: `\n    <ng-container *ngIf=\"!content && specificContent !== null\" [ngSwitch]=\"size\">\n      <nz-empty *ngSwitchCase=\"'normal'\" class=\"ant-empty-normal\" [nzNotFoundImage]=\"'simple'\"></nz-empty>\n      <nz-empty *ngSwitchCase=\"'small'\" class=\"ant-empty-small\" [nzNotFoundImage]=\"'simple'\"></nz-empty>\n      <nz-empty *ngSwitchDefault></nz-empty>\n    </ng-container>\n    <ng-container *ngIf=\"content\">\n      <ng-template *ngIf=\"contentType !== 'string'\" [cdkPortalOutlet]=\"contentPortal\"></ng-template>\n      <ng-container *ngIf=\"contentType === 'string'\">\n        {{ content }}\n      </ng-container>\n    </ng-container>\n  `\n})\nexport class NzEmbedEmptyComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() nzComponentName?: string;\n  @Input() specificContent?: NzEmptyCustomContent;\n\n  content?: NzEmptyCustomContent;\n  contentType: NzEmptyContentType = 'string';\n  contentPortal?: Portal<NzSafeAny>;\n  size: NzEmptySize = '';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private configService: NzConfigService,\n    private viewContainerRef: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private injector: Injector\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzComponentName) {\n      this.size = getEmptySize(changes.nzComponentName.currentValue);\n    }\n\n    if (changes.specificContent && !changes.specificContent.isFirstChange()) {\n      this.content = changes.specificContent.currentValue;\n      this.renderEmpty();\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscribeDefaultEmptyContentChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private renderEmpty(): void {\n    const content = this.content;\n\n    if (typeof content === 'string') {\n      this.contentType = 'string';\n    } else if (content instanceof TemplateRef) {\n      const context = { $implicit: this.nzComponentName } as NzSafeAny;\n      this.contentType = 'template';\n      this.contentPortal = new TemplatePortal(content, this.viewContainerRef, context);\n    } else if (content instanceof Type) {\n      const injector = Injector.create({\n        parent: this.injector,\n        providers: [{ provide: NZ_EMPTY_COMPONENT_NAME, useValue: this.nzComponentName }]\n      });\n      this.contentType = 'component';\n      this.contentPortal = new ComponentPortal(content, this.viewContainerRef, injector);\n    } else {\n      this.contentType = 'string';\n      this.contentPortal = undefined;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private subscribeDefaultEmptyContentChange(): void {\n    this.configService\n      .getConfigChangeEventForComponent('empty')\n      .pipe(startWith(true), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.content = this.specificContent || this.getUserDefaultEmptyContent();\n        this.renderEmpty();\n      });\n  }\n\n  private getUserDefaultEmptyContent(): Type<NzSafeAny> | TemplateRef<string> | string | undefined {\n    return (this.configService.getConfigForComponent('empty') || {}).nzDefaultEmptyContent;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzEmptyI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\n\nconst NzEmptyDefaultImages = ['default', 'simple'] as const;\ntype NzEmptyNotFoundImageType = typeof NzEmptyDefaultImages[number] | null | string | TemplateRef<void>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-empty',\n  exportAs: 'nzEmpty',\n  template: `\n    <div class=\"ant-empty-image\">\n      <ng-container *ngIf=\"!isImageBuildIn\">\n        <ng-container *nzStringTemplateOutlet=\"nzNotFoundImage\">\n          <img [src]=\"nzNotFoundImage\" [alt]=\"isContentString ? nzNotFoundContent : 'empty'\" />\n        </ng-container>\n      </ng-container>\n      <nz-empty-default *ngIf=\"isImageBuildIn && nzNotFoundImage !== 'simple'\"></nz-empty-default>\n      <nz-empty-simple *ngIf=\"isImageBuildIn && nzNotFoundImage === 'simple'\"></nz-empty-simple>\n    </div>\n    <p class=\"ant-empty-description\" *ngIf=\"nzNotFoundContent !== null\">\n      <ng-container *nzStringTemplateOutlet=\"nzNotFoundContent\">\n        {{ isContentString ? nzNotFoundContent : locale['description'] }}\n      </ng-container>\n    </p>\n    <div class=\"ant-empty-footer\" *ngIf=\"nzNotFoundFooter\">\n      <ng-container *nzStringTemplateOutlet=\"nzNotFoundFooter\">\n        {{ nzNotFoundFooter }}\n      </ng-container>\n    </div>\n  `,\n  host: {\n    class: 'ant-empty'\n  }\n})\nexport class NzEmptyComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() nzNotFoundImage: NzEmptyNotFoundImageType = 'default';\n  @Input() nzNotFoundContent?: string | TemplateRef<void> | null;\n  @Input() nzNotFoundFooter?: string | TemplateRef<void>;\n\n  isContentString = false;\n  isImageBuildIn = true;\n  locale!: NzEmptyI18nInterface;\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private i18n: NzI18nService, private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzNotFoundContent, nzNotFoundImage } = changes;\n\n    if (nzNotFoundContent) {\n      const content = nzNotFoundContent.currentValue;\n      this.isContentString = typeof content === 'string';\n    }\n\n    if (nzNotFoundImage) {\n      const image = nzNotFoundImage.currentValue || 'default';\n      this.isImageBuildIn = NzEmptyDefaultImages.findIndex(i => i === image) > -1;\n    }\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Empty');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-empty-default',\n  exportAs: 'nzEmptyDefault',\n  template: `\n    <svg\n      class=\"ant-empty-img-default\"\n      width=\"184\"\n      height=\"152\"\n      viewBox=\"0 0 184 152\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(24 31.67)\">\n          <ellipse class=\"ant-empty-img-default-ellipse\" cx=\"67.797\" cy=\"106.89\" rx=\"67.797\" ry=\"12.668\" />\n          <path\n            class=\"ant-empty-img-default-path-1\"\n            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n          />\n          <path\n            class=\"ant-empty-img-default-path-2\"\n            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\n            transform=\"translate(13.56)\"\n          />\n          <path\n            class=\"ant-empty-img-default-path-3\"\n            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n          />\n          <path\n            class=\"ant-empty-img-default-path-4\"\n            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n          />\n        </g>\n        <path\n          class=\"ant-empty-img-default-path-5\"\n          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n        />\n        <g class=\"ant-empty-img-default-g\" transform=\"translate(149.65 15.383)\">\n          <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n        </g>\n      </g>\n    </svg>\n  `\n})\nexport class NzEmptyDefaultComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-empty-simple',\n  exportAs: 'nzEmptySimple',\n  template: `\n    <svg class=\"ant-empty-img-simple\" width=\"64\" height=\"41\" viewBox=\"0 0 64 41\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g transform=\"translate(0 1)\" fill=\"none\" fill-rule=\"evenodd\">\n        <ellipse class=\"ant-empty-img-simple-ellipse\" cx=\"32\" cy=\"33\" rx=\"32\" ry=\"7\" />\n        <g class=\"ant-empty-img-simple-g\" fill-rule=\"nonzero\">\n          <path\n            d=\"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\"\n          />\n          <path\n            d=\"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\"\n            class=\"ant-empty-img-simple-path\"\n          />\n        </g>\n      </g>\n    </svg>\n  `\n})\nexport class NzEmptySimpleComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\n\nimport { NzEmbedEmptyComponent } from './embed-empty.component';\nimport { NzEmptyComponent } from './empty.component';\nimport { NzEmptyDefaultComponent } from './partial/default';\nimport { NzEmptySimpleComponent } from './partial/simple';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, PortalModule, NzOutletModule, NzI18nModule],\n  declarations: [NzEmptyComponent, NzEmbedEmptyComponent, NzEmptyDefaultComponent, NzEmptySimpleComponent],\n  exports: [NzEmptyComponent, NzEmbedEmptyComponent]\n})\nexport class NzEmptyModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './embed-empty.component';\nexport * from './empty.component';\nexport * from './empty.module';\nexport * from './config';\nexport { NzEmptySimpleComponent } from './partial/simple';\nexport { NzEmptyDefaultComponent } from './partial/default';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}