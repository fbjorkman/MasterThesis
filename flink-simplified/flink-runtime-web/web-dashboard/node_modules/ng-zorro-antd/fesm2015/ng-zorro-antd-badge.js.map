{"version":3,"file":"ng-zorro-antd-badge.js","sources":["../../components/badge/preset-colors.ts","../../components/badge/badge.component.ts","../../components/badge/badge-sup.component.ts","../../components/badge/ribbon.component.ts","../../components/badge/badge.module.ts","../../components/badge/public-api.ts","../../components/badge/ng-zorro-antd-badge.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport const badgePresetColors: readonly string[] = [\n  'pink',\n  'red',\n  'yellow',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'lime'\n];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { badgePresetColors } from './preset-colors';\nimport { NzBadgeStatusType } from './types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'badge';\n\n@Component({\n  selector: 'nz-badge',\n  exportAs: 'nzBadge',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [zoomBadgeMotion],\n  template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n  host: {\n    '[class.ant-badge-status]': 'nzStatus',\n    '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n  }\n})\nexport class NzBadgeComponent implements OnChanges, OnDestroy, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzShowZero: BooleanInput;\n  static ngAcceptInputType_nzShowDot: BooleanInput;\n  static ngAcceptInputType_nzDot: BooleanInput;\n  static ngAcceptInputType_nzStandalone: BooleanInput;\n  showSup = false;\n  presetColor: string | null = null;\n  dir: Direction = 'ltr';\n  private destroy$ = new Subject<void>();\n  @Input() @InputBoolean() nzShowZero: boolean = false;\n  @Input() @InputBoolean() nzShowDot = true;\n  @Input() @InputBoolean() nzStandalone = false;\n  @Input() @InputBoolean() nzDot = false;\n  @Input() @WithConfig() nzOverflowCount: number = 99;\n  @Input() @WithConfig() nzColor?: string = undefined;\n  @Input() nzStyle: { [key: string]: string } | null = null;\n  @Input() nzText?: string | TemplateRef<void> | null = null;\n  @Input() nzTitle?: string | null | undefined;\n  @Input() nzStatus?: NzBadgeStatusType | string;\n  @Input() nzCount?: number | TemplateRef<NzSafeAny>;\n  @Input() nzOffset?: [number, number];\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-badge');\n  }\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.prepareBadgeForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareBadgeForRtl();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n    if (nzShowDot || nzDot || nzCount || nzShowZero) {\n      this.showSup = (this.nzShowDot && this.nzDot) || this.nzCount! > 0 || (this.nzCount! <= 0 && this.nzShowZero);\n    }\n  }\n\n  private prepareBadgeForRtl(): void {\n    if (this.isRtlLayout) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    }\n  }\n\n  get isRtlLayout(): boolean {\n    return this.dir === 'rtl';\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-badge-sup',\n  exportAs: 'nzBadgeSup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [zoomBadgeMotion],\n  template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n  host: {\n    '[@.disabled]': `disableAnimation`,\n    '[@zoomBadgeMotion]': '',\n    '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n    '[style]': `nzStyle`,\n    '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n    '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n    '[class.ant-badge-count]': `!nzDot`,\n    '[class.ant-badge-dot]': `nzDot`,\n    '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n  }\n})\nexport class NzBadgeSupComponent implements OnInit, OnChanges {\n  @Input() nzOffset?: [number, number];\n  @Input() nzTitle?: string | null | undefined;\n  @Input() nzStyle: { [key: string]: string } | null = null;\n  @Input() nzDot = false;\n  @Input() nzOverflowCount: number = 99;\n  @Input() disableAnimation = false;\n  @Input() nzCount?: number | TemplateRef<NzSafeAny>;\n  @Input() noAnimation = false;\n  maxNumberArray: string[] = [];\n  countArray: number[] = [];\n  count: number = 0;\n  countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-scroll-number');\n  }\n\n  generateMaxNumberArray(): void {\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\n  }\n\n  ngOnInit(): void {\n    this.generateMaxNumberArray();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzOverflowCount, nzCount } = changes;\n    if (nzCount && typeof nzCount.currentValue === 'number') {\n      this.count = Math.max(0, nzCount.currentValue);\n      this.countArray = this.count\n        .toString()\n        .split('')\n        .map(item => +item);\n    }\n    if (nzOverflowCount) {\n      this.generateMaxNumberArray();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { badgePresetColors } from './preset-colors';\n\n@Component({\n  selector: 'nz-ribbon',\n  exportAs: 'nzRibbon',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `\n})\nexport class NzRibbonComponent implements OnChanges {\n  @Input() nzColor: string | undefined;\n  @Input() nzPlacement: 'start' | 'end' = 'end';\n  @Input() nzText: string | TemplateRef<void> | null = null;\n  presetColor: string | null = null;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-ribbon-wrapper');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzColor } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzBadgeSupComponent } from './badge-sup.component';\nimport { NzBadgeComponent } from './badge.component';\nimport { NzRibbonComponent } from './ribbon.component';\n\n@NgModule({\n  declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n  exports: [NzBadgeComponent, NzRibbonComponent],\n  imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n})\nexport class NzBadgeModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './badge.component';\nexport * from './badge.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzBadgeSupComponent as ɵa} from './badge-sup.component';\nexport {NzRibbonComponent as ɵb} from './ribbon.component';"],"names":[],"mappings":"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"}