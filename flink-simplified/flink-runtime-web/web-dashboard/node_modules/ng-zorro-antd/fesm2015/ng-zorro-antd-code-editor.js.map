{"version":3,"file":"ng-zorro-antd-code-editor.js","sources":["../../components/code-editor/typings.ts","../../components/code-editor/code-editor.service.ts","../../components/code-editor/code-editor.component.ts","../../components/code-editor/code-editor.module.ts","../../components/code-editor/public-api.ts","../../components/code-editor/ng-zorro-antd-code-editor.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { editor } from 'monaco-editor';\n\nimport IStandAloneEditorConstructionOptions = editor.IStandaloneEditorConstructionOptions;\nimport IDiffEditorConstructionOptions = editor.IDiffEditorConstructionOptions;\n\nexport type EditorOptions = IStandAloneEditorConstructionOptions;\nexport type DiffEditorOptions = IDiffEditorConstructionOptions;\nexport type JoinedEditorOptions = EditorOptions | DiffEditorOptions;\n\nexport type NzEditorMode = 'normal' | 'diff';\n\nexport enum NzCodeEditorLoadingStatus {\n  UNLOAD = 'unload',\n  LOADING = 'loading',\n  LOADED = 'LOADED'\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of as observableOf, Subject, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CodeEditorConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { PREFIX, warn } from 'ng-zorro-antd/core/logger';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { JoinedEditorOptions, NzCodeEditorLoadingStatus } from './typings';\n\ndeclare const monaco: NzSafeAny;\n\nconst NZ_CONFIG_MODULE_NAME = 'codeEditor';\n\nfunction tryTriggerFunc(fn?: (...args: NzSafeAny[]) => NzSafeAny): (...args: NzSafeAny) => void {\n  return (...args: NzSafeAny[]) => {\n    if (fn) {\n      fn(...args);\n    }\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzCodeEditorService implements OnDestroy {\n  private document: Document;\n  private firstEditorInitialized = false;\n  private loaded$ = new Subject<boolean>();\n  private loadingStatus = NzCodeEditorLoadingStatus.UNLOAD;\n  private option: JoinedEditorOptions = {};\n  private config: CodeEditorConfig;\n  private subscription: Subscription | null;\n\n  option$ = new BehaviorSubject<JoinedEditorOptions>(this.option);\n\n  constructor(private readonly nzConfigService: NzConfigService, @Inject(DOCUMENT) _document: NzSafeAny) {\n    const globalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n\n    this.document = _document;\n    this.config = { ...globalConfig };\n    this.option = this.config.defaultEditorOption || {};\n\n    this.subscription = this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).subscribe(() => {\n      const newGlobalConfig: NzSafeAny = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n      if (newGlobalConfig) {\n        this._updateDefaultOption(newGlobalConfig.defaultEditorOption);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription!.unsubscribe();\n    this.subscription = null;\n  }\n\n  private _updateDefaultOption(option: JoinedEditorOptions): void {\n    this.option = { ...this.option, ...option };\n    this.option$.next(this.option);\n\n    if (option.theme) {\n      monaco.editor.setTheme(option.theme);\n    }\n  }\n\n  requestToInit(): Observable<JoinedEditorOptions> {\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.LOADED) {\n      this.onInit();\n      return observableOf(this.getLatestOption());\n    }\n\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.UNLOAD) {\n      if (this.config.useStaticLoading && typeof monaco === 'undefined') {\n        warn(\n          'You choose to use static loading but it seems that you forget ' +\n            'to config webpack plugin correctly. Please refer to our official website' +\n            'for more details about static loading.'\n        );\n      } else {\n        this.loadMonacoScript();\n      }\n    }\n\n    return this.loaded$.asObservable().pipe(\n      tap(() => this.onInit()),\n      map(() => this.getLatestOption())\n    );\n  }\n\n  private loadMonacoScript(): void {\n    if (this.config.useStaticLoading) {\n      Promise.resolve().then(() => this.onLoad());\n      return;\n    }\n\n    if (this.loadingStatus === NzCodeEditorLoadingStatus.LOADING) {\n      return;\n    }\n\n    this.loadingStatus = NzCodeEditorLoadingStatus.LOADING;\n\n    const assetsRoot = this.config.assetsRoot;\n    const vs = assetsRoot ? `${assetsRoot}/vs` : 'assets/vs';\n    const windowAsAny = window as NzSafeAny;\n    const loadScript = this.document.createElement('script');\n\n    loadScript.type = 'text/javascript';\n    loadScript.src = `${vs}/loader.js`;\n    loadScript.onload = () => {\n      windowAsAny.require.config({\n        paths: { vs }\n      });\n      windowAsAny.require(['vs/editor/editor.main'], () => {\n        this.onLoad();\n      });\n    };\n    loadScript.onerror = () => {\n      throw new Error(`${PREFIX} cannot load assets of monaco editor from source \"${vs}\".`);\n    };\n\n    this.document.documentElement.appendChild(loadScript);\n  }\n\n  private onLoad(): void {\n    this.loadingStatus = NzCodeEditorLoadingStatus.LOADED;\n    this.loaded$.next(true);\n    this.loaded$.complete();\n\n    tryTriggerFunc(this.config.onLoad)();\n  }\n\n  private onInit(): void {\n    if (!this.firstEditorInitialized) {\n      this.firstEditorInitialized = true;\n      tryTriggerFunc(this.config.onFirstEditorInit)();\n    }\n\n    tryTriggerFunc(this.config.onInit)();\n  }\n\n  private getLatestOption(): JoinedEditorOptions {\n    return { ...this.option };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, fromEvent, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { editor, IDisposable } from 'monaco-editor';\n\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { inNextTick, InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzCodeEditorService } from './code-editor.service';\nimport { DiffEditorOptions, EditorOptions, JoinedEditorOptions, NzEditorMode } from './typings';\n\n// Import types from monaco editor.\nimport ITextModel = editor.ITextModel;\nimport IStandaloneCodeEditor = editor.IStandaloneCodeEditor;\nimport IStandaloneDiffEditor = editor.IStandaloneDiffEditor;\n\ndeclare const monaco: NzSafeAny;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-code-editor',\n  exportAs: 'nzCodeEditor',\n  template: `\n    <div class=\"ant-code-editor-loading\" *ngIf=\"nzLoading\">\n      <nz-spin></nz-spin>\n    </div>\n\n    <div class=\"ant-code-editor-toolkit\" *ngIf=\"nzToolkit\">\n      <ng-template [ngTemplateOutlet]=\"nzToolkit\"></ng-template>\n    </div>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCodeEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class NzCodeEditorComponent implements OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzFullControl: BooleanInput;\n\n  @Input() nzEditorMode: NzEditorMode = 'normal';\n  @Input() nzOriginalText = '';\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzFullControl = false;\n  @Input() nzToolkit?: TemplateRef<void>;\n\n  @Input() set nzEditorOption(value: JoinedEditorOptions) {\n    this.editorOption$.next(value);\n  }\n\n  @Output() readonly nzEditorInitialized = new EventEmitter<IStandaloneCodeEditor | IStandaloneDiffEditor>();\n\n  editorOptionCached: JoinedEditorOptions = {};\n\n  private readonly el: HTMLElement;\n  private destroy$ = new Subject<void>();\n  private resize$ = new Subject<void>();\n  private editorOption$ = new BehaviorSubject<JoinedEditorOptions>({});\n  private editorInstance: IStandaloneCodeEditor | IStandaloneDiffEditor | null = null;\n  private value = '';\n  private modelSet = false;\n  private onDidChangeContentDisposable: IDisposable | null = null;\n\n  constructor(\n    private nzCodeEditorService: NzCodeEditorService,\n    private ngZone: NgZone,\n    elementRef: ElementRef,\n    private platform: Platform\n  ) {\n    this.el = elementRef.nativeElement;\n    this.el.classList.add('ant-code-editor');\n  }\n\n  /**\n   * Initialize a monaco editor instance.\n   */\n  ngAfterViewInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.nzCodeEditorService.requestToInit().subscribe(option => this.setup(option));\n  }\n\n  ngOnDestroy(): void {\n    if (this.onDidChangeContentDisposable) {\n      this.onDidChangeContentDisposable.dispose();\n      this.onDidChangeContentDisposable = null;\n    }\n\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n      this.editorInstance = null;\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n    this.setValue();\n  }\n\n  registerOnChange(fn: OnChangeType): NzSafeAny {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouch = fn;\n  }\n\n  onChange: OnChangeType = (_value: string) => {};\n\n  onTouch: OnTouchedType = () => {};\n\n  layout(): void {\n    this.resize$.next();\n  }\n\n  private setup(option: JoinedEditorOptions): void {\n    inNextTick().subscribe(() => {\n      this.editorOptionCached = option;\n      this.registerOptionChanges();\n      this.initMonacoEditorInstance();\n      this.registerResizeChange();\n      this.setValue();\n\n      if (!this.nzFullControl) {\n        this.setValueEmitter();\n      }\n\n      this.nzEditorInitialized.emit(this.editorInstance!);\n    });\n  }\n\n  private registerOptionChanges(): void {\n    combineLatest([this.editorOption$, this.nzCodeEditorService.option$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([selfOpt, defaultOpt]) => {\n        this.editorOptionCached = {\n          ...this.editorOptionCached,\n          ...defaultOpt,\n          ...selfOpt\n        };\n        this.updateOptionToMonaco();\n      });\n  }\n\n  private initMonacoEditorInstance(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.editorInstance =\n        this.nzEditorMode === 'normal'\n          ? monaco.editor.create(this.el, { ...this.editorOptionCached })\n          : monaco.editor.createDiffEditor(this.el, {\n              ...(this.editorOptionCached as DiffEditorOptions)\n            });\n    });\n  }\n\n  private registerResizeChange(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize')\n        .pipe(debounceTime(300), takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.layout();\n        });\n\n      this.resize$\n        .pipe(\n          takeUntil(this.destroy$),\n          filter(() => !!this.editorInstance),\n          map(() => ({\n            width: this.el.clientWidth,\n            height: this.el.clientHeight\n          })),\n          distinctUntilChanged((a, b) => a.width === b.width && a.height === b.height),\n          debounceTime(50)\n        )\n        .subscribe(() => {\n          this.editorInstance!.layout();\n        });\n    });\n  }\n\n  private setValue(): void {\n    if (!this.editorInstance) {\n      return;\n    }\n\n    if (this.nzFullControl && this.value) {\n      warn(`should not set value when you are using full control mode! It would result in ambiguous data flow!`);\n      return;\n    }\n\n    if (this.nzEditorMode === 'normal') {\n      if (this.modelSet) {\n        const model = this.editorInstance.getModel() as ITextModel;\n        this.preservePositionAndSelections(() => model.setValue(this.value));\n      } else {\n        (this.editorInstance as IStandaloneCodeEditor).setModel(\n          monaco.editor.createModel(this.value, (this.editorOptionCached as EditorOptions).language)\n        );\n        this.modelSet = true;\n      }\n    } else {\n      if (this.modelSet) {\n        const model = (this.editorInstance as IStandaloneDiffEditor).getModel()!;\n        this.preservePositionAndSelections(() => {\n          model.modified.setValue(this.value);\n          model.original.setValue(this.nzOriginalText);\n        });\n      } else {\n        const language = (this.editorOptionCached as EditorOptions).language;\n        (this.editorInstance as IStandaloneDiffEditor).setModel({\n          original: monaco.editor.createModel(this.nzOriginalText, language),\n          modified: monaco.editor.createModel(this.value, language)\n        });\n        this.modelSet = true;\n      }\n    }\n  }\n\n  /**\n   * {@link editor.ICodeEditor}#setValue resets the cursor position to the start of the document.\n   * This helper memorizes the cursor position and selections and restores them after the given\n   * function has been called.\n   */\n  private preservePositionAndSelections(fn: () => unknown): void {\n    if (!this.editorInstance) {\n      fn();\n      return;\n    }\n\n    const position = this.editorInstance.getPosition();\n    const selections = this.editorInstance.getSelections();\n\n    fn();\n\n    if (position) {\n      this.editorInstance.setPosition(position);\n    }\n    if (selections) {\n      this.editorInstance.setSelections(selections);\n    }\n  }\n\n  private setValueEmitter(): void {\n    const model = (\n      this.nzEditorMode === 'normal'\n        ? (this.editorInstance as IStandaloneCodeEditor).getModel()\n        : (this.editorInstance as IStandaloneDiffEditor).getModel()!.modified\n    ) as ITextModel;\n\n    // The `onDidChangeContent` returns a disposable object (an object with `dispose()` method) which will cleanup\n    // the listener. The callback, that we pass to `onDidChangeContent`, captures `this`. This leads to a circular reference\n    // (`nz-code-editor -> monaco -> nz-code-editor`) and prevents the `nz-code-editor` from being GC'd.\n    this.onDidChangeContentDisposable = model.onDidChangeContent(() => {\n      this.emitValue(model.getValue());\n    });\n  }\n\n  private emitValue(value: string): void {\n    if (this.value === value) {\n      // If the value didn't change there's no reason to send an update.\n      // Specifically this may happen during an update from the model (writeValue) where sending an update to the model would actually be incorrect.\n      return;\n    }\n\n    this.value = value;\n    // We're re-entering the Angular zone only if the value has been changed since there's a `return` expression previously.\n    // This won't cause \"dead\" change detections (basically when the `tick()` has been run, but there's nothing to update).\n    this.ngZone.run(() => {\n      this.onChange(value);\n    });\n  }\n\n  private updateOptionToMonaco(): void {\n    if (this.editorInstance) {\n      this.editorInstance.updateOptions({ ...this.editorOptionCached });\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport { NzCodeEditorComponent } from './code-editor.component';\n\n@NgModule({\n  declarations: [NzCodeEditorComponent],\n  imports: [CommonModule, NzIconModule, NzSpinModule],\n  exports: [NzCodeEditorComponent]\n})\nexport class NzCodeEditorModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './typings';\nexport * from './code-editor.component';\nexport * from './code-editor.module';\nexport * from './code-editor.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableOf"],"mappings":"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"}