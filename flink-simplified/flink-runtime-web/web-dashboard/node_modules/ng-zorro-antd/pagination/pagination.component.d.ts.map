{"version":3,"file":"pagination.component.d.ts","sources":["pagination.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzBreakpointService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NumberInput } from 'ng-zorro-antd/core/types';\nimport { NzI18nService, NzPaginationI18nInterface } from 'ng-zorro-antd/i18n';\nimport { PaginationItemRenderContext } from './pagination.types';\nexport declare class NzPaginationComponent implements OnInit, OnDestroy, OnChanges {\n    private i18n;\n    private cdr;\n    private breakpointService;\n    protected nzConfigService: NzConfigService;\n    private directionality;\n    private elementRef;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\n    static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\n    static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\n    static ngAcceptInputType_nzSimple: BooleanInput;\n    static ngAcceptInputType_nzResponsive: BooleanInput;\n    static ngAcceptInputType_nzTotal: NumberInput;\n    static ngAcceptInputType_nzPageIndex: NumberInput;\n    static ngAcceptInputType_nzPageSize: NumberInput;\n    readonly nzPageSizeChange: EventEmitter<number>;\n    readonly nzPageIndexChange: EventEmitter<number>;\n    nzShowTotal: TemplateRef<{\n        $implicit: number;\n        range: [number, number];\n    }> | null;\n    nzItemRender: TemplateRef<PaginationItemRenderContext> | null;\n    nzSize: 'default' | 'small';\n    nzPageSizeOptions: number[];\n    nzShowSizeChanger: boolean;\n    nzShowQuickJumper: boolean;\n    nzSimple: boolean;\n    nzDisabled: boolean;\n    nzResponsive: boolean;\n    nzHideOnSinglePage: boolean;\n    nzTotal: number;\n    nzPageIndex: number;\n    nzPageSize: number;\n    showPagination: boolean;\n    locale: NzPaginationI18nInterface;\n    size: 'default' | 'small';\n    dir: Direction;\n    private destroy$;\n    private total$;\n    validatePageIndex(value: number, lastIndex: number): number;\n    onPageIndexChange(index: number): void;\n    onPageSizeChange(size: number): void;\n    onTotalChange(total: number): void;\n    getLastIndex(total: number, pageSize: number): number;\n    constructor(i18n: NzI18nService, cdr: ChangeDetectorRef, breakpointService: NzBreakpointService, nzConfigService: NzConfigService, directionality: Directionality, elementRef: ElementRef);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n}\n"]}