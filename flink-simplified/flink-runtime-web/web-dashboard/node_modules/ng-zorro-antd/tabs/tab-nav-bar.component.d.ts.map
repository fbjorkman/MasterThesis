{"version":3,"file":"tab-nav-bar.component.d.ts","sources":["tab-nav-bar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nimport { AfterContentChecked, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\nimport { NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTabPositionMode, NzTabScrollEvent, NzTabScrollListOffsetEvent } from './interfaces';\nimport { NzTabAddButtonComponent } from './tab-add-button.component';\nimport { NzTabNavItemDirective } from './tab-nav-item.directive';\nimport { NzTabNavOperationComponent } from './tab-nav-operation.component';\nimport { NzTabsInkBarDirective } from './tabs-ink-bar.directive';\nexport declare class NzTabNavBarComponent implements AfterViewInit, AfterContentChecked, OnDestroy, OnChanges {\n    private cdr;\n    private ngZone;\n    private viewportRuler;\n    private nzResizeObserver;\n    private dir;\n    static ngAcceptInputType_selectedIndex: NumberInput;\n    readonly indexFocused: EventEmitter<number>;\n    readonly selectFocusedIndex: EventEmitter<number>;\n    readonly addClicked: EventEmitter<void>;\n    readonly tabScroll: EventEmitter<NzTabScrollEvent>;\n    position: NzTabPositionMode;\n    addable: boolean;\n    hideBar: boolean;\n    addIcon: string | TemplateRef<NzSafeAny>;\n    inkBarAnimated: boolean;\n    extraTemplate?: TemplateRef<void>;\n    get selectedIndex(): number;\n    set selectedIndex(value: number);\n    navWarpRef: ElementRef<HTMLElement>;\n    navListRef: ElementRef<HTMLElement>;\n    operationRef: NzTabNavOperationComponent;\n    addBtnRef: NzTabAddButtonComponent;\n    inkBar: NzTabsInkBarDirective;\n    items: QueryList<NzTabNavItemDirective>;\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number;\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number);\n    get showAddButton(): boolean;\n    translate: null | string;\n    transformX: number;\n    transformY: number;\n    pingLeft: boolean;\n    pingRight: boolean;\n    pingTop: boolean;\n    pingBottom: boolean;\n    hiddenItems: NzTabNavItemDirective[];\n    private keyManager;\n    private destroy$;\n    private _selectedIndex;\n    private wrapperWidth;\n    private wrapperHeight;\n    private scrollListWidth;\n    private scrollListHeight;\n    private operationWidth;\n    private operationHeight;\n    private addButtonWidth;\n    private addButtonHeight;\n    private selectedIndexChanged;\n    private lockAnimationTimeoutId;\n    private cssTransformTimeWaitingId;\n    constructor(cdr: ChangeDetectorRef, ngZone: NgZone, viewportRuler: ViewportRuler, nzResizeObserver: NzResizeObserver, dir: Directionality);\n    ngAfterViewInit(): void;\n    ngAfterContentChecked(): void;\n    ngOnDestroy(): void;\n    onSelectedFromMenu(tab: NzTabNavItemDirective): void;\n    onOffsetChange(e: NzTabScrollListOffsetEvent): void;\n    handleKeydown(event: KeyboardEvent): void;\n    private isValidIndex;\n    private scrollToTab;\n    private lockAnimation;\n    private setTransform;\n    private clampTransformX;\n    private clampTransformY;\n    private updateScrollListPosition;\n    private resetSizes;\n    private alignInkBarToSelectedTab;\n    private setPingStatus;\n    private setVisibleRange;\n    private getLayoutDirection;\n    private setTabFocus;\n    ngOnChanges(changes: SimpleChanges): void;\n}\n"]}