{"version":3,"file":"tab-scroll-list.directive.d.ts","sources":["tab-scroll-list.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { NzTabScrollEvent, NzTabScrollEventHandlerFun, NzTabScrollListOffset, NzTabScrollListOffsetEvent } from './interfaces';\nexport declare class NzTabScrollListDirective implements OnInit, OnDestroy {\n    private ngZone;\n    private elementRef;\n    lastWheelDirection: 'x' | 'y' | null;\n    lastWheelTimestamp: number;\n    lastTimestamp: number;\n    lastTimeDiff: number;\n    lastMixedWheel: number;\n    lastWheelPrevent: boolean;\n    touchPosition: NzTabScrollListOffset | null;\n    lastOffset: NzTabScrollListOffset | null;\n    motion: number;\n    unsubscribe: () => void;\n    readonly offsetChange: EventEmitter<NzTabScrollListOffsetEvent>;\n    readonly tabScroll: EventEmitter<NzTabScrollEvent>;\n    constructor(ngZone: NgZone, elementRef: ElementRef<HTMLElement>);\n    ngOnInit(): void;\n    subscribeWrap<T extends NzTabScrollEvent['event']>(type: NzTabScrollEvent['type'], observable: Observable<T>, handler: NzTabScrollEventHandlerFun<T>): Subscription;\n    onTouchEnd: (e: TouchEvent) => void;\n    onTouchMove: (e: TouchEvent) => void;\n    onTouchStart: (e: TouchEvent) => void;\n    onWheel: (e: WheelEvent) => void;\n    onOffset(x: number, y: number, event: Event): void;\n    ngOnDestroy(): void;\n}\n"]}