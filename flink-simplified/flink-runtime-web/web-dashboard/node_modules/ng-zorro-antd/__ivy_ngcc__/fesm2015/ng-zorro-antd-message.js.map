{"version":3,"file":"ng-zorro-antd-message.js","sources":["../../components/message/base.ts","../../components/message/message-container.component.ts","../../components/message/message.service.module.ts","../../components/message/message.service.ts","../../components/message/message.component.ts","../../components/message/message.module.ts","../../components/message/typings.ts","../../components/message/public-api.ts","../../components/message/ng-zorro-antd-message.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AnimationEvent } from '@angular/animations';\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, Directive, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMessageData, NzMessageDataOptions } from './typings';\n\nlet globalCounter = 0;\n\nexport abstract class NzMNService {\n  protected abstract componentPrefix: string;\n  protected container?: NzMNContainerComponent;\n\n  constructor(\n    protected nzSingletonService: NzSingletonService,\n    protected overlay: Overlay,\n    private injector: Injector\n  ) {}\n\n  remove(id?: string): void {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  protected getInstanceId(): string {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance as T;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance as T;\n  }\n}\n\n@Directive()\nexport abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n  config?: Required<MessageConfig>;\n  instances: Array<Required<NzMessageData>> = [];\n\n  protected readonly destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, protected nzConfigService: NzConfigService) {\n    this.updateConfig();\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data: NzMessageData): Required<NzMessageData> {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config!.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n\n    this.readyInstances();\n\n    return instance;\n  }\n\n  remove(id: string, userAction: boolean = false): void {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  removeAll(): void {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n\n    this.readyInstances();\n  }\n\n  protected onCreate(instance: NzMessageData): Required<NzMessageData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    return instance as Required<NzMessageData>;\n  }\n\n  protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  protected readyInstances(): void {\n    this.cdr.detectChanges();\n  }\n\n  protected abstract updateConfig(): void;\n\n  protected abstract subscribeConfigChange(): void;\n\n  protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover } = this.config!;\n    return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n  }\n}\n\n@Directive()\nexport abstract class NzMNComponent implements OnInit, OnDestroy {\n  instance!: Required<NzMessageData>;\n  index?: number;\n\n  readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n  readonly animationStateChanged: Subject<AnimationEvent> = new Subject<AnimationEvent>();\n\n  protected options!: Required<NzMessageDataOptions>;\n  protected autoClose?: boolean;\n  protected closeTimer?: number;\n  protected userAction: boolean = false;\n  protected eraseTimer: number | null = null;\n  protected eraseTimingStart?: number;\n  protected eraseTTL!: number;\n\n  protected constructor(protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.options = this.instance.options as Required<NzMessageDataOptions>;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n      this.animationStateChanged\n        .pipe(\n          filter(event => event.phaseName === 'done' && event.toState === 'leave'),\n          take(1)\n        )\n        .subscribe(() => {\n          clearTimeout(this.closeTimer);\n          this.destroyed.next({ id: this.instance.messageId, userAction: this.userAction });\n        });\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n    this.animationStateChanged.complete();\n  }\n\n  onEnter(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  protected destroy(userAction: boolean = false): void {\n    this.userAction = userAction;\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      this.closeTimer = setTimeout(() => {\n        this.closeTimer = undefined;\n        this.destroyed.next({ id: this.instance.messageId, userAction });\n      }, 200);\n    } else {\n      this.destroyed.next({ id: this.instance.messageId, userAction });\n    }\n  }\n\n  private initErase(): void {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  private updateTTL(): void {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart!;\n    }\n  }\n\n  private startEraseTimeout(): void {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  private clearEraseTimeout(): void {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { NzMNContainerComponent } from './base';\nimport { NzMessageData } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\nconst NZ_MESSAGE_DEFAULT_CONFIG: Required<MessageConfig> = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24,\n  nzDirection: 'ltr'\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n})\nexport class NzMessageContainerComponent extends NzMNContainerComponent {\n  readonly destroy$ = new Subject<void>();\n  dir: Direction = 'ltr';\n  instances: Array<Required<NzMessageData>> = [];\n  top?: string | null;\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n    const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n    this.dir = config?.nzDirection || 'ltr';\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateConfig();\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n        if (config) {\n          const { nzDirection } = config;\n          this.dir = nzDirection || this.dir;\n        }\n      });\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\n\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMNService } from './base';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageServiceModule } from './message.service.module';\nimport { NzMessageData, NzMessageDataOptions, NzMessageRef } from './typings';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMNService {\n  protected container?: NzMessageContainerComponent;\n  protected componentPrefix = 'message-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageRef {\n    return this.createInstance({ type, content }, options);\n  }\n\n  private createInstance(message: NzMessageData, options?: NzMessageDataOptions): NzMessageRef {\n    this.container = this.withContainer(NzMessageContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzMNComponent } from './base';\nimport { NzMessageData } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NzMessageComponent extends NzMNComponent implements OnInit, OnDestroy {\n  @Input() instance!: Required<NzMessageData>;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageComponent } from './message.component';\nimport { NzMessageServiceModule } from './message.service.module';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n  messageId?: string;\n  createdAt?: Date;\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n\n  onClose?: Subject<boolean>;\n}\n\nexport type NzMessageRef = Pick<Required<NzMessageData>, 'onClose' | 'messageId'>;\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './base';\nexport * from './message.service';\nexport * from './message.service.module';\nexport * from './message.module';\nexport * from './message.component';\nexport * from './typings';\nexport * from './message-container.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}