{"version":3,"file":"ng-zorro-antd-checkbox.js","sources":["../../components/checkbox/checkbox-wrapper.component.ts","../../components/checkbox/checkbox.component.ts","../../components/checkbox/checkbox-group.component.ts","../../components/checkbox/checkbox.module.ts","../../components/checkbox/public-api.ts","../../components/checkbox/ng-zorro-antd-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<NzSafeAny[]>();\n  private checkboxList: NzCheckboxComponent[] = [];\n\n  addCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange(): void {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\n\n@Component({\n  selector: '[nz-checkbox]',\n  exportAs: 'nzCheckbox',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n        (click)=\"$event.stopPropagation()\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n    '[class.ant-checkbox-rtl]': `dir === 'rtl'`,\n    '(click)': 'hostClick($event)'\n  }\n})\nexport class NzCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzIndeterminate: BooleanInput;\n  static ngAcceptInputType_nzChecked: BooleanInput;\n\n  dir: Direction = 'ltr';\n  private destroy$ = new Subject<void>();\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: true }) private inputElement!: ElementRef;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzIndeterminate = false;\n  @Input() @InputBoolean() nzChecked = false;\n  @Input() nzId: string | null = null;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.focus();\n    this.innerCheckedChange(!this.nzChecked);\n  }\n\n  innerCheckedChange(checked: boolean): void {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  writeValue(value: boolean): void {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Optional() private nzCheckboxWrapperComponent: NzCheckboxWrapperComponent,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-wrapper');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'nz-checkbox-group',\n  exportAs: 'nzCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() nzDisabled = false;\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  trackByOption(_: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  onCheckedChange(option: NzCheckBoxOptionInterface, checked: boolean): void {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-group');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzCheckboxGroupComponent } from './checkbox-group.component';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n  declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n  exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n})\nexport class NzCheckboxModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './checkbox.component';\nexport * from './checkbox.module';\nexport * from './checkbox-group.component';\nexport * from './checkbox-wrapper.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}