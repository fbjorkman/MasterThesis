{"version":3,"file":"config.service.d.ts","sources":["config.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Observable } from 'rxjs';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzConfig, NzConfigKey } from './config';\nexport declare class NzConfigService {\n    private configUpdated$;\n    /** Global config holding property. */\n    private readonly config;\n    constructor(defaultConfig?: NzConfig);\n    getConfig(): NzConfig;\n    getConfigForComponent<T extends NzConfigKey>(componentName: T): NzConfig[T];\n    getConfigChangeEventForComponent(componentName: NzConfigKey): Observable<void>;\n    set<T extends NzConfigKey>(componentName: T, value: NzConfig[T]): void;\n}\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n */\nexport declare function WithConfig<T>(): (target: NzSafeAny, propName: NzSafeAny, originalDescriptor?: TypedPropertyDescriptor<T> | undefined) => NzSafeAny;\n"]}