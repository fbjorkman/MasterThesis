{"version":3,"file":"breakpoint.d.ts","sources":["breakpoint.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { NzResizeService } from './resize';\nexport declare enum NzBreakpointEnum {\n    xxl = \"xxl\",\n    xl = \"xl\",\n    lg = \"lg\",\n    md = \"md\",\n    sm = \"sm\",\n    xs = \"xs\"\n}\nexport declare type BreakpointMap = {\n    [key in NzBreakpointEnum]: string;\n};\nexport declare type BreakpointBooleanMap = {\n    [key in NzBreakpointEnum]: boolean;\n};\nexport declare type NzBreakpointKey = keyof typeof NzBreakpointEnum;\nexport declare const gridResponsiveMap: BreakpointMap;\nexport declare const siderResponsiveMap: BreakpointMap;\nexport declare class NzBreakpointService {\n    private resizeService;\n    private mediaMatcher;\n    constructor(resizeService: NzResizeService, mediaMatcher: MediaMatcher);\n    subscribe(breakpointMap: BreakpointMap): Observable<NzBreakpointEnum>;\n    subscribe(breakpointMap: BreakpointMap, fullMap: true): Observable<BreakpointBooleanMap>;\n    private matchMedia;\n}\n"]}