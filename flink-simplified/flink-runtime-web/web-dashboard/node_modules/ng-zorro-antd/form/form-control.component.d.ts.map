{"version":3,"file":"form-control.component.d.ts","sources":["form-control.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { AfterContentInit, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgModel } from '@angular/forms';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\nimport { NzFormDirective } from './form.directive';\ndeclare const iconTypeMap: {\n    readonly error: \"close-circle-fill\";\n    readonly validating: \"loading\";\n    readonly success: \"check-circle-fill\";\n    readonly warning: \"exclamation-circle-fill\";\n};\nexport declare class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n    private nzFormItemComponent;\n    private cdr;\n    private nzFormDirective;\n    static ngAcceptInputType_nzHasFeedback: BooleanInput;\n    static ngAcceptInputType_nzRequired: BooleanInput;\n    static ngAcceptInputType_nzNoColon: BooleanInput;\n    static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n    private _hasFeedback;\n    private validateChanges;\n    private validateString;\n    private destroyed$;\n    private localeId;\n    private autoErrorTip?;\n    private get disableAutoTips();\n    status: NzFormControlStatusType;\n    validateControl: AbstractControl | NgModel | null;\n    iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null;\n    innerTip: string | TemplateRef<{\n        $implicit: AbstractControl | NgModel;\n    }> | null;\n    defaultValidateControl?: FormControlName | FormControlDirective;\n    nzSuccessTip?: string | TemplateRef<{\n        $implicit: AbstractControl | NgModel;\n    }>;\n    nzWarningTip?: string | TemplateRef<{\n        $implicit: AbstractControl | NgModel;\n    }>;\n    nzErrorTip?: string | TemplateRef<{\n        $implicit: AbstractControl | NgModel;\n    }>;\n    nzValidatingTip?: string | TemplateRef<{\n        $implicit: AbstractControl | NgModel;\n    }>;\n    nzExtra?: string | TemplateRef<void>;\n    nzAutoTips: Record<string, Record<string, string>>;\n    nzDisableAutoTips: boolean | 'default';\n    set nzHasFeedback(value: boolean);\n    get nzHasFeedback(): boolean;\n    set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel);\n    private watchControl;\n    private setStatus;\n    private getControlStatus;\n    private validateControlStatus;\n    private getInnerTip;\n    private updateAutoErrorTip;\n    private subscribeAutoTips;\n    constructor(elementRef: ElementRef, nzFormItemComponent: NzFormItemComponent, cdr: ChangeDetectorRef, renderer: Renderer2, i18n: NzI18nService, nzFormDirective: NzFormDirective);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentInit(): void;\n}\nexport {};\n"]}