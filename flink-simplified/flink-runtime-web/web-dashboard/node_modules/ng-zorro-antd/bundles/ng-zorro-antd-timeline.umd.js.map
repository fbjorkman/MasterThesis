{"version":3,"file":"ng-zorro-antd-timeline.umd.js","sources":["../../components/timeline/timeline.service.ts","../../components/timeline/typings.ts","../../components/timeline/timeline-item.component.ts","../../components/timeline/timeline.component.ts","../../components/timeline/timeline.module.ts","../../components/timeline/public-api.ts","../../components/timeline/ng-zorro-antd-timeline.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class TimelineService {\n  check$ = new ReplaySubject(1);\n  markForCheck(): void {\n    this.check$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst TimelineModes = ['left', 'alternate', 'right', 'custom'] as const;\nexport type NzTimelineMode = typeof TimelineModes[number];\n\nconst TimelinePositions = ['left', 'right'] as const;\nexport type NzTimelinePosition = typeof TimelinePositions[number];\n\nexport const TimelineTimeDefaultColors = ['red', 'blue', 'green', 'grey', 'gray'] as const;\nexport type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineItemColor, NzTimelinePosition, TimelineTimeDefaultColors } from './typings';\n\nfunction isDefaultColor(color?: string): boolean {\n  return TimelineTimeDefaultColors.findIndex(i => i === color) !== -1;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  template: `\n    <ng-template #template>\n      <li\n        class=\"ant-timeline-item\"\n        [class.ant-timeline-item-right]=\"(nzPosition || position) === 'right'\"\n        [class.ant-timeline-item-left]=\"(nzPosition || position) === 'left'\"\n        [class.ant-timeline-item-last]=\"isLast\"\n      >\n        <div *ngIf=\"nzLabel\" class=\"ant-timeline-item-label\">\n          <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div\n          class=\"ant-timeline-item-head\"\n          [class.ant-timeline-item-head-red]=\"nzColor === 'red'\"\n          [class.ant-timeline-item-head-blue]=\"nzColor === 'blue'\"\n          [class.ant-timeline-item-head-green]=\"nzColor === 'green'\"\n          [class.ant-timeline-item-head-gray]=\"nzColor === 'gray'\"\n          [class.ant-timeline-item-head-custom]=\"!!nzDot\"\n          [style.border-color]=\"borderColor\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"nzDot\">{{ nzDot }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-content></ng-content>\n        </div>\n      </li>\n    </ng-template>\n  `\n})\nexport class NzTimelineItemComponent implements OnChanges {\n  @ViewChild('template', { static: false }) template!: TemplateRef<void>;\n\n  @Input() nzPosition?: NzTimelinePosition;\n  @Input() nzColor: NzTimelineItemColor = 'blue';\n  @Input() nzDot?: string | TemplateRef<void>;\n  @Input() nzLabel?: string | TemplateRef<void>;\n\n  isLast = false;\n  borderColor: string | null = null;\n  position?: NzTimelinePosition;\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.timelineService.markForCheck();\n    if (changes.nzColor) {\n      this.updateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private updateCustomColor(): void {\n    this.borderColor = isDefaultColor(this.nzColor) ? null : this.nzColor;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineMode, NzTimelinePosition } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  providers: [TimelineService],\n  exportAs: 'nzTimeline',\n  template: `\n    <ul\n      class=\"ant-timeline\"\n      [class.ant-timeline-label]=\"hasLabelItem\"\n      [class.ant-timeline-right]=\"!hasLabelItem && nzMode === 'right'\"\n      [class.ant-timeline-alternate]=\"nzMode === 'alternate' || nzMode === 'custom'\"\n      [class.ant-timeline-pending]=\"!!nzPending\"\n      [class.ant-timeline-reverse]=\"nzReverse\"\n      [class.ant-timeline-rtl]=\"dir === 'rtl'\"\n    >\n      <!-- pending dot (reversed) -->\n      <ng-container *ngIf=\"nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- timeline items -->\n      <ng-container *ngFor=\"let item of timelineItems\">\n        <ng-template [ngTemplateOutlet]=\"item.template\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"!nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- pending dot -->\n    </ul>\n    <ng-template #pendingTemplate>\n      <li *ngIf=\"nzPending\" class=\"ant-timeline-item ant-timeline-item-pending\">\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div class=\"ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue\">\n          <ng-container *nzStringTemplateOutlet=\"nzPendingDot\">\n            {{ nzPendingDot }}\n            <i *ngIf=\"!nzPendingDot\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-container *nzStringTemplateOutlet=\"nzPending\">\n            {{ isPendingBoolean ? '' : nzPending }}\n          </ng-container>\n        </div>\n      </li>\n    </ng-template>\n    <!-- Grasp items -->\n    <ng-content></ng-content>\n  `\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  @ContentChildren(NzTimelineItemComponent) listOfItems!: QueryList<NzTimelineItemComponent>;\n\n  @Input() nzMode: NzTimelineMode = 'left';\n  @Input() nzPending?: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot?: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n  timelineItems: NzTimelineItemComponent[] = [];\n  dir: Direction = 'ltr';\n  hasLabelItem = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private timelineService: TimelineService,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzMode, nzReverse, nzPending } = changes;\n\n    if (simpleChangeActivated(nzMode) || simpleChangeActivated(nzReverse)) {\n      this.updateChildren();\n    }\n\n    if (nzPending) {\n      this.isPendingBoolean = nzPending.currentValue === true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.timelineService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n\n    this.listOfItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateChildren();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfItems && this.listOfItems.length) {\n      const length = this.listOfItems.length;\n      let hasLabelItem = false;\n\n      this.listOfItems.forEach((item: NzTimelineItemComponent, index: number) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position = getInferredTimelineItemPosition(index, this.nzMode);\n\n        if (!hasLabelItem && item.nzLabel) {\n          hasLabelItem = true;\n        }\n\n        item.detectChanges();\n      });\n\n      this.timelineItems = this.nzReverse ? this.listOfItems.toArray().reverse() : this.listOfItems.toArray();\n      this.hasLabelItem = hasLabelItem;\n    }\n\n    this.cdr.markForCheck();\n  }\n}\n\nfunction simpleChangeActivated(simpleChange?: SimpleChange): boolean {\n  return !!(simpleChange && (simpleChange.previousValue !== simpleChange.currentValue || simpleChange.isFirstChange()));\n}\n\nfunction getInferredTimelineItemPosition(index: number, mode: NzTimelineMode): NzTimelinePosition | undefined {\n  return mode === 'custom'\n    ? undefined\n    : mode === 'left'\n    ? 'left'\n    : mode === 'right'\n    ? 'right'\n    : mode === 'alternate' && index % 2 === 0\n    ? 'left'\n    : 'right';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { NzTimelineComponent } from './timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [BidiModule, CommonModule, PlatformModule, NzIconModule, NzOutletModule]\n})\nexport class NzTimelineModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './timeline-item.component';\nexport * from './timeline.component';\nexport * from './timeline.module';\nexport * from './timeline.service';\nexport { NzTimelineMode, NzTimelinePosition, NzTimelineItemColor } from './typings';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ReplaySubject","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","ViewChild","Input","Subject","takeUntil","Directionality","Optional","ContentChildren","NgModule","BidiModule","CommonModule","PlatformModule","NzIconModule","NzOutletModule"],"mappings":"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"}