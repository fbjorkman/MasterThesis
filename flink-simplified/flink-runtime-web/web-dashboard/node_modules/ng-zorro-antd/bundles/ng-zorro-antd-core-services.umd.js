(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('ng-zorro-antd/core/environments'), require('ng-zorro-antd/core/util'), require('@angular/common'), require('ng-zorro-antd/core/polyfill'), require('@angular/cdk/layout'), require('@angular/cdk/platform')) :
    typeof define === 'function' && define.amd ? define('ng-zorro-antd/core/services', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', 'ng-zorro-antd/core/environments', 'ng-zorro-antd/core/util', '@angular/common', 'ng-zorro-antd/core/polyfill', '@angular/cdk/layout', '@angular/cdk/platform'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ng-zorro-antd'] = global['ng-zorro-antd'] || {}, global['ng-zorro-antd'].core = global['ng-zorro-antd'].core || {}, global['ng-zorro-antd'].core.services = {}), global.ng.core, global.rxjs, global.rxjs.operators, global['ng-zorro-antd'].core.environments, global['ng-zorro-antd'].core.util, global.ng.common, global['ng-zorro-antd'].core.polyfill, global.ng.cdk.layout, global.ng.cdk.platform));
}(this, (function (exports, i0, rxjs, operators, environments, util, i1, polyfill, i2, i2$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    var NOOP = function () { };
    var ɵ0 = NOOP;
    var NzResizeService = /** @class */ (function () {
        function NzResizeService(ngZone, rendererFactory2) {
            var _this = this;
            this.ngZone = ngZone;
            this.rendererFactory2 = rendererFactory2;
            this.resizeSource$ = new rxjs.Subject();
            this.listeners = 0;
            this.disposeHandle = NOOP;
            this.handler = function () {
                _this.ngZone.run(function () {
                    _this.resizeSource$.next();
                });
            };
            this.renderer = this.rendererFactory2.createRenderer(null, null);
        }
        NzResizeService.prototype.subscribe = function () {
            var _this = this;
            this.registerListener();
            return this.resizeSource$.pipe(operators.auditTime(16), operators.finalize(function () { return _this.unregisterListener(); }));
        };
        NzResizeService.prototype.unsubscribe = function () {
            this.unregisterListener();
        };
        NzResizeService.prototype.registerListener = function () {
            var _this = this;
            if (this.listeners === 0) {
                this.ngZone.runOutsideAngular(function () {
                    _this.disposeHandle = _this.renderer.listen('window', 'resize', _this.handler);
                });
            }
            this.listeners += 1;
        };
        NzResizeService.prototype.unregisterListener = function () {
            this.listeners -= 1;
            if (this.listeners === 0) {
                this.disposeHandle();
                this.disposeHandle = NOOP;
            }
        };
        return NzResizeService;
    }());
    NzResizeService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NzResizeService_Factory() { return new NzResizeService(i0__namespace.ɵɵinject(i0__namespace.NgZone), i0__namespace.ɵɵinject(i0__namespace.RendererFactory2)); }, token: NzResizeService, providedIn: "root" });
    NzResizeService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NzResizeService.ctorParameters = function () { return [
        { type: i0.NgZone },
        { type: i0.RendererFactory2 }
    ]; };

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    /**
     * When running in test, singletons should not be destroyed. So we keep references of singletons
     * in this global variable.
     */
    var testSingleRegistry = new Map();
    /**
     * Some singletons should have life cycle that is same to Angular's. This service make sure that
     * those singletons get destroyed in HMR.
     */
    var NzSingletonService = /** @class */ (function () {
        function NzSingletonService() {
            /**
             * This registry is used to register singleton in dev mode.
             * So that singletons get destroyed when hot module reload happens.
             *
             * This works in prod mode too but with no specific effect.
             */
            this._singletonRegistry = new Map();
        }
        Object.defineProperty(NzSingletonService.prototype, "singletonRegistry", {
            get: function () {
                return environments.environment.isTestMode ? testSingleRegistry : this._singletonRegistry;
            },
            enumerable: false,
            configurable: true
        });
        NzSingletonService.prototype.registerSingletonWithKey = function (key, target) {
            var alreadyHave = this.singletonRegistry.has(key);
            var item = alreadyHave ? this.singletonRegistry.get(key) : this.withNewTarget(target);
            if (!alreadyHave) {
                this.singletonRegistry.set(key, item);
            }
        };
        NzSingletonService.prototype.getSingletonWithKey = function (key) {
            return this.singletonRegistry.has(key) ? this.singletonRegistry.get(key).target : null;
        };
        NzSingletonService.prototype.withNewTarget = function (target) {
            return {
                target: target
            };
        };
        return NzSingletonService;
    }());
    NzSingletonService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NzSingletonService_Factory() { return new NzSingletonService(); }, token: NzSingletonService, providedIn: "root" });
    NzSingletonService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    function getPagePosition(event) {
        var e = util.getEventPosition(event);
        return {
            x: e.pageX,
            y: e.pageY
        };
    }
    /**
     * This module provide a global dragging service to other components.
     */
    var NzDragService = /** @class */ (function () {
        function NzDragService(rendererFactory2) {
            this.draggingThreshold = 5;
            this.currentDraggingSequence = null;
            this.currentStartingPoint = null;
            this.handleRegistry = new Set();
            this.renderer = rendererFactory2.createRenderer(null, null);
        }
        NzDragService.prototype.requestDraggingSequence = function (event) {
            var _this = this;
            if (!this.handleRegistry.size) {
                this.registerDraggingHandler(util.isTouchEvent(event));
            }
            // Complete last dragging sequence if a new target is dragged.
            if (this.currentDraggingSequence) {
                this.currentDraggingSequence.complete();
            }
            this.currentStartingPoint = getPagePosition(event);
            this.currentDraggingSequence = new rxjs.Subject();
            return this.currentDraggingSequence.pipe(operators.map(function (e) { return ({
                x: e.pageX - _this.currentStartingPoint.x,
                y: e.pageY - _this.currentStartingPoint.y
            }); }), operators.filter(function (e) { return Math.abs(e.x) > _this.draggingThreshold || Math.abs(e.y) > _this.draggingThreshold; }), operators.finalize(function () { return _this.teardownDraggingSequence(); }));
        };
        NzDragService.prototype.registerDraggingHandler = function (isTouch) {
            var _this = this;
            if (isTouch) {
                this.handleRegistry.add({
                    teardown: this.renderer.listen('document', 'touchmove', function (e) {
                        if (_this.currentDraggingSequence) {
                            _this.currentDraggingSequence.next(e.touches[0] || e.changedTouches[0]);
                        }
                    })
                });
                this.handleRegistry.add({
                    teardown: this.renderer.listen('document', 'touchend', function () {
                        if (_this.currentDraggingSequence) {
                            _this.currentDraggingSequence.complete();
                        }
                    })
                });
            }
            else {
                this.handleRegistry.add({
                    teardown: this.renderer.listen('document', 'mousemove', function (e) {
                        if (_this.currentDraggingSequence) {
                            _this.currentDraggingSequence.next(e);
                        }
                    })
                });
                this.handleRegistry.add({
                    teardown: this.renderer.listen('document', 'mouseup', function () {
                        if (_this.currentDraggingSequence) {
                            _this.currentDraggingSequence.complete();
                        }
                    })
                });
            }
        };
        NzDragService.prototype.teardownDraggingSequence = function () {
            this.currentDraggingSequence = null;
        };
        return NzDragService;
    }());
    NzDragService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NzDragService_Factory() { return new NzDragService(i0__namespace.ɵɵinject(i0__namespace.RendererFactory2)); }, token: NzDragService, providedIn: "root" });
    NzDragService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NzDragService.ctorParameters = function () { return [
        { type: i0.RendererFactory2 }
    ]; };

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    function easeInOutCubic(t, b, c, d) {
        var cc = c - b;
        var tt = t / (d / 2);
        if (tt < 1) {
            return (cc / 2) * tt * tt * tt + b;
        }
        else {
            return (cc / 2) * ((tt -= 2) * tt * tt + 2) + b;
        }
    }
    var NzScrollService = /** @class */ (function () {
        function NzScrollService(doc) {
            this.doc = doc;
        }
        /** Set the position of the scroll bar of `el`. */
        NzScrollService.prototype.setScrollTop = function (el, topValue) {
            if (topValue === void 0) { topValue = 0; }
            if (el === window) {
                this.doc.body.scrollTop = topValue;
                this.doc.documentElement.scrollTop = topValue;
            }
            else {
                el.scrollTop = topValue;
            }
        };
        /** Get position of `el` against window. */
        NzScrollService.prototype.getOffset = function (el) {
            var ret = {
                top: 0,
                left: 0
            };
            if (!el || !el.getClientRects().length) {
                return ret;
            }
            var rect = el.getBoundingClientRect();
            if (rect.width || rect.height) {
                var doc = el.ownerDocument.documentElement;
                ret.top = rect.top - doc.clientTop;
                ret.left = rect.left - doc.clientLeft;
            }
            else {
                ret.top = rect.top;
                ret.left = rect.left;
            }
            return ret;
        };
        /** Get the position of the scoll bar of `el`. */
        // TODO: remove '| Window' as the fallback already happens here
        NzScrollService.prototype.getScroll = function (target, top) {
            if (top === void 0) { top = true; }
            if (typeof window === 'undefined') {
                return 0;
            }
            var method = top ? 'scrollTop' : 'scrollLeft';
            var result = 0;
            if (this.isWindow(target)) {
                result = target[top ? 'pageYOffset' : 'pageXOffset'];
            }
            else if (target instanceof Document) {
                result = target.documentElement[method];
            }
            else if (target) {
                result = target[method];
            }
            if (target && !this.isWindow(target) && typeof result !== 'number') {
                result = (target.ownerDocument || target).documentElement[method];
            }
            return result;
        };
        NzScrollService.prototype.isWindow = function (obj) {
            return obj !== null && obj !== undefined && obj === obj.window;
        };
        /**
         * Scroll `el` to some position with animation.
         *
         * @param containerEl container, `window` by default
         * @param y Scroll to `top`, 0 by default
         */
        NzScrollService.prototype.scrollTo = function (containerEl, y, options) {
            var _this = this;
            if (y === void 0) { y = 0; }
            if (options === void 0) { options = {}; }
            var target = containerEl ? containerEl : window;
            var scrollTop = this.getScroll(target);
            var startTime = Date.now();
            var easing = options.easing, callback = options.callback, _a = options.duration, duration = _a === void 0 ? 450 : _a;
            var frameFunc = function () {
                var timestamp = Date.now();
                var time = timestamp - startTime;
                var nextScrollTop = (easing || easeInOutCubic)(time > duration ? duration : time, scrollTop, y, duration);
                if (_this.isWindow(target)) {
                    target.scrollTo(window.pageXOffset, nextScrollTop);
                }
                else if (target instanceof HTMLDocument || target.constructor.name === 'HTMLDocument') {
                    target.documentElement.scrollTop = nextScrollTop;
                }
                else {
                    target.scrollTop = nextScrollTop;
                }
                if (time < duration) {
                    polyfill.reqAnimFrame(frameFunc);
                }
                else if (typeof callback === 'function') {
                    callback();
                }
            };
            polyfill.reqAnimFrame(frameFunc);
        };
        return NzScrollService;
    }());
    NzScrollService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NzScrollService_Factory() { return new NzScrollService(i0__namespace.ɵɵinject(i1__namespace.DOCUMENT)); }, token: NzScrollService, providedIn: "root" });
    NzScrollService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NzScrollService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] }
    ]; };

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    exports.NzBreakpointEnum = void 0;
    (function (NzBreakpointEnum) {
        NzBreakpointEnum["xxl"] = "xxl";
        NzBreakpointEnum["xl"] = "xl";
        NzBreakpointEnum["lg"] = "lg";
        NzBreakpointEnum["md"] = "md";
        NzBreakpointEnum["sm"] = "sm";
        NzBreakpointEnum["xs"] = "xs";
    })(exports.NzBreakpointEnum || (exports.NzBreakpointEnum = {}));
    var gridResponsiveMap = {
        xs: '(max-width: 575px)',
        sm: '(min-width: 576px)',
        md: '(min-width: 768px)',
        lg: '(min-width: 992px)',
        xl: '(min-width: 1200px)',
        xxl: '(min-width: 1600px)'
    };
    var siderResponsiveMap = {
        xs: '(max-width: 479.98px)',
        sm: '(max-width: 575.98px)',
        md: '(max-width: 767.98px)',
        lg: '(max-width: 991.98px)',
        xl: '(max-width: 1199.98px)',
        xxl: '(max-width: 1599.98px)'
    };
    var NzBreakpointService = /** @class */ (function () {
        function NzBreakpointService(resizeService, mediaMatcher) {
            this.resizeService = resizeService;
            this.mediaMatcher = mediaMatcher;
            this.resizeService.subscribe().subscribe(function () { });
        }
        NzBreakpointService.prototype.subscribe = function (breakpointMap, fullMap) {
            var _this = this;
            if (fullMap) {
                var get = function () { return _this.matchMedia(breakpointMap, true); };
                return this.resizeService.subscribe().pipe(operators.map(get), operators.startWith(get()), operators.distinctUntilChanged(function (x, y) { return x[0] === y[0]; }), operators.map(function (x) { return x[1]; }));
            }
            else {
                var get = function () { return _this.matchMedia(breakpointMap); };
                return this.resizeService.subscribe().pipe(operators.map(get), operators.startWith(get()), operators.distinctUntilChanged());
            }
        };
        NzBreakpointService.prototype.matchMedia = function (breakpointMap, fullMap) {
            var _this = this;
            var bp = exports.NzBreakpointEnum.md;
            var breakpointBooleanMap = {};
            Object.keys(breakpointMap).map(function (breakpoint) {
                var castBP = breakpoint;
                var matched = _this.mediaMatcher.matchMedia(gridResponsiveMap[castBP]).matches;
                breakpointBooleanMap[breakpoint] = matched;
                if (matched) {
                    bp = castBP;
                }
            });
            if (fullMap) {
                return [bp, breakpointBooleanMap];
            }
            else {
                return bp;
            }
        };
        return NzBreakpointService;
    }());
    NzBreakpointService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NzBreakpointService_Factory() { return new NzBreakpointService(i0__namespace.ɵɵinject(NzResizeService), i0__namespace.ɵɵinject(i2__namespace.MediaMatcher)); }, token: NzBreakpointService, providedIn: "root" });
    NzBreakpointService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NzBreakpointService.ctorParameters = function () { return [
        { type: NzResizeService },
        { type: i2.MediaMatcher }
    ]; };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var NzDestroyService = /** @class */ (function (_super) {
        __extends(NzDestroyService, _super);
        function NzDestroyService() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NzDestroyService.prototype.ngOnDestroy = function () {
            this.next();
            this.complete();
        };
        return NzDestroyService;
    }(rxjs.Subject));
    NzDestroyService.decorators = [
        { type: i0.Injectable }
    ];

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */
    var ImagePreloadService = /** @class */ (function () {
        function ImagePreloadService(document, platform) {
            this.document = document;
            this.platform = platform;
            this.counter = new Map();
            this.linkRefs = new Map();
        }
        ImagePreloadService.prototype.addPreload = function (option) {
            var _this = this;
            if (this.platform.isBrowser) {
                return function () { return void 0; };
            }
            var uniqueKey = "" + option.src + option.srcset;
            var currentCount = this.counter.get(uniqueKey) || 0;
            currentCount++;
            this.counter.set(uniqueKey, currentCount);
            if (!this.linkRefs.has(uniqueKey)) {
                var linkNode = this.appendPreloadLink(option);
                this.linkRefs.set(uniqueKey, linkNode);
            }
            return function () {
                if (_this.counter.has(uniqueKey)) {
                    var count = _this.counter.get(uniqueKey);
                    count--;
                    if (count === 0) {
                        var linkNode = _this.linkRefs.get(uniqueKey);
                        _this.removePreloadLink(linkNode);
                        _this.counter.delete(uniqueKey);
                        _this.linkRefs.delete(uniqueKey);
                    }
                    else {
                        _this.counter.set(uniqueKey, count);
                    }
                }
            };
        };
        ImagePreloadService.prototype.appendPreloadLink = function (option) {
            var linkNode = this.document.createElement('link');
            linkNode.setAttribute('rel', 'preload');
            linkNode.setAttribute('as', 'image');
            linkNode.setAttribute('href', option.src);
            if (option.srcset) {
                linkNode.setAttribute('imagesrcset', option.srcset);
            }
            this.document.head.appendChild(linkNode);
            return linkNode;
        };
        ImagePreloadService.prototype.removePreloadLink = function (linkNode) {
            if (this.document.head.contains(linkNode)) {
                this.document.head.removeChild(linkNode);
            }
        };
        return ImagePreloadService;
    }());
    ImagePreloadService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ImagePreloadService_Factory() { return new ImagePreloadService(i0__namespace.ɵɵinject(i1__namespace.DOCUMENT), i0__namespace.ɵɵinject(i2__namespace$1.Platform)); }, token: ImagePreloadService, providedIn: "root" });
    ImagePreloadService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ImagePreloadService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] },
        { type: i2$1.Platform }
    ]; };

    /**
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ImagePreloadService = ImagePreloadService;
    exports.NzBreakpointService = NzBreakpointService;
    exports.NzDestroyService = NzDestroyService;
    exports.NzDragService = NzDragService;
    exports.NzResizeService = NzResizeService;
    exports.NzScrollService = NzScrollService;
    exports.NzSingletonService = NzSingletonService;
    exports.gridResponsiveMap = gridResponsiveMap;
    exports.siderResponsiveMap = siderResponsiveMap;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-zorro-antd-core-services.umd.js.map
