{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkConnectedOverlay, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { NzOptionGroupComponent } from './option-group.component';\nimport { NzOptionComponent } from './option.component';\nimport { NzSelectTopControlComponent } from './select-top-control.component';\nimport { NzFilterOptionType, NzSelectItemInterface, NzSelectModeType, NzSelectOptionInterface } from './select.types';\nexport declare type NzSelectSizeType = 'large' | 'default' | 'small';\nexport declare class NzSelectComponent implements ControlValueAccessor, OnInit, AfterContentInit, OnChanges, OnDestroy {\n    private destroy$;\n    nzConfigService: NzConfigService;\n    private cdr;\n    private elementRef;\n    private platform;\n    private focusMonitor;\n    private directionality;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\n    static ngAcceptInputType_nzBorderless: BooleanInput;\n    static ngAcceptInputType_nzShowSearch: BooleanInput;\n    static ngAcceptInputType_nzLoading: BooleanInput;\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\n    static ngAcceptInputType_nzAutoClearSearchValue: BooleanInput;\n    static ngAcceptInputType_nzServerSearch: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzOpen: BooleanInput;\n    nzId: string | null;\n    nzSize: NzSelectSizeType;\n    nzOptionHeightPx: number;\n    nzOptionOverflowSize: number;\n    nzDropdownClassName: string | null;\n    nzDropdownMatchSelectWidth: boolean;\n    nzDropdownStyle: {\n        [key: string]: string;\n    } | null;\n    nzNotFoundContent: string | TemplateRef<NzSafeAny> | undefined;\n    nzPlaceHolder: string | TemplateRef<NzSafeAny> | null;\n    nzMaxTagCount: number;\n    nzDropdownRender: TemplateRef<NzSafeAny> | null;\n    nzCustomTemplate: TemplateRef<{\n        $implicit: NzSelectItemInterface;\n    }> | null;\n    nzSuffixIcon: TemplateRef<NzSafeAny> | string | null;\n    nzClearIcon: TemplateRef<NzSafeAny> | null;\n    nzRemoveIcon: TemplateRef<NzSafeAny> | null;\n    nzMenuItemSelectedIcon: TemplateRef<NzSafeAny> | null;\n    nzTokenSeparators: string[];\n    nzMaxTagPlaceholder: TemplateRef<{\n        $implicit: NzSafeAny[];\n    }> | null;\n    nzMaxMultipleCount: number;\n    nzMode: NzSelectModeType;\n    nzFilterOption: NzFilterOptionType;\n    compareWith: (o1: NzSafeAny, o2: NzSafeAny) => boolean;\n    nzAllowClear: boolean;\n    nzBorderless: boolean;\n    nzShowSearch: boolean;\n    nzLoading: boolean;\n    nzAutoFocus: boolean;\n    nzAutoClearSearchValue: boolean;\n    nzServerSearch: boolean;\n    nzDisabled: boolean;\n    nzOpen: boolean;\n    nzBackdrop: boolean;\n    nzOptions: NzSelectOptionInterface[];\n    set nzShowArrow(value: boolean);\n    get nzShowArrow(): boolean;\n    readonly nzOnSearch: EventEmitter<string>;\n    readonly nzScrollToBottom: EventEmitter<void>;\n    readonly nzOpenChange: EventEmitter<boolean>;\n    readonly nzBlur: EventEmitter<void>;\n    readonly nzFocus: EventEmitter<void>;\n    originElement: ElementRef;\n    cdkConnectedOverlay: CdkConnectedOverlay;\n    nzSelectTopControlComponent: NzSelectTopControlComponent;\n    listOfNzOptionComponent: QueryList<NzOptionComponent>;\n    listOfNzOptionGroupComponent: QueryList<NzOptionGroupComponent>;\n    nzOptionGroupComponentElement: ElementRef;\n    nzSelectTopControlComponentElement: ElementRef;\n    private listOfValue$;\n    private listOfTemplateItem$;\n    private listOfTagAndTemplateItem;\n    private searchValue;\n    private isReactiveDriven;\n    private value;\n    private _nzShowArrow;\n    onChange: OnChangeType;\n    onTouched: OnTouchedType;\n    dropDownPosition: 'top' | 'center' | 'bottom';\n    triggerWidth: number | null;\n    listOfContainerItem: NzSelectItemInterface[];\n    listOfTopItem: NzSelectItemInterface[];\n    activatedValue: NzSafeAny | null;\n    listOfValue: NzSafeAny[];\n    focused: boolean;\n    dir: Direction;\n    generateTagItem(value: string): NzSelectItemInterface;\n    onItemClick(value: NzSafeAny): void;\n    onItemDelete(item: NzSelectItemInterface): void;\n    onHostClick(): void;\n    updateListOfContainerItem(): void;\n    clearInput(): void;\n    updateListOfValue(listOfValue: NzSafeAny[]): void;\n    onTokenSeparate(listOfLabel: string[]): void;\n    onOverlayKeyDown(e: KeyboardEvent): void;\n    onKeyDown(e: KeyboardEvent): void;\n    setOpenState(value: boolean): void;\n    onOpenChange(): void;\n    onInputValueChange(value: string): void;\n    onClearSelection(): void;\n    onClickOutside(event: MouseEvent): void;\n    focus(): void;\n    blur(): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    updateCdkConnectedOverlayStatus(): void;\n    updateCdkConnectedOverlayPositions(): void;\n    constructor(destroy$: NzDestroyService, nzConfigService: NzConfigService, cdr: ChangeDetectorRef, elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\n    writeValue(modelValue: NzSafeAny | NzSafeAny[]): void;\n    registerOnChange(fn: OnChangeType): void;\n    registerOnTouched(fn: OnTouchedType): void;\n    setDisabledState(disabled: boolean): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}