{"version":3,"file":"col.directive.d.ts","sources":["col.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { AfterViewInit, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';\nimport { NzRowDirective } from './row.directive';\nexport interface EmbeddedProperty {\n    span?: number;\n    pull?: number;\n    push?: number;\n    offset?: number;\n    order?: number;\n}\nexport declare class NzColDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n    private elementRef;\n    nzRowDirective: NzRowDirective;\n    renderer: Renderer2;\n    private directionality;\n    private classMap;\n    private destroy$;\n    hostFlexStyle: string | null;\n    dir: Direction;\n    nzFlex: string | number | null;\n    nzSpan: string | number | null;\n    nzOrder: string | number | null;\n    nzOffset: string | number | null;\n    nzPush: string | number | null;\n    nzPull: string | number | null;\n    nzXs: string | number | EmbeddedProperty | null;\n    nzSm: string | number | EmbeddedProperty | null;\n    nzMd: string | number | EmbeddedProperty | null;\n    nzLg: string | number | EmbeddedProperty | null;\n    nzXl: string | number | EmbeddedProperty | null;\n    nzXXl: string | number | EmbeddedProperty | null;\n    setHostClassMap(): void;\n    setHostFlexStyle(): void;\n    parseFlex(flex: number | string | null): string | null;\n    generateClass(): object;\n    constructor(elementRef: ElementRef, nzRowDirective: NzRowDirective, renderer: Renderer2, directionality: Directionality);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}